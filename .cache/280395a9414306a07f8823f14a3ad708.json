{"dependencies":[{"name":"/Users/ervinewell/Projects/hedge-editor/package.json","includedInParent":true,"mtime":1527089705397},{"name":"/Users/ervinewell/Projects/hedge-editor/node_modules/prosemirror-commands/node_modules/prosemirror-state/package.json","includedInParent":true,"mtime":1527089443682},{"name":"prosemirror-model","loc":{"line":5,"column":31}},{"name":"prosemirror-transform","loc":{"line":6,"column":35}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar prosemirrorModel = require('prosemirror-model');\nvar prosemirrorTransform = require('prosemirror-transform');\n\nvar classesById = Object.create(null);\n\n// ::- Superclass for editor selections. Every selection type should\n// extend this. Should not be instantiated directly.\nvar Selection = function Selection($anchor, $head, ranges) {\n  // :: [SelectionRange]\n  // The ranges covered by the selection.\n  this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n  // :: ResolvedPos\n  // The resolved anchor of the selection (the side that stays in\n  // place when the selection is modified).\n  this.$anchor = $anchor;\n  // :: ResolvedPos\n  // The resolved head of the selection (the side that moves when\n  // the selection is modified).\n  this.$head = $head;\n};\n\nvar prototypeAccessors = { anchor: {},head: {},from: {},to: {},$from: {},$to: {},empty: {} };\n\n// :: number\n// The selection's anchor, as an unresolved position.\nprototypeAccessors.anchor.get = function () { return this.$anchor.pos };\n\n// :: number\n// The selection's head.\nprototypeAccessors.head.get = function () { return this.$head.pos };\n\n// :: number\n// The lower bound of the selection's main range.\nprototypeAccessors.from.get = function () { return this.$from.pos };\n\n// :: number\n// The upper bound of the selection's main range.\nprototypeAccessors.to.get = function () { return this.$to.pos };\n\n// :: ResolvedPos\n// The resolved lowerbound of the selection's main range.\nprototypeAccessors.$from.get = function () {\n  return this.ranges[0].$from\n};\n\n// :: ResolvedPos\n// The resolved upper bound of the selection's main range.\nprototypeAccessors.$to.get = function () {\n  return this.ranges[0].$to\n};\n\n// :: bool\n// Indicates whether the selection contains any content.\nprototypeAccessors.empty.get = function () {\n  var ranges = this.ranges;\n  for (var i = 0; i < ranges.length; i++)\n    { if (ranges[i].$from.pos != ranges[i].$to.pos) { return false } }\n  return true\n};\n\n// eq:: (Selection) → bool\n// Test whether the selection is the same as another selection.\n\n// map:: (doc: Node, mapping: Mappable) → Selection\n// Map this selection through a [mappable](#transform.Mappable) thing. `doc`\n// should be the new document to which we are mapping.\n\n// :: () → Slice\n// Get the content of this selection as a slice.\nSelection.prototype.content = function content () {\n  return this.$from.node(0).slice(this.from, this.to, true)\n};\n\n// :: (Transaction, ?Slice)\n// Replace the selection with a slice or, if no slice is given,\n// delete the selection. Will append to the given transaction.\nSelection.prototype.replace = function replace (tr, content) {\n    if ( content === void 0 ) content = prosemirrorModel.Slice.empty;\n\n  // Put the new selection at the position after the inserted\n  // content. When that ended in an inline node, search backwards,\n  // to get the position after that node. If not, search forward.\n  var lastNode = content.content.lastChild, lastParent = null;\n  for (var i = 0; i < content.openEnd; i++) {\n    lastParent = lastNode;\n    lastNode = lastNode.lastChild;\n  }\n\n  var mapFrom = tr.steps.length, ranges = this.ranges;\n  for (var i$1 = 0; i$1 < ranges.length; i$1++) {\n    var ref = ranges[i$1];\n      var $from = ref.$from;\n      var $to = ref.$to;\n      var mapping = tr.mapping.slice(mapFrom);\n    tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i$1 ? prosemirrorModel.Slice.empty : content);\n    if (i$1 == 0)\n      { selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1); }\n  }\n};\n\n// :: (Transaction, Node)\n// Replace the selection with the given node, appending the changes\n// to the given transaction.\nSelection.prototype.replaceWith = function replaceWith (tr, node) {\n  var mapFrom = tr.steps.length, ranges = this.ranges;\n  for (var i = 0; i < ranges.length; i++) {\n    var ref = ranges[i];\n      var $from = ref.$from;\n      var $to = ref.$to;\n      var mapping = tr.mapping.slice(mapFrom);\n    var from = mapping.map($from.pos), to = mapping.map($to.pos);\n    if (i) {\n      tr.deleteRange(from, to);\n    } else {\n      tr.replaceRangeWith(from, to, node);\n      selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n    }\n  }\n};\n\n// toJSON:: () → Object\n// Convert the selection to a JSON representation. When implementing\n// this for a custom selection class, make sure to give the object a\n// `type` property whose value matches the ID under which you\n// [registered](#state.Selection^jsonID) your class.\n\n// :: (ResolvedPos, number, ?bool) → ?Selection\n// Find a valid cursor or leaf node selection starting at the given\n// position and searching back if `dir` is negative, and forward if\n// positive. When `textOnly` is true, only consider cursor\n// selections. Will return null when no valid selection position is\n// found.\nSelection.findFrom = function findFrom ($pos, dir, textOnly) {\n  var inner = $pos.parent.inlineContent ? new TextSelection($pos)\n      : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n  if (inner) { return inner }\n\n  for (var depth = $pos.depth - 1; depth >= 0; depth--) {\n    var found = dir < 0\n        ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n        : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n    if (found) { return found }\n  }\n};\n\n// :: (ResolvedPos, ?number) → Selection\n// Find a valid cursor or leaf node selection near the given\n// position. Searches forward first by default, but if `bias` is\n// negative, it will search backwards first.\nSelection.near = function near ($pos, bias) {\n    if ( bias === void 0 ) bias = 1;\n\n  return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0))\n};\n\n// :: (Node) → Selection\n// Find the cursor or leaf node selection closest to the start of\n// the given document. Will return an\n// [`AllSelection`](#state.AllSelection) if no valid position\n// exists.\nSelection.atStart = function atStart (doc) {\n  return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc)\n};\n\n// :: (Node) → Selection\n// Find the cursor or leaf node selection closest to the end of the\n// given document.\nSelection.atEnd = function atEnd (doc) {\n  return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc)\n};\n\n// :: (Node, Object) → Selection\n// Deserialize the JSON representation of a selection. Must be\n// implemented for custom classes (as a static class method).\nSelection.fromJSON = function fromJSON (doc, json) {\n  if (!json || !json.type) { throw new RangeError(\"Invalid input for Selection.fromJSON\") }\n  var cls = classesById[json.type];\n  if (!cls) { throw new RangeError((\"No selection type \" + (json.type) + \" defined\")) }\n  return cls.fromJSON(doc, json)\n};\n\n// :: (string, constructor<Selection>)\n// To be able to deserialize selections from JSON, custom selection\n// classes must register themselves with an ID string, so that they\n// can be disambiguated. Try to pick something that's unlikely to\n// clash with classes from other modules.\nSelection.jsonID = function jsonID (id, selectionClass) {\n  if (id in classesById) { throw new RangeError(\"Duplicate use of selection JSON ID \" + id) }\n  classesById[id] = selectionClass;\n  selectionClass.prototype.jsonID = id;\n  return selectionClass\n};\n\n// :: () → SelectionBookmark\n// Get a [bookmark](#state.SelectionBookmark) for this selection,\n// which is a value that can be mapped without having access to a\n// current document, and later resolved to a real selection for a\n// given document again. (This is used mostly by the history to\n// track and restore old selections.) The default implementation of\n// this method just converts the selection to a text selection and\n// returns the bookmark for that.\nSelection.prototype.getBookmark = function getBookmark () {\n  return TextSelection.between(this.anchor, this.head).getBookmark()\n};\n\nObject.defineProperties( Selection.prototype, prototypeAccessors );\n\n// :: bool\n// Controls whether, when a selection of this type is active in the\n// browser, the selected range should be visible to the user. Defaults\n// to `true`.\nSelection.prototype.visible = true;\n\n// SelectionBookmark:: interface\n// A lightweight, document-independent representation of a selection.\n// You can define a custom bookmark type for a custom selection class\n// to make the history handle it well.\n//\n//   map:: (mapping: Mapping) → SelectionBookmark\n//   Map the bookmark through a set of changes.\n//\n//   resolve:: (doc: Node) → Selection\n//   Resolve the bookmark to a real selection again. This may need to\n//   do some error checking and may fall back to a default (usually\n//   [`TextSelection.between`](#state.TextSelection^between)) if\n//   mapping made the bookmark invalid.\n\n// ::- Represents a selected range in a document.\nvar SelectionRange = function SelectionRange($from, $to) {\n  // :: ResolvedPos\n  // The lower bound of the range.\n  this.$from = $from;\n  // :: ResolvedPos\n  // The upper bound of the range.\n  this.$to = $to;\n};\n\n// ::- A text selection represents a classical editor selection, with\n// a head (the moving side) and anchor (immobile side), both of which\n// point into textblock nodes. It can be empty (a regular cursor\n// position).\nvar TextSelection = (function (Selection) {\n  function TextSelection($anchor, $head) {\n    if ( $head === void 0 ) $head = $anchor;\n\n    Selection.call(this, $anchor, $head);\n  }\n\n  if ( Selection ) TextSelection.__proto__ = Selection;\n  TextSelection.prototype = Object.create( Selection && Selection.prototype );\n  TextSelection.prototype.constructor = TextSelection;\n\n  var prototypeAccessors$1 = { $cursor: {} };\n\n  // :: ?ResolvedPos\n  // Returns a resolved position if this is a cursor selection (an\n  // empty text selection), and null otherwise.\n  prototypeAccessors$1.$cursor.get = function () { return this.$anchor.pos == this.$head.pos ? this.$head : null };\n\n  TextSelection.prototype.map = function map (doc, mapping) {\n    var $head = doc.resolve(mapping.map(this.head));\n    if (!$head.parent.inlineContent) { return Selection.near($head) }\n    var $anchor = doc.resolve(mapping.map(this.anchor));\n    return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head)\n  };\n\n  TextSelection.prototype.replace = function replace (tr, content) {\n    if ( content === void 0 ) content = prosemirrorModel.Slice.empty;\n\n    Selection.prototype.replace.call(this, tr, content);\n    if (content == prosemirrorModel.Slice.empty) {\n      var marks = this.$from.marksAcross(this.$to);\n      if (marks) { tr.ensureMarks(marks); }\n    }\n  };\n\n  TextSelection.prototype.eq = function eq (other) {\n    return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head\n  };\n\n  TextSelection.prototype.getBookmark = function getBookmark () {\n    return new TextBookmark(this.anchor, this.head)\n  };\n\n  TextSelection.prototype.toJSON = function toJSON () {\n    return {type: \"text\", anchor: this.anchor, head: this.head}\n  };\n\n  TextSelection.fromJSON = function fromJSON (doc, json) {\n    if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n      { throw new RangeError(\"Invalid input for TextSelection.fromJSON\") }\n    return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  };\n\n  // :: (Node, number, ?number) → TextSelection\n  // Create a text selection from non-resolved positions.\n  TextSelection.create = function create (doc, anchor, head) {\n    if ( head === void 0 ) head = anchor;\n\n    var $anchor = doc.resolve(anchor);\n    return new this($anchor, head == anchor ? $anchor : doc.resolve(head))\n  };\n\n  // :: (ResolvedPos, ResolvedPos, ?number) → Selection\n  // Return a text selection that spans the given positions or, if\n  // they aren't text positions, find a text selection near them.\n  // `bias` determines whether the method searches forward (default)\n  // or backwards (negative number) first. Will fall back to calling\n  // [`Selection.near`](#state.Selection^near) when the document\n  // doesn't contain a valid text position.\n  TextSelection.between = function between ($anchor, $head, bias) {\n    var dPos = $anchor.pos - $head.pos;\n    if (!bias || dPos) { bias = dPos >= 0 ? 1 : -1; }\n    if (!$head.parent.inlineContent) {\n      var found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n      if (found) { $head = found.$head; }\n      else { return Selection.near($head, bias) }\n    }\n    if (!$anchor.parent.inlineContent) {\n      if (dPos == 0) {\n        $anchor = $head;\n      } else {\n        $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n        if (($anchor.pos < $head.pos) != (dPos < 0)) { $anchor = $head; }\n      }\n    }\n    return new TextSelection($anchor, $head)\n  };\n\n  Object.defineProperties( TextSelection.prototype, prototypeAccessors$1 );\n\n  return TextSelection;\n}(Selection));\n\nSelection.jsonID(\"text\", TextSelection);\n\nvar TextBookmark = function TextBookmark(anchor, head) {\n  this.anchor = anchor;\n  this.head = head;\n};\nTextBookmark.prototype.map = function map (mapping) {\n  return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head))\n};\nTextBookmark.prototype.resolve = function resolve (doc) {\n  return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head))\n};\n\n// ::- A node selection is a selection that points at a single node.\n// All nodes marked [selectable](#model.NodeSpec.selectable) can be\n// the target of a node selection. In such a selection, `from` and\n// `to` point directly before and after the selected node, `anchor`\n// equals `from`, and `head` equals `to`..\nvar NodeSelection = (function (Selection) {\n  function NodeSelection($pos) {\n    var node = $pos.nodeAfter;\n    var $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n    Selection.call(this, $pos, $end);\n    // :: Node The selected node.\n    this.node = node;\n  }\n\n  if ( Selection ) NodeSelection.__proto__ = Selection;\n  NodeSelection.prototype = Object.create( Selection && Selection.prototype );\n  NodeSelection.prototype.constructor = NodeSelection;\n\n  NodeSelection.prototype.map = function map (doc, mapping) {\n    var ref = mapping.mapResult(this.anchor);\n    var deleted = ref.deleted;\n    var pos = ref.pos;\n    var $pos = doc.resolve(pos);\n    if (deleted) { return Selection.near($pos) }\n    return new NodeSelection($pos)\n  };\n\n  NodeSelection.prototype.content = function content () {\n    return new prosemirrorModel.Slice(prosemirrorModel.Fragment.from(this.node), 0, 0)\n  };\n\n  NodeSelection.prototype.eq = function eq (other) {\n    return other instanceof NodeSelection && other.anchor == this.anchor\n  };\n\n  NodeSelection.prototype.toJSON = function toJSON () {\n    return {type: \"node\", anchor: this.anchor}\n  };\n\n  NodeSelection.prototype.getBookmark = function getBookmark () { return new NodeBookmark(this.anchor) };\n\n  NodeSelection.fromJSON = function fromJSON (doc, json) {\n    if (typeof json.anchor != \"number\")\n      { throw new RangeError(\"Invalid input for NodeSelection.fromJSON\") }\n    return new NodeSelection(doc.resolve(json.anchor))\n  };\n\n  // :: (Node, number) → NodeSelection\n  // Create a node selection from non-resolved positions.\n  NodeSelection.create = function create (doc, from) {\n    return new this(doc.resolve(from))\n  };\n\n  // :: (Node) → bool\n  // Determines whether the given node may be selected as a node\n  // selection.\n  NodeSelection.isSelectable = function isSelectable (node) {\n    return !node.isText && node.type.spec.selectable !== false\n  };\n\n  return NodeSelection;\n}(Selection));\n\nNodeSelection.prototype.visible = false;\n\nSelection.jsonID(\"node\", NodeSelection);\n\nvar NodeBookmark = function NodeBookmark(anchor) {\n  this.anchor = anchor;\n};\nNodeBookmark.prototype.map = function map (mapping) {\n  var ref = mapping.mapResult(this.anchor);\n    var deleted = ref.deleted;\n    var pos = ref.pos;\n  return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos)\n};\nNodeBookmark.prototype.resolve = function resolve (doc) {\n  var $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n  if (node && NodeSelection.isSelectable(node)) { return new NodeSelection($pos) }\n  return Selection.near($pos)\n};\n\n// ::- A selection type that represents selecting the whole document\n// (which can not necessarily be expressed with a text selection, when\n// there are for example leaf block nodes at the start or end of the\n// document).\nvar AllSelection = (function (Selection) {\n  function AllSelection(doc) {\n    Selection.call(this, doc.resolve(0), doc.resolve(doc.content.size));\n  }\n\n  if ( Selection ) AllSelection.__proto__ = Selection;\n  AllSelection.prototype = Object.create( Selection && Selection.prototype );\n  AllSelection.prototype.constructor = AllSelection;\n\n  AllSelection.prototype.toJSON = function toJSON () { return {type: \"all\"} };\n\n  AllSelection.fromJSON = function fromJSON (doc) { return new AllSelection(doc) };\n\n  AllSelection.prototype.map = function map (doc) { return new AllSelection(doc) };\n\n  AllSelection.prototype.eq = function eq (other) { return other instanceof AllSelection };\n\n  AllSelection.prototype.getBookmark = function getBookmark () { return AllBookmark };\n\n  return AllSelection;\n}(Selection));\n\nSelection.jsonID(\"all\", AllSelection);\n\nvar AllBookmark = {\n  map: function map() { return this },\n  resolve: function resolve(doc) { return new AllSelection(doc) }\n};\n\n// FIXME we'll need some awareness of text direction when scanning for selections\n\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text) {\n  if (node.inlineContent) { return TextSelection.create(doc, pos) }\n  for (var i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n    var child = node.child(i);\n    if (!child.isAtom) {\n      var inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n      if (inner) { return inner }\n    } else if (!text && NodeSelection.isSelectable(child)) {\n      return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0))\n    }\n    pos += child.nodeSize * dir;\n  }\n}\n\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n  var last = tr.steps.length - 1;\n  if (last < startLen) { return }\n  var step = tr.steps[last];\n  if (!(step instanceof prosemirrorTransform.ReplaceStep || step instanceof prosemirrorTransform.ReplaceAroundStep)) { return }\n  var map = tr.mapping.maps[last], end;\n  map.forEach(function (_from, _to, _newFrom, newTo) { if (end == null) { end = newTo; } });\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nvar UPDATED_SEL = 1;\nvar UPDATED_MARKS = 2;\nvar UPDATED_SCROLL = 4;\n\n// ::- An editor state transaction, which can be applied to a state to\n// create an updated state. Use\n// [`EditorState.tr`](#state.EditorState.tr) to create an instance.\n//\n// Transactions track changes to the document (they are a subclass of\n// [`Transform`](#transform.Transform)), but also other state changes,\n// like selection updates and adjustments of the set of [stored\n// marks](#state.EditorState.storedMarks). In addition, you can store\n// metadata properties in a transaction, which are extra pieces of\n// information that client code or plugins can use to describe what a\n// transacion represents, so that they can update their [own\n// state](#state.StateField) accordingly.\n//\n// The [editor view](#view.EditorView) uses a few metadata properties:\n// it will attach a property `\"pointer\"` with the value `true` to\n// selection transactions directly caused by mouse or touch input, and\n// a `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\nvar Transaction = (function (Transform$$1) {\n  function Transaction(state) {\n    Transform$$1.call(this, state.doc);\n    // :: number\n    // The timestamp associated with this transaction, in the same\n    // format as `Date.now()`.\n    this.time = Date.now();\n    this.curSelection = state.selection;\n    // The step count for which the current selection is valid.\n    this.curSelectionFor = 0;\n    // :: ?[Mark]\n    // The stored marks set by this transaction, if any.\n    this.storedMarks = state.storedMarks;\n    // Bitfield to track which aspects of the state were updated by\n    // this transaction.\n    this.updated = 0;\n    // Object used to store metadata properties for the transaction.\n    this.meta = Object.create(null);\n  }\n\n  if ( Transform$$1 ) Transaction.__proto__ = Transform$$1;\n  Transaction.prototype = Object.create( Transform$$1 && Transform$$1.prototype );\n  Transaction.prototype.constructor = Transaction;\n\n  var prototypeAccessors = { selection: {},selectionSet: {},storedMarksSet: {},isGeneric: {},scrolledIntoView: {} };\n\n  // :: Selection\n  // The transaction's current selection. This defaults to the editor\n  // selection [mapped](#state.Selection.map) through the steps in the\n  // transaction, but can be overwritten with\n  // [`setSelection`](#state.Transaction.setSelection).\n  prototypeAccessors.selection.get = function () {\n    if (this.curSelectionFor < this.steps.length) {\n      this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n      this.curSelectionFor = this.steps.length;\n    }\n    return this.curSelection\n  };\n\n  // :: (Selection) → Transaction\n  // Update the transaction's current selection. Will determine the\n  // selection that the editor gets when the transaction is applied.\n  Transaction.prototype.setSelection = function setSelection (selection) {\n    this.curSelection = selection;\n    this.curSelectionFor = this.steps.length;\n    this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n    this.storedMarks = null;\n    return this\n  };\n\n  // :: bool\n  // Whether the selection was explicitly updated by this transaction.\n  prototypeAccessors.selectionSet.get = function () {\n    return (this.updated & UPDATED_SEL) > 0\n  };\n\n  // :: (?[Mark]) → Transaction\n  // Set the current stored marks.\n  Transaction.prototype.setStoredMarks = function setStoredMarks (marks) {\n    this.storedMarks = marks;\n    this.updated |= UPDATED_MARKS;\n    return this\n  };\n\n  // :: ([Mark]) → Transaction\n  // Make sure the current stored marks or, if that is null, the marks\n  // at the selection, match the given set of marks. Does nothing if\n  // this is already the case.\n  Transaction.prototype.ensureMarks = function ensureMarks (marks) {\n    if (!prosemirrorModel.Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n      { this.setStoredMarks(marks); }\n    return this\n  };\n\n  // :: (Mark) → Transaction\n  // Add a mark to the set of stored marks.\n  Transaction.prototype.addStoredMark = function addStoredMark (mark) {\n    return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()))\n  };\n\n  // :: (union<Mark, MarkType>) → Transaction\n  // Remove a mark or mark type from the set of stored marks.\n  Transaction.prototype.removeStoredMark = function removeStoredMark (mark) {\n    return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()))\n  };\n\n  // :: bool\n  // Whether the stored marks were explicitly set for this transaction.\n  prototypeAccessors.storedMarksSet.get = function () {\n    return (this.updated & UPDATED_MARKS) > 0\n  };\n\n  Transaction.prototype.addStep = function addStep (step, doc) {\n    Transform$$1.prototype.addStep.call(this, step, doc);\n    this.updated = this.updated & ~UPDATED_MARKS;\n    this.storedMarks = null;\n  };\n\n  // :: (number) → Transaction\n  // Update the timestamp for the transaction.\n  Transaction.prototype.setTime = function setTime (time) {\n    this.time = time;\n    return this\n  };\n\n  // :: (Slice) → Transaction\n  // Replace the current selection with the given slice.\n  Transaction.prototype.replaceSelection = function replaceSelection (slice) {\n    this.selection.replace(this, slice);\n    return this\n  };\n\n  // :: (Node, ?bool) → Transaction\n  // Replace the selection with the given node. When `inheritMarks` is\n  // true and the content is inline, it inherits the marks from the\n  // place where it is inserted.\n  Transaction.prototype.replaceSelectionWith = function replaceSelectionWith (node, inheritMarks) {\n    var selection = this.selection;\n    if (inheritMarks !== false)\n      { node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || prosemirrorModel.Mark.none))); }\n    selection.replaceWith(this, node);\n    return this\n  };\n\n  // :: () → Transaction\n  // Delete the selection.\n  Transaction.prototype.deleteSelection = function deleteSelection () {\n    this.selection.replace(this);\n    return this\n  };\n\n  // :: (string, from: ?number, to: ?number) → Transaction\n  // Replace the given range, or the selection if no range is given,\n  // with a text node containing the given string.\n  Transaction.prototype.insertText = function insertText (text, from, to) {\n    if ( to === void 0 ) to = from;\n\n    var schema = this.doc.type.schema;\n    if (from == null) {\n      if (!text) { return this.deleteSelection() }\n      return this.replaceSelectionWith(schema.text(text), true)\n    } else {\n      if (!text) { return this.deleteRange(from, to) }\n      var marks = this.storedMarks;\n      if (!marks) {\n        var $from = this.doc.resolve(from);\n        marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n      }\n      return this.replaceRangeWith(from, to, schema.text(text, marks))\n    }\n  };\n\n  // :: (union<string, Plugin, PluginKey>, any) → Transaction\n  // Store a metadata property in this transaction, keyed either by\n  // name or by plugin.\n  Transaction.prototype.setMeta = function setMeta (key, value) {\n    this.meta[typeof key == \"string\" ? key : key.key] = value;\n    return this\n  };\n\n  // :: (union<string, Plugin, PluginKey>) → any\n  // Retrieve a metadata property for a given name or plugin.\n  Transaction.prototype.getMeta = function getMeta (key) {\n    return this.meta[typeof key == \"string\" ? key : key.key]\n  };\n\n  // :: bool\n  // Returns true if this transaction doesn't contain any metadata,\n  // and can thus safely be extended.\n  prototypeAccessors.isGeneric.get = function () {\n    var this$1 = this;\n\n    for (var _ in this$1.meta) { return false }\n    return true\n  };\n\n  // :: () → Transaction\n  // Indicate that the editor should scroll the selection into view\n  // when updated to the state produced by this transaction.\n  Transaction.prototype.scrollIntoView = function scrollIntoView () {\n    this.updated |= UPDATED_SCROLL;\n    return this\n  };\n\n  prototypeAccessors.scrolledIntoView.get = function () {\n    return (this.updated & UPDATED_SCROLL) > 0\n  };\n\n  Object.defineProperties( Transaction.prototype, prototypeAccessors );\n\n  return Transaction;\n}(prosemirrorTransform.Transform));\n\nfunction bind(f, self) {\n  return !self || !f ? f : f.bind(self)\n}\n\nvar FieldDesc = function FieldDesc(name, desc, self) {\n  this.name = name;\n  this.init = bind(desc.init, self);\n  this.apply = bind(desc.apply, self);\n};\n\nvar baseFields = [\n  new FieldDesc(\"doc\", {\n    init: function init(config) { return config.doc || config.schema.topNodeType.createAndFill() },\n    apply: function apply(tr) { return tr.doc }\n  }),\n\n  new FieldDesc(\"selection\", {\n    init: function init(config, instance) { return config.selection || Selection.atStart(instance.doc) },\n    apply: function apply(tr) { return tr.selection }\n  }),\n\n  new FieldDesc(\"storedMarks\", {\n    init: function init(config) { return config.storedMarks || null },\n    apply: function apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null }\n  }),\n\n  new FieldDesc(\"scrollToSelection\", {\n    init: function init() { return 0 },\n    apply: function apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev }\n  })\n];\n\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nvar Configuration = function Configuration(schema, plugins) {\n  var this$1 = this;\n\n  this.schema = schema;\n  this.fields = baseFields.concat();\n  this.plugins = [];\n  this.pluginsByKey = Object.create(null);\n  if (plugins) { plugins.forEach(function (plugin) {\n    if (this$1.pluginsByKey[plugin.key])\n      { throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\") }\n    this$1.plugins.push(plugin);\n    this$1.pluginsByKey[plugin.key] = plugin;\n    if (plugin.spec.state)\n      { this$1.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin)); }\n  }); }\n};\n\n// ::- The state of a ProseMirror editor is represented by an object\n// of this type. A state is a persistent data structure—it isn't\n// updated, but rather a new state value is computed from an old one\n// using the [`apply`](#state.EditorState.apply) method.\n//\n// A state holds a number of built-in fields, and plugins can\n// [define](#state.PluginSpec.state) additional fields.\nvar EditorState = function EditorState(config) {\n  this.config = config;\n};\n\nvar prototypeAccessors$1 = { schema: {},plugins: {},tr: {} };\n\n// doc:: Node\n// The current document.\n\n// selection:: Selection\n// The selection.\n\n// storedMarks:: ?[Mark]\n// A set of marks to apply to the next input. Will be null when\n// no explicit marks have been set.\n\n// :: Schema\n// The schema of the state's document.\nprototypeAccessors$1.schema.get = function () {\n  return this.config.schema\n};\n\n// :: [Plugin]\n// The plugins that are active in this state.\nprototypeAccessors$1.plugins.get = function () {\n  return this.config.plugins\n};\n\n// :: (Transaction) → EditorState\n// Apply the given transaction to produce a new state.\nEditorState.prototype.apply = function apply (tr) {\n  return this.applyTransaction(tr).state\n};\n\n// : (Transaction) → ?Transaction\nEditorState.prototype.filterTransaction = function filterTransaction (tr, ignore) {\n    var this$1 = this;\n    if ( ignore === void 0 ) ignore = -1;\n\n  for (var i = 0; i < this.config.plugins.length; i++) { if (i != ignore) {\n    var plugin = this$1.config.plugins[i];\n    if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this$1))\n      { return false }\n  } }\n  return true\n};\n\n// :: (Transaction) → {state: EditorState, transactions: [Transaction]}\n// Verbose variant of [`apply`](#state.EditorState.apply) that\n// returns the precise transactions that were applied (which might\n// be influenced by the [transaction\n// hooks](#state.PluginSpec.filterTransaction) of\n// plugins) along with the new state.\nEditorState.prototype.applyTransaction = function applyTransaction (tr) {\n    var this$1 = this;\n\n  if (!this.filterTransaction(tr)) { return {state: this, transactions: []} }\n\n  var trs = [tr], newState = this.applyInner(tr), seen = null;\n  // This loop repeatedly gives plugins a chance to respond to\n  // transactions as new transactions are added, making sure to only\n  // pass the transactions the plugin did not see before.\n  outer: for (;;) {\n    var haveNew = false;\n    for (var i = 0; i < this.config.plugins.length; i++) {\n      var plugin = this$1.config.plugins[i];\n      if (plugin.spec.appendTransaction) {\n        var n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this$1;\n        var tr$1 = n < trs.length &&\n            plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n        if (tr$1 && newState.filterTransaction(tr$1, i)) {\n          tr$1.setMeta(\"appendedTransaction\", tr$1);\n          if (!seen) {\n            seen = [];\n            for (var j = 0; j < this.config.plugins.length; j++)\n              { seen.push(j < i ? {state: newState, n: trs.length} : {state: this$1, n: 0}); }\n          }\n          trs.push(tr$1);\n          newState = newState.applyInner(tr$1);\n          haveNew = true;\n        }\n        if (seen) { seen[i] = {state: newState, n: trs.length}; }\n      }\n    }\n    if (!haveNew) { return {state: newState, transactions: trs} }\n  }\n};\n\n// : (Transaction) → EditorState\nEditorState.prototype.applyInner = function applyInner (tr) {\n    var this$1 = this;\n\n  if (!tr.before.eq(this.doc)) { throw new RangeError(\"Applying a mismatched transaction\") }\n  var newInstance = new EditorState(this.config), fields = this.config.fields;\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    newInstance[field.name] = field.apply(tr, this$1[field.name], this$1, newInstance);\n  }\n  for (var i$1 = 0; i$1 < applyListeners.length; i$1++) { applyListeners[i$1](this$1, tr, newInstance); }\n  return newInstance\n};\n\n// :: Transaction\n// Start a [transaction](#state.Transaction) from this state.\nprototypeAccessors$1.tr.get = function () { return new Transaction(this) };\n\n// :: (Object) → EditorState\n// Create a new state.\n//\n// config::- Configuration options. Must contain `schema` or `doc` (or both).\n//\n//    schema:: ?Schema\n//    The schema to use.\n//\n//    doc:: ?Node\n//    The starting document.\n//\n//    selection:: ?Selection\n//    A valid selection in the document.\n//\n//    storedMarks:: ?[Mark]\n//    The initial set of [stored marks](#state.EditorState.storedMarks).\n//\n//    plugins:: ?[Plugin]\n//    The plugins that should be active in this state.\nEditorState.create = function create (config) {\n  var $config = new Configuration(config.schema || config.doc.type.schema, config.plugins);\n  var instance = new EditorState($config);\n  for (var i = 0; i < $config.fields.length; i++)\n    { instance[$config.fields[i].name] = $config.fields[i].init(config, instance); }\n  return instance\n};\n\n// :: (Object) → EditorState\n// Create a new state based on this one, but with an adjusted set of\n// active plugins. State fields that exist in both sets of plugins\n// are kept unchanged. Those that no longer exist are dropped, and\n// those that are new are initialized using their\n// [`init`](#state.StateField.init) method, passing in the new\n// configuration object..\n//\n// config::- configuration options\n//\n//   schema:: ?Schema\n//   New schema to use.\n//\n//   plugins:: ?[Plugin]\n//   New set of active plugins.\nEditorState.prototype.reconfigure = function reconfigure (config) {\n    var this$1 = this;\n\n  var $config = new Configuration(config.schema || this.schema, config.plugins);\n  var fields = $config.fields, instance = new EditorState($config);\n  for (var i = 0; i < fields.length; i++) {\n    var name = fields[i].name;\n    instance[name] = this$1.hasOwnProperty(name) ? this$1[name] : fields[i].init(config, instance);\n  }\n  return instance\n};\n\n// :: (?union<Object<Plugin>, string, number>) → Object\n// Serialize this state to JSON. If you want to serialize the state\n// of plugins, pass an object mapping property names to use in the\n// resulting JSON object to plugin objects. The argument may also be\n// a string or number, in which case it is ignored, to support the\n// way `JSON.stringify` calls `toString` methods.\nEditorState.prototype.toJSON = function toJSON (pluginFields) {\n    var this$1 = this;\n\n  var result = {doc: this.doc.toJSON(), selection: this.selection.toJSON()};\n  if (this.storedMarks) { result.storedMarks = this.storedMarks.map(function (m) { return m.toJSON(); }); }\n  if (pluginFields && typeof pluginFields == 'object') { for (var prop in pluginFields) {\n    if (prop == \"doc\" || prop == \"selection\")\n      { throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\") }\n    var plugin = pluginFields[prop], state = plugin.spec.state;\n    if (state && state.toJSON) { result[prop] = state.toJSON.call(plugin, this$1[plugin.key]); }\n  } }\n  return result\n};\n\n// :: (Object, Object, ?Object<Plugin>) → EditorState\n// Deserialize a JSON representation of a state. `config` should\n// have at least a `schema` field, and should contain array of\n// plugins to initialize the state with. `pluginFields` can be used\n// to deserialize the state of plugins, by associating plugin\n// instances with the property names they use in the JSON object.\n//\n// config::- configuration options\n//\n//   schema:: Schema\n//   The schema to use.\n//\n//   plugins:: ?[Plugin]\n//   The set of active plugins.\nEditorState.fromJSON = function fromJSON (config, json, pluginFields) {\n  if (!json) { throw new RangeError(\"Invalid input for EditorState.fromJSON\") }\n  if (!config.schema) { throw new RangeError(\"Required config field 'schema' missing\") }\n  var $config = new Configuration(config.schema, config.plugins);\n  var instance = new EditorState($config);\n  $config.fields.forEach(function (field) {\n    if (field.name == \"doc\") {\n      instance.doc = prosemirrorModel.Node.fromJSON(config.schema, json.doc);\n    } else if (field.name == \"selection\") {\n      instance.selection = Selection.fromJSON(instance.doc, json.selection);\n    } else if (field.name == \"storedMarks\") {\n      if (json.storedMarks) { instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON); }\n    } else {\n      if (pluginFields) { for (var prop in pluginFields) {\n        var plugin = pluginFields[prop], state = plugin.spec.state;\n        if (plugin.key == field.name && state && state.fromJSON &&\n            Object.prototype.hasOwnProperty.call(json, prop)) {\n          // This field belongs to a plugin mapped to a JSON field, read it from there.\n          instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n          return\n        }\n      } }\n      instance[field.name] = field.init(config, instance);\n    }\n  });\n  return instance\n};\n\n// Kludge to allow the view to track mappings between different\n// instances of a state.\nEditorState.addApplyListener = function addApplyListener (f) {\n  applyListeners.push(f);\n};\nEditorState.removeApplyListener = function removeApplyListener (f) {\n  var found = applyListeners.indexOf(f);\n  if (found > -1) { applyListeners.splice(found, 1); }\n};\n\nObject.defineProperties( EditorState.prototype, prototypeAccessors$1 );\n\nvar applyListeners = [];\n\n// PluginSpec:: interface\n//\n// This is the type passed to the [`Plugin`](#state.Plugin)\n// constructor. It provides a definition for a plugin.\n//\n//   props:: ?EditorProps\n//   The [view props](#view.EditorProps) added by this plugin. Props\n//   that are functions will be bound to have the plugin instance as\n//   their `this` binding.\n//\n//   state:: ?StateField<any>\n//   Allows a plugin to define a [state field](#state.StateField), an\n//   extra slot in the state object in which it can keep its own data.\n//\n//   key:: ?PluginKey\n//   Can be used to make this a keyed plugin. You can have only one\n//   plugin with a given key in a given state, but it is possible to\n//   access the plugin's configuration and state through the key,\n//   without having access to the plugin instance object.\n//\n//   view:: ?(EditorView) → Object\n//   When the plugin needs to interact with the editor view, or\n//   set something up in the DOM, use this field. The function\n//   will be called when the plugin's state is associated with an\n//   editor view.\n//\n//     return::-\n//     Should return an object with the following optional\n//     properties:\n//\n//       update:: ?(view: EditorView, prevState: EditorState)\n//       Called whenever the view's state is updated.\n//\n//       destroy:: ?()\n//       Called when the view is destroyed or receives a state\n//       with different plugins.\n//\n//   filterTransaction:: ?(Transaction, EditorState) → bool\n//   When present, this will be called before a transaction is\n//   applied by the state, allowing the plugin to cancel it (by\n//   returning false).\n//\n//   appendTransaction:: ?(transactions: [Transaction], oldState: EditorState, newState: EditorState) → ?Transaction\n//   Allows the plugin to append another transaction to be applied\n//   after the given array of transactions. When another plugin\n//   appends a transaction after this was called, it is called again\n//   with the new state and new transactions—but only the new\n//   transactions, i.e. it won't be passed transactions that it\n//   already saw.\n\nfunction bindProps(obj, self, target) {\n  for (var prop in obj) {\n    var val = obj[prop];\n    if (val instanceof Function) { val = val.bind(self); }\n    else if (prop == \"handleDOMEvents\") { val = bindProps(val, self, {}); }\n    target[prop] = val;\n  }\n  return target\n}\n\n// ::- Plugins bundle functionality that can be added to an editor.\n// They are part of the [editor state](#state.EditorState) and\n// may influence that state and the view that contains it.\nvar Plugin = function Plugin(spec) {\n  // :: EditorProps\n  // The [props](#view.EditorProps) exported by this plugin.\n  this.props = {};\n  if (spec.props) { bindProps(spec.props, this, this.props); }\n  // :: Object\n  // The plugin's [spec object](#state.PluginSpec).\n  this.spec = spec;\n  this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n};\n\n// :: (EditorState) → any\n// Extract the plugin's state field from an editor state.\nPlugin.prototype.getState = function getState (state) { return state[this.key] };\n\n// StateField:: interface<T>\n// A plugin spec may provide a state field (under its\n// [`state`](#state.PluginSpec.state) property) of this type, which\n// describes the state it wants to keep. Functions provided here are\n// always called with the plugin instance as their `this` binding.\n//\n//   init:: (config: Object, instance: EditorState) → T\n//   Initialize the value of the field. `config` will be the object\n//   passed to [`EditorState.create`](#state.EditorState^create). Note\n//   that `instance` is a half-initialized state instance, and will\n//   not have values for plugin fields initialized after this one.\n//\n//   apply:: (tr: Transaction, value: T, oldState: EditorState, newState: EditorState) → T\n//   Apply the given transaction to this state field, producing a new\n//   field value. Note that the `newState` argument is again a partially\n//   constructed state does not yet contain the state from plugins\n//   coming after this one.\n//\n//   toJSON:: ?(value: T) → *\n//   Convert this field to JSON. Optional, can be left off to disable\n//   JSON serialization for the field.\n//\n//   fromJSON:: ?(config: Object, value: *, state: EditorState) → T\n//   Deserialize the JSON representation of this field. Note that the\n//   `state` argument is again a half-initialized state.\n\nvar keys = Object.create(null);\n\nfunction createKey(name) {\n  if (name in keys) { return name + \"$\" + ++keys[name] }\n  keys[name] = 0;\n  return name + \"$\"\n}\n\n// ::- A key is used to [tag](#state.PluginSpec.key)\n// plugins in a way that makes it possible to find them, given an\n// editor state. Assigning a key does mean only one plugin of that\n// type can be active in a state.\nvar PluginKey = function PluginKey(name) {\nif ( name === void 0 ) name = \"key\";\n this.key = createKey(name); };\n\n// :: (EditorState) → ?Plugin\n// Get the active plugin with this key, if any, from an editor\n// state.\nPluginKey.prototype.get = function get (state) { return state.config.pluginsByKey[this.key] };\n\n// :: (EditorState) → ?any\n// Get the plugin's state from an editor state.\nPluginKey.prototype.getState = function getState (state) { return state[this.key] };\n\nexports.Selection = Selection;\nexports.SelectionRange = SelectionRange;\nexports.TextSelection = TextSelection;\nexports.NodeSelection = NodeSelection;\nexports.AllSelection = AllSelection;\nexports.Transaction = Transaction;\nexports.EditorState = EditorState;\nexports.Plugin = Plugin;\nexports.PluginKey = PluginKey;\n//# sourceMappingURL=index.js.map\n","map":{"mappings":[{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}}],"sources":{"node_modules/prosemirror-commands/node_modules/prosemirror-state/dist/index.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar prosemirrorModel = require('prosemirror-model');\nvar prosemirrorTransform = require('prosemirror-transform');\n\nvar classesById = Object.create(null);\n\n// ::- Superclass for editor selections. Every selection type should\n// extend this. Should not be instantiated directly.\nvar Selection = function Selection($anchor, $head, ranges) {\n  // :: [SelectionRange]\n  // The ranges covered by the selection.\n  this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n  // :: ResolvedPos\n  // The resolved anchor of the selection (the side that stays in\n  // place when the selection is modified).\n  this.$anchor = $anchor;\n  // :: ResolvedPos\n  // The resolved head of the selection (the side that moves when\n  // the selection is modified).\n  this.$head = $head;\n};\n\nvar prototypeAccessors = { anchor: {},head: {},from: {},to: {},$from: {},$to: {},empty: {} };\n\n// :: number\n// The selection's anchor, as an unresolved position.\nprototypeAccessors.anchor.get = function () { return this.$anchor.pos };\n\n// :: number\n// The selection's head.\nprototypeAccessors.head.get = function () { return this.$head.pos };\n\n// :: number\n// The lower bound of the selection's main range.\nprototypeAccessors.from.get = function () { return this.$from.pos };\n\n// :: number\n// The upper bound of the selection's main range.\nprototypeAccessors.to.get = function () { return this.$to.pos };\n\n// :: ResolvedPos\n// The resolved lowerbound of the selection's main range.\nprototypeAccessors.$from.get = function () {\n  return this.ranges[0].$from\n};\n\n// :: ResolvedPos\n// The resolved upper bound of the selection's main range.\nprototypeAccessors.$to.get = function () {\n  return this.ranges[0].$to\n};\n\n// :: bool\n// Indicates whether the selection contains any content.\nprototypeAccessors.empty.get = function () {\n  var ranges = this.ranges;\n  for (var i = 0; i < ranges.length; i++)\n    { if (ranges[i].$from.pos != ranges[i].$to.pos) { return false } }\n  return true\n};\n\n// eq:: (Selection) → bool\n// Test whether the selection is the same as another selection.\n\n// map:: (doc: Node, mapping: Mappable) → Selection\n// Map this selection through a [mappable](#transform.Mappable) thing. `doc`\n// should be the new document to which we are mapping.\n\n// :: () → Slice\n// Get the content of this selection as a slice.\nSelection.prototype.content = function content () {\n  return this.$from.node(0).slice(this.from, this.to, true)\n};\n\n// :: (Transaction, ?Slice)\n// Replace the selection with a slice or, if no slice is given,\n// delete the selection. Will append to the given transaction.\nSelection.prototype.replace = function replace (tr, content) {\n    if ( content === void 0 ) content = prosemirrorModel.Slice.empty;\n\n  // Put the new selection at the position after the inserted\n  // content. When that ended in an inline node, search backwards,\n  // to get the position after that node. If not, search forward.\n  var lastNode = content.content.lastChild, lastParent = null;\n  for (var i = 0; i < content.openEnd; i++) {\n    lastParent = lastNode;\n    lastNode = lastNode.lastChild;\n  }\n\n  var mapFrom = tr.steps.length, ranges = this.ranges;\n  for (var i$1 = 0; i$1 < ranges.length; i$1++) {\n    var ref = ranges[i$1];\n      var $from = ref.$from;\n      var $to = ref.$to;\n      var mapping = tr.mapping.slice(mapFrom);\n    tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i$1 ? prosemirrorModel.Slice.empty : content);\n    if (i$1 == 0)\n      { selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1); }\n  }\n};\n\n// :: (Transaction, Node)\n// Replace the selection with the given node, appending the changes\n// to the given transaction.\nSelection.prototype.replaceWith = function replaceWith (tr, node) {\n  var mapFrom = tr.steps.length, ranges = this.ranges;\n  for (var i = 0; i < ranges.length; i++) {\n    var ref = ranges[i];\n      var $from = ref.$from;\n      var $to = ref.$to;\n      var mapping = tr.mapping.slice(mapFrom);\n    var from = mapping.map($from.pos), to = mapping.map($to.pos);\n    if (i) {\n      tr.deleteRange(from, to);\n    } else {\n      tr.replaceRangeWith(from, to, node);\n      selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n    }\n  }\n};\n\n// toJSON:: () → Object\n// Convert the selection to a JSON representation. When implementing\n// this for a custom selection class, make sure to give the object a\n// `type` property whose value matches the ID under which you\n// [registered](#state.Selection^jsonID) your class.\n\n// :: (ResolvedPos, number, ?bool) → ?Selection\n// Find a valid cursor or leaf node selection starting at the given\n// position and searching back if `dir` is negative, and forward if\n// positive. When `textOnly` is true, only consider cursor\n// selections. Will return null when no valid selection position is\n// found.\nSelection.findFrom = function findFrom ($pos, dir, textOnly) {\n  var inner = $pos.parent.inlineContent ? new TextSelection($pos)\n      : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n  if (inner) { return inner }\n\n  for (var depth = $pos.depth - 1; depth >= 0; depth--) {\n    var found = dir < 0\n        ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n        : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n    if (found) { return found }\n  }\n};\n\n// :: (ResolvedPos, ?number) → Selection\n// Find a valid cursor or leaf node selection near the given\n// position. Searches forward first by default, but if `bias` is\n// negative, it will search backwards first.\nSelection.near = function near ($pos, bias) {\n    if ( bias === void 0 ) bias = 1;\n\n  return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0))\n};\n\n// :: (Node) → Selection\n// Find the cursor or leaf node selection closest to the start of\n// the given document. Will return an\n// [`AllSelection`](#state.AllSelection) if no valid position\n// exists.\nSelection.atStart = function atStart (doc) {\n  return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc)\n};\n\n// :: (Node) → Selection\n// Find the cursor or leaf node selection closest to the end of the\n// given document.\nSelection.atEnd = function atEnd (doc) {\n  return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc)\n};\n\n// :: (Node, Object) → Selection\n// Deserialize the JSON representation of a selection. Must be\n// implemented for custom classes (as a static class method).\nSelection.fromJSON = function fromJSON (doc, json) {\n  if (!json || !json.type) { throw new RangeError(\"Invalid input for Selection.fromJSON\") }\n  var cls = classesById[json.type];\n  if (!cls) { throw new RangeError((\"No selection type \" + (json.type) + \" defined\")) }\n  return cls.fromJSON(doc, json)\n};\n\n// :: (string, constructor<Selection>)\n// To be able to deserialize selections from JSON, custom selection\n// classes must register themselves with an ID string, so that they\n// can be disambiguated. Try to pick something that's unlikely to\n// clash with classes from other modules.\nSelection.jsonID = function jsonID (id, selectionClass) {\n  if (id in classesById) { throw new RangeError(\"Duplicate use of selection JSON ID \" + id) }\n  classesById[id] = selectionClass;\n  selectionClass.prototype.jsonID = id;\n  return selectionClass\n};\n\n// :: () → SelectionBookmark\n// Get a [bookmark](#state.SelectionBookmark) for this selection,\n// which is a value that can be mapped without having access to a\n// current document, and later resolved to a real selection for a\n// given document again. (This is used mostly by the history to\n// track and restore old selections.) The default implementation of\n// this method just converts the selection to a text selection and\n// returns the bookmark for that.\nSelection.prototype.getBookmark = function getBookmark () {\n  return TextSelection.between(this.anchor, this.head).getBookmark()\n};\n\nObject.defineProperties( Selection.prototype, prototypeAccessors );\n\n// :: bool\n// Controls whether, when a selection of this type is active in the\n// browser, the selected range should be visible to the user. Defaults\n// to `true`.\nSelection.prototype.visible = true;\n\n// SelectionBookmark:: interface\n// A lightweight, document-independent representation of a selection.\n// You can define a custom bookmark type for a custom selection class\n// to make the history handle it well.\n//\n//   map:: (mapping: Mapping) → SelectionBookmark\n//   Map the bookmark through a set of changes.\n//\n//   resolve:: (doc: Node) → Selection\n//   Resolve the bookmark to a real selection again. This may need to\n//   do some error checking and may fall back to a default (usually\n//   [`TextSelection.between`](#state.TextSelection^between)) if\n//   mapping made the bookmark invalid.\n\n// ::- Represents a selected range in a document.\nvar SelectionRange = function SelectionRange($from, $to) {\n  // :: ResolvedPos\n  // The lower bound of the range.\n  this.$from = $from;\n  // :: ResolvedPos\n  // The upper bound of the range.\n  this.$to = $to;\n};\n\n// ::- A text selection represents a classical editor selection, with\n// a head (the moving side) and anchor (immobile side), both of which\n// point into textblock nodes. It can be empty (a regular cursor\n// position).\nvar TextSelection = (function (Selection) {\n  function TextSelection($anchor, $head) {\n    if ( $head === void 0 ) $head = $anchor;\n\n    Selection.call(this, $anchor, $head);\n  }\n\n  if ( Selection ) TextSelection.__proto__ = Selection;\n  TextSelection.prototype = Object.create( Selection && Selection.prototype );\n  TextSelection.prototype.constructor = TextSelection;\n\n  var prototypeAccessors$1 = { $cursor: {} };\n\n  // :: ?ResolvedPos\n  // Returns a resolved position if this is a cursor selection (an\n  // empty text selection), and null otherwise.\n  prototypeAccessors$1.$cursor.get = function () { return this.$anchor.pos == this.$head.pos ? this.$head : null };\n\n  TextSelection.prototype.map = function map (doc, mapping) {\n    var $head = doc.resolve(mapping.map(this.head));\n    if (!$head.parent.inlineContent) { return Selection.near($head) }\n    var $anchor = doc.resolve(mapping.map(this.anchor));\n    return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head)\n  };\n\n  TextSelection.prototype.replace = function replace (tr, content) {\n    if ( content === void 0 ) content = prosemirrorModel.Slice.empty;\n\n    Selection.prototype.replace.call(this, tr, content);\n    if (content == prosemirrorModel.Slice.empty) {\n      var marks = this.$from.marksAcross(this.$to);\n      if (marks) { tr.ensureMarks(marks); }\n    }\n  };\n\n  TextSelection.prototype.eq = function eq (other) {\n    return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head\n  };\n\n  TextSelection.prototype.getBookmark = function getBookmark () {\n    return new TextBookmark(this.anchor, this.head)\n  };\n\n  TextSelection.prototype.toJSON = function toJSON () {\n    return {type: \"text\", anchor: this.anchor, head: this.head}\n  };\n\n  TextSelection.fromJSON = function fromJSON (doc, json) {\n    if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n      { throw new RangeError(\"Invalid input for TextSelection.fromJSON\") }\n    return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  };\n\n  // :: (Node, number, ?number) → TextSelection\n  // Create a text selection from non-resolved positions.\n  TextSelection.create = function create (doc, anchor, head) {\n    if ( head === void 0 ) head = anchor;\n\n    var $anchor = doc.resolve(anchor);\n    return new this($anchor, head == anchor ? $anchor : doc.resolve(head))\n  };\n\n  // :: (ResolvedPos, ResolvedPos, ?number) → Selection\n  // Return a text selection that spans the given positions or, if\n  // they aren't text positions, find a text selection near them.\n  // `bias` determines whether the method searches forward (default)\n  // or backwards (negative number) first. Will fall back to calling\n  // [`Selection.near`](#state.Selection^near) when the document\n  // doesn't contain a valid text position.\n  TextSelection.between = function between ($anchor, $head, bias) {\n    var dPos = $anchor.pos - $head.pos;\n    if (!bias || dPos) { bias = dPos >= 0 ? 1 : -1; }\n    if (!$head.parent.inlineContent) {\n      var found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n      if (found) { $head = found.$head; }\n      else { return Selection.near($head, bias) }\n    }\n    if (!$anchor.parent.inlineContent) {\n      if (dPos == 0) {\n        $anchor = $head;\n      } else {\n        $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n        if (($anchor.pos < $head.pos) != (dPos < 0)) { $anchor = $head; }\n      }\n    }\n    return new TextSelection($anchor, $head)\n  };\n\n  Object.defineProperties( TextSelection.prototype, prototypeAccessors$1 );\n\n  return TextSelection;\n}(Selection));\n\nSelection.jsonID(\"text\", TextSelection);\n\nvar TextBookmark = function TextBookmark(anchor, head) {\n  this.anchor = anchor;\n  this.head = head;\n};\nTextBookmark.prototype.map = function map (mapping) {\n  return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head))\n};\nTextBookmark.prototype.resolve = function resolve (doc) {\n  return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head))\n};\n\n// ::- A node selection is a selection that points at a single node.\n// All nodes marked [selectable](#model.NodeSpec.selectable) can be\n// the target of a node selection. In such a selection, `from` and\n// `to` point directly before and after the selected node, `anchor`\n// equals `from`, and `head` equals `to`..\nvar NodeSelection = (function (Selection) {\n  function NodeSelection($pos) {\n    var node = $pos.nodeAfter;\n    var $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n    Selection.call(this, $pos, $end);\n    // :: Node The selected node.\n    this.node = node;\n  }\n\n  if ( Selection ) NodeSelection.__proto__ = Selection;\n  NodeSelection.prototype = Object.create( Selection && Selection.prototype );\n  NodeSelection.prototype.constructor = NodeSelection;\n\n  NodeSelection.prototype.map = function map (doc, mapping) {\n    var ref = mapping.mapResult(this.anchor);\n    var deleted = ref.deleted;\n    var pos = ref.pos;\n    var $pos = doc.resolve(pos);\n    if (deleted) { return Selection.near($pos) }\n    return new NodeSelection($pos)\n  };\n\n  NodeSelection.prototype.content = function content () {\n    return new prosemirrorModel.Slice(prosemirrorModel.Fragment.from(this.node), 0, 0)\n  };\n\n  NodeSelection.prototype.eq = function eq (other) {\n    return other instanceof NodeSelection && other.anchor == this.anchor\n  };\n\n  NodeSelection.prototype.toJSON = function toJSON () {\n    return {type: \"node\", anchor: this.anchor}\n  };\n\n  NodeSelection.prototype.getBookmark = function getBookmark () { return new NodeBookmark(this.anchor) };\n\n  NodeSelection.fromJSON = function fromJSON (doc, json) {\n    if (typeof json.anchor != \"number\")\n      { throw new RangeError(\"Invalid input for NodeSelection.fromJSON\") }\n    return new NodeSelection(doc.resolve(json.anchor))\n  };\n\n  // :: (Node, number) → NodeSelection\n  // Create a node selection from non-resolved positions.\n  NodeSelection.create = function create (doc, from) {\n    return new this(doc.resolve(from))\n  };\n\n  // :: (Node) → bool\n  // Determines whether the given node may be selected as a node\n  // selection.\n  NodeSelection.isSelectable = function isSelectable (node) {\n    return !node.isText && node.type.spec.selectable !== false\n  };\n\n  return NodeSelection;\n}(Selection));\n\nNodeSelection.prototype.visible = false;\n\nSelection.jsonID(\"node\", NodeSelection);\n\nvar NodeBookmark = function NodeBookmark(anchor) {\n  this.anchor = anchor;\n};\nNodeBookmark.prototype.map = function map (mapping) {\n  var ref = mapping.mapResult(this.anchor);\n    var deleted = ref.deleted;\n    var pos = ref.pos;\n  return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos)\n};\nNodeBookmark.prototype.resolve = function resolve (doc) {\n  var $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n  if (node && NodeSelection.isSelectable(node)) { return new NodeSelection($pos) }\n  return Selection.near($pos)\n};\n\n// ::- A selection type that represents selecting the whole document\n// (which can not necessarily be expressed with a text selection, when\n// there are for example leaf block nodes at the start or end of the\n// document).\nvar AllSelection = (function (Selection) {\n  function AllSelection(doc) {\n    Selection.call(this, doc.resolve(0), doc.resolve(doc.content.size));\n  }\n\n  if ( Selection ) AllSelection.__proto__ = Selection;\n  AllSelection.prototype = Object.create( Selection && Selection.prototype );\n  AllSelection.prototype.constructor = AllSelection;\n\n  AllSelection.prototype.toJSON = function toJSON () { return {type: \"all\"} };\n\n  AllSelection.fromJSON = function fromJSON (doc) { return new AllSelection(doc) };\n\n  AllSelection.prototype.map = function map (doc) { return new AllSelection(doc) };\n\n  AllSelection.prototype.eq = function eq (other) { return other instanceof AllSelection };\n\n  AllSelection.prototype.getBookmark = function getBookmark () { return AllBookmark };\n\n  return AllSelection;\n}(Selection));\n\nSelection.jsonID(\"all\", AllSelection);\n\nvar AllBookmark = {\n  map: function map() { return this },\n  resolve: function resolve(doc) { return new AllSelection(doc) }\n};\n\n// FIXME we'll need some awareness of text direction when scanning for selections\n\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text) {\n  if (node.inlineContent) { return TextSelection.create(doc, pos) }\n  for (var i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n    var child = node.child(i);\n    if (!child.isAtom) {\n      var inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n      if (inner) { return inner }\n    } else if (!text && NodeSelection.isSelectable(child)) {\n      return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0))\n    }\n    pos += child.nodeSize * dir;\n  }\n}\n\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n  var last = tr.steps.length - 1;\n  if (last < startLen) { return }\n  var step = tr.steps[last];\n  if (!(step instanceof prosemirrorTransform.ReplaceStep || step instanceof prosemirrorTransform.ReplaceAroundStep)) { return }\n  var map = tr.mapping.maps[last], end;\n  map.forEach(function (_from, _to, _newFrom, newTo) { if (end == null) { end = newTo; } });\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nvar UPDATED_SEL = 1;\nvar UPDATED_MARKS = 2;\nvar UPDATED_SCROLL = 4;\n\n// ::- An editor state transaction, which can be applied to a state to\n// create an updated state. Use\n// [`EditorState.tr`](#state.EditorState.tr) to create an instance.\n//\n// Transactions track changes to the document (they are a subclass of\n// [`Transform`](#transform.Transform)), but also other state changes,\n// like selection updates and adjustments of the set of [stored\n// marks](#state.EditorState.storedMarks). In addition, you can store\n// metadata properties in a transaction, which are extra pieces of\n// information that client code or plugins can use to describe what a\n// transacion represents, so that they can update their [own\n// state](#state.StateField) accordingly.\n//\n// The [editor view](#view.EditorView) uses a few metadata properties:\n// it will attach a property `\"pointer\"` with the value `true` to\n// selection transactions directly caused by mouse or touch input, and\n// a `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\nvar Transaction = (function (Transform$$1) {\n  function Transaction(state) {\n    Transform$$1.call(this, state.doc);\n    // :: number\n    // The timestamp associated with this transaction, in the same\n    // format as `Date.now()`.\n    this.time = Date.now();\n    this.curSelection = state.selection;\n    // The step count for which the current selection is valid.\n    this.curSelectionFor = 0;\n    // :: ?[Mark]\n    // The stored marks set by this transaction, if any.\n    this.storedMarks = state.storedMarks;\n    // Bitfield to track which aspects of the state were updated by\n    // this transaction.\n    this.updated = 0;\n    // Object used to store metadata properties for the transaction.\n    this.meta = Object.create(null);\n  }\n\n  if ( Transform$$1 ) Transaction.__proto__ = Transform$$1;\n  Transaction.prototype = Object.create( Transform$$1 && Transform$$1.prototype );\n  Transaction.prototype.constructor = Transaction;\n\n  var prototypeAccessors = { selection: {},selectionSet: {},storedMarksSet: {},isGeneric: {},scrolledIntoView: {} };\n\n  // :: Selection\n  // The transaction's current selection. This defaults to the editor\n  // selection [mapped](#state.Selection.map) through the steps in the\n  // transaction, but can be overwritten with\n  // [`setSelection`](#state.Transaction.setSelection).\n  prototypeAccessors.selection.get = function () {\n    if (this.curSelectionFor < this.steps.length) {\n      this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n      this.curSelectionFor = this.steps.length;\n    }\n    return this.curSelection\n  };\n\n  // :: (Selection) → Transaction\n  // Update the transaction's current selection. Will determine the\n  // selection that the editor gets when the transaction is applied.\n  Transaction.prototype.setSelection = function setSelection (selection) {\n    this.curSelection = selection;\n    this.curSelectionFor = this.steps.length;\n    this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n    this.storedMarks = null;\n    return this\n  };\n\n  // :: bool\n  // Whether the selection was explicitly updated by this transaction.\n  prototypeAccessors.selectionSet.get = function () {\n    return (this.updated & UPDATED_SEL) > 0\n  };\n\n  // :: (?[Mark]) → Transaction\n  // Set the current stored marks.\n  Transaction.prototype.setStoredMarks = function setStoredMarks (marks) {\n    this.storedMarks = marks;\n    this.updated |= UPDATED_MARKS;\n    return this\n  };\n\n  // :: ([Mark]) → Transaction\n  // Make sure the current stored marks or, if that is null, the marks\n  // at the selection, match the given set of marks. Does nothing if\n  // this is already the case.\n  Transaction.prototype.ensureMarks = function ensureMarks (marks) {\n    if (!prosemirrorModel.Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n      { this.setStoredMarks(marks); }\n    return this\n  };\n\n  // :: (Mark) → Transaction\n  // Add a mark to the set of stored marks.\n  Transaction.prototype.addStoredMark = function addStoredMark (mark) {\n    return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()))\n  };\n\n  // :: (union<Mark, MarkType>) → Transaction\n  // Remove a mark or mark type from the set of stored marks.\n  Transaction.prototype.removeStoredMark = function removeStoredMark (mark) {\n    return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()))\n  };\n\n  // :: bool\n  // Whether the stored marks were explicitly set for this transaction.\n  prototypeAccessors.storedMarksSet.get = function () {\n    return (this.updated & UPDATED_MARKS) > 0\n  };\n\n  Transaction.prototype.addStep = function addStep (step, doc) {\n    Transform$$1.prototype.addStep.call(this, step, doc);\n    this.updated = this.updated & ~UPDATED_MARKS;\n    this.storedMarks = null;\n  };\n\n  // :: (number) → Transaction\n  // Update the timestamp for the transaction.\n  Transaction.prototype.setTime = function setTime (time) {\n    this.time = time;\n    return this\n  };\n\n  // :: (Slice) → Transaction\n  // Replace the current selection with the given slice.\n  Transaction.prototype.replaceSelection = function replaceSelection (slice) {\n    this.selection.replace(this, slice);\n    return this\n  };\n\n  // :: (Node, ?bool) → Transaction\n  // Replace the selection with the given node. When `inheritMarks` is\n  // true and the content is inline, it inherits the marks from the\n  // place where it is inserted.\n  Transaction.prototype.replaceSelectionWith = function replaceSelectionWith (node, inheritMarks) {\n    var selection = this.selection;\n    if (inheritMarks !== false)\n      { node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || prosemirrorModel.Mark.none))); }\n    selection.replaceWith(this, node);\n    return this\n  };\n\n  // :: () → Transaction\n  // Delete the selection.\n  Transaction.prototype.deleteSelection = function deleteSelection () {\n    this.selection.replace(this);\n    return this\n  };\n\n  // :: (string, from: ?number, to: ?number) → Transaction\n  // Replace the given range, or the selection if no range is given,\n  // with a text node containing the given string.\n  Transaction.prototype.insertText = function insertText (text, from, to) {\n    if ( to === void 0 ) to = from;\n\n    var schema = this.doc.type.schema;\n    if (from == null) {\n      if (!text) { return this.deleteSelection() }\n      return this.replaceSelectionWith(schema.text(text), true)\n    } else {\n      if (!text) { return this.deleteRange(from, to) }\n      var marks = this.storedMarks;\n      if (!marks) {\n        var $from = this.doc.resolve(from);\n        marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n      }\n      return this.replaceRangeWith(from, to, schema.text(text, marks))\n    }\n  };\n\n  // :: (union<string, Plugin, PluginKey>, any) → Transaction\n  // Store a metadata property in this transaction, keyed either by\n  // name or by plugin.\n  Transaction.prototype.setMeta = function setMeta (key, value) {\n    this.meta[typeof key == \"string\" ? key : key.key] = value;\n    return this\n  };\n\n  // :: (union<string, Plugin, PluginKey>) → any\n  // Retrieve a metadata property for a given name or plugin.\n  Transaction.prototype.getMeta = function getMeta (key) {\n    return this.meta[typeof key == \"string\" ? key : key.key]\n  };\n\n  // :: bool\n  // Returns true if this transaction doesn't contain any metadata,\n  // and can thus safely be extended.\n  prototypeAccessors.isGeneric.get = function () {\n    var this$1 = this;\n\n    for (var _ in this$1.meta) { return false }\n    return true\n  };\n\n  // :: () → Transaction\n  // Indicate that the editor should scroll the selection into view\n  // when updated to the state produced by this transaction.\n  Transaction.prototype.scrollIntoView = function scrollIntoView () {\n    this.updated |= UPDATED_SCROLL;\n    return this\n  };\n\n  prototypeAccessors.scrolledIntoView.get = function () {\n    return (this.updated & UPDATED_SCROLL) > 0\n  };\n\n  Object.defineProperties( Transaction.prototype, prototypeAccessors );\n\n  return Transaction;\n}(prosemirrorTransform.Transform));\n\nfunction bind(f, self) {\n  return !self || !f ? f : f.bind(self)\n}\n\nvar FieldDesc = function FieldDesc(name, desc, self) {\n  this.name = name;\n  this.init = bind(desc.init, self);\n  this.apply = bind(desc.apply, self);\n};\n\nvar baseFields = [\n  new FieldDesc(\"doc\", {\n    init: function init(config) { return config.doc || config.schema.topNodeType.createAndFill() },\n    apply: function apply(tr) { return tr.doc }\n  }),\n\n  new FieldDesc(\"selection\", {\n    init: function init(config, instance) { return config.selection || Selection.atStart(instance.doc) },\n    apply: function apply(tr) { return tr.selection }\n  }),\n\n  new FieldDesc(\"storedMarks\", {\n    init: function init(config) { return config.storedMarks || null },\n    apply: function apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null }\n  }),\n\n  new FieldDesc(\"scrollToSelection\", {\n    init: function init() { return 0 },\n    apply: function apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev }\n  })\n];\n\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nvar Configuration = function Configuration(schema, plugins) {\n  var this$1 = this;\n\n  this.schema = schema;\n  this.fields = baseFields.concat();\n  this.plugins = [];\n  this.pluginsByKey = Object.create(null);\n  if (plugins) { plugins.forEach(function (plugin) {\n    if (this$1.pluginsByKey[plugin.key])\n      { throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\") }\n    this$1.plugins.push(plugin);\n    this$1.pluginsByKey[plugin.key] = plugin;\n    if (plugin.spec.state)\n      { this$1.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin)); }\n  }); }\n};\n\n// ::- The state of a ProseMirror editor is represented by an object\n// of this type. A state is a persistent data structure—it isn't\n// updated, but rather a new state value is computed from an old one\n// using the [`apply`](#state.EditorState.apply) method.\n//\n// A state holds a number of built-in fields, and plugins can\n// [define](#state.PluginSpec.state) additional fields.\nvar EditorState = function EditorState(config) {\n  this.config = config;\n};\n\nvar prototypeAccessors$1 = { schema: {},plugins: {},tr: {} };\n\n// doc:: Node\n// The current document.\n\n// selection:: Selection\n// The selection.\n\n// storedMarks:: ?[Mark]\n// A set of marks to apply to the next input. Will be null when\n// no explicit marks have been set.\n\n// :: Schema\n// The schema of the state's document.\nprototypeAccessors$1.schema.get = function () {\n  return this.config.schema\n};\n\n// :: [Plugin]\n// The plugins that are active in this state.\nprototypeAccessors$1.plugins.get = function () {\n  return this.config.plugins\n};\n\n// :: (Transaction) → EditorState\n// Apply the given transaction to produce a new state.\nEditorState.prototype.apply = function apply (tr) {\n  return this.applyTransaction(tr).state\n};\n\n// : (Transaction) → ?Transaction\nEditorState.prototype.filterTransaction = function filterTransaction (tr, ignore) {\n    var this$1 = this;\n    if ( ignore === void 0 ) ignore = -1;\n\n  for (var i = 0; i < this.config.plugins.length; i++) { if (i != ignore) {\n    var plugin = this$1.config.plugins[i];\n    if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this$1))\n      { return false }\n  } }\n  return true\n};\n\n// :: (Transaction) → {state: EditorState, transactions: [Transaction]}\n// Verbose variant of [`apply`](#state.EditorState.apply) that\n// returns the precise transactions that were applied (which might\n// be influenced by the [transaction\n// hooks](#state.PluginSpec.filterTransaction) of\n// plugins) along with the new state.\nEditorState.prototype.applyTransaction = function applyTransaction (tr) {\n    var this$1 = this;\n\n  if (!this.filterTransaction(tr)) { return {state: this, transactions: []} }\n\n  var trs = [tr], newState = this.applyInner(tr), seen = null;\n  // This loop repeatedly gives plugins a chance to respond to\n  // transactions as new transactions are added, making sure to only\n  // pass the transactions the plugin did not see before.\n  outer: for (;;) {\n    var haveNew = false;\n    for (var i = 0; i < this.config.plugins.length; i++) {\n      var plugin = this$1.config.plugins[i];\n      if (plugin.spec.appendTransaction) {\n        var n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this$1;\n        var tr$1 = n < trs.length &&\n            plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n        if (tr$1 && newState.filterTransaction(tr$1, i)) {\n          tr$1.setMeta(\"appendedTransaction\", tr$1);\n          if (!seen) {\n            seen = [];\n            for (var j = 0; j < this.config.plugins.length; j++)\n              { seen.push(j < i ? {state: newState, n: trs.length} : {state: this$1, n: 0}); }\n          }\n          trs.push(tr$1);\n          newState = newState.applyInner(tr$1);\n          haveNew = true;\n        }\n        if (seen) { seen[i] = {state: newState, n: trs.length}; }\n      }\n    }\n    if (!haveNew) { return {state: newState, transactions: trs} }\n  }\n};\n\n// : (Transaction) → EditorState\nEditorState.prototype.applyInner = function applyInner (tr) {\n    var this$1 = this;\n\n  if (!tr.before.eq(this.doc)) { throw new RangeError(\"Applying a mismatched transaction\") }\n  var newInstance = new EditorState(this.config), fields = this.config.fields;\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    newInstance[field.name] = field.apply(tr, this$1[field.name], this$1, newInstance);\n  }\n  for (var i$1 = 0; i$1 < applyListeners.length; i$1++) { applyListeners[i$1](this$1, tr, newInstance); }\n  return newInstance\n};\n\n// :: Transaction\n// Start a [transaction](#state.Transaction) from this state.\nprototypeAccessors$1.tr.get = function () { return new Transaction(this) };\n\n// :: (Object) → EditorState\n// Create a new state.\n//\n// config::- Configuration options. Must contain `schema` or `doc` (or both).\n//\n//    schema:: ?Schema\n//    The schema to use.\n//\n//    doc:: ?Node\n//    The starting document.\n//\n//    selection:: ?Selection\n//    A valid selection in the document.\n//\n//    storedMarks:: ?[Mark]\n//    The initial set of [stored marks](#state.EditorState.storedMarks).\n//\n//    plugins:: ?[Plugin]\n//    The plugins that should be active in this state.\nEditorState.create = function create (config) {\n  var $config = new Configuration(config.schema || config.doc.type.schema, config.plugins);\n  var instance = new EditorState($config);\n  for (var i = 0; i < $config.fields.length; i++)\n    { instance[$config.fields[i].name] = $config.fields[i].init(config, instance); }\n  return instance\n};\n\n// :: (Object) → EditorState\n// Create a new state based on this one, but with an adjusted set of\n// active plugins. State fields that exist in both sets of plugins\n// are kept unchanged. Those that no longer exist are dropped, and\n// those that are new are initialized using their\n// [`init`](#state.StateField.init) method, passing in the new\n// configuration object..\n//\n// config::- configuration options\n//\n//   schema:: ?Schema\n//   New schema to use.\n//\n//   plugins:: ?[Plugin]\n//   New set of active plugins.\nEditorState.prototype.reconfigure = function reconfigure (config) {\n    var this$1 = this;\n\n  var $config = new Configuration(config.schema || this.schema, config.plugins);\n  var fields = $config.fields, instance = new EditorState($config);\n  for (var i = 0; i < fields.length; i++) {\n    var name = fields[i].name;\n    instance[name] = this$1.hasOwnProperty(name) ? this$1[name] : fields[i].init(config, instance);\n  }\n  return instance\n};\n\n// :: (?union<Object<Plugin>, string, number>) → Object\n// Serialize this state to JSON. If you want to serialize the state\n// of plugins, pass an object mapping property names to use in the\n// resulting JSON object to plugin objects. The argument may also be\n// a string or number, in which case it is ignored, to support the\n// way `JSON.stringify` calls `toString` methods.\nEditorState.prototype.toJSON = function toJSON (pluginFields) {\n    var this$1 = this;\n\n  var result = {doc: this.doc.toJSON(), selection: this.selection.toJSON()};\n  if (this.storedMarks) { result.storedMarks = this.storedMarks.map(function (m) { return m.toJSON(); }); }\n  if (pluginFields && typeof pluginFields == 'object') { for (var prop in pluginFields) {\n    if (prop == \"doc\" || prop == \"selection\")\n      { throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\") }\n    var plugin = pluginFields[prop], state = plugin.spec.state;\n    if (state && state.toJSON) { result[prop] = state.toJSON.call(plugin, this$1[plugin.key]); }\n  } }\n  return result\n};\n\n// :: (Object, Object, ?Object<Plugin>) → EditorState\n// Deserialize a JSON representation of a state. `config` should\n// have at least a `schema` field, and should contain array of\n// plugins to initialize the state with. `pluginFields` can be used\n// to deserialize the state of plugins, by associating plugin\n// instances with the property names they use in the JSON object.\n//\n// config::- configuration options\n//\n//   schema:: Schema\n//   The schema to use.\n//\n//   plugins:: ?[Plugin]\n//   The set of active plugins.\nEditorState.fromJSON = function fromJSON (config, json, pluginFields) {\n  if (!json) { throw new RangeError(\"Invalid input for EditorState.fromJSON\") }\n  if (!config.schema) { throw new RangeError(\"Required config field 'schema' missing\") }\n  var $config = new Configuration(config.schema, config.plugins);\n  var instance = new EditorState($config);\n  $config.fields.forEach(function (field) {\n    if (field.name == \"doc\") {\n      instance.doc = prosemirrorModel.Node.fromJSON(config.schema, json.doc);\n    } else if (field.name == \"selection\") {\n      instance.selection = Selection.fromJSON(instance.doc, json.selection);\n    } else if (field.name == \"storedMarks\") {\n      if (json.storedMarks) { instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON); }\n    } else {\n      if (pluginFields) { for (var prop in pluginFields) {\n        var plugin = pluginFields[prop], state = plugin.spec.state;\n        if (plugin.key == field.name && state && state.fromJSON &&\n            Object.prototype.hasOwnProperty.call(json, prop)) {\n          // This field belongs to a plugin mapped to a JSON field, read it from there.\n          instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n          return\n        }\n      } }\n      instance[field.name] = field.init(config, instance);\n    }\n  });\n  return instance\n};\n\n// Kludge to allow the view to track mappings between different\n// instances of a state.\nEditorState.addApplyListener = function addApplyListener (f) {\n  applyListeners.push(f);\n};\nEditorState.removeApplyListener = function removeApplyListener (f) {\n  var found = applyListeners.indexOf(f);\n  if (found > -1) { applyListeners.splice(found, 1); }\n};\n\nObject.defineProperties( EditorState.prototype, prototypeAccessors$1 );\n\nvar applyListeners = [];\n\n// PluginSpec:: interface\n//\n// This is the type passed to the [`Plugin`](#state.Plugin)\n// constructor. It provides a definition for a plugin.\n//\n//   props:: ?EditorProps\n//   The [view props](#view.EditorProps) added by this plugin. Props\n//   that are functions will be bound to have the plugin instance as\n//   their `this` binding.\n//\n//   state:: ?StateField<any>\n//   Allows a plugin to define a [state field](#state.StateField), an\n//   extra slot in the state object in which it can keep its own data.\n//\n//   key:: ?PluginKey\n//   Can be used to make this a keyed plugin. You can have only one\n//   plugin with a given key in a given state, but it is possible to\n//   access the plugin's configuration and state through the key,\n//   without having access to the plugin instance object.\n//\n//   view:: ?(EditorView) → Object\n//   When the plugin needs to interact with the editor view, or\n//   set something up in the DOM, use this field. The function\n//   will be called when the plugin's state is associated with an\n//   editor view.\n//\n//     return::-\n//     Should return an object with the following optional\n//     properties:\n//\n//       update:: ?(view: EditorView, prevState: EditorState)\n//       Called whenever the view's state is updated.\n//\n//       destroy:: ?()\n//       Called when the view is destroyed or receives a state\n//       with different plugins.\n//\n//   filterTransaction:: ?(Transaction, EditorState) → bool\n//   When present, this will be called before a transaction is\n//   applied by the state, allowing the plugin to cancel it (by\n//   returning false).\n//\n//   appendTransaction:: ?(transactions: [Transaction], oldState: EditorState, newState: EditorState) → ?Transaction\n//   Allows the plugin to append another transaction to be applied\n//   after the given array of transactions. When another plugin\n//   appends a transaction after this was called, it is called again\n//   with the new state and new transactions—but only the new\n//   transactions, i.e. it won't be passed transactions that it\n//   already saw.\n\nfunction bindProps(obj, self, target) {\n  for (var prop in obj) {\n    var val = obj[prop];\n    if (val instanceof Function) { val = val.bind(self); }\n    else if (prop == \"handleDOMEvents\") { val = bindProps(val, self, {}); }\n    target[prop] = val;\n  }\n  return target\n}\n\n// ::- Plugins bundle functionality that can be added to an editor.\n// They are part of the [editor state](#state.EditorState) and\n// may influence that state and the view that contains it.\nvar Plugin = function Plugin(spec) {\n  // :: EditorProps\n  // The [props](#view.EditorProps) exported by this plugin.\n  this.props = {};\n  if (spec.props) { bindProps(spec.props, this, this.props); }\n  // :: Object\n  // The plugin's [spec object](#state.PluginSpec).\n  this.spec = spec;\n  this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n};\n\n// :: (EditorState) → any\n// Extract the plugin's state field from an editor state.\nPlugin.prototype.getState = function getState (state) { return state[this.key] };\n\n// StateField:: interface<T>\n// A plugin spec may provide a state field (under its\n// [`state`](#state.PluginSpec.state) property) of this type, which\n// describes the state it wants to keep. Functions provided here are\n// always called with the plugin instance as their `this` binding.\n//\n//   init:: (config: Object, instance: EditorState) → T\n//   Initialize the value of the field. `config` will be the object\n//   passed to [`EditorState.create`](#state.EditorState^create). Note\n//   that `instance` is a half-initialized state instance, and will\n//   not have values for plugin fields initialized after this one.\n//\n//   apply:: (tr: Transaction, value: T, oldState: EditorState, newState: EditorState) → T\n//   Apply the given transaction to this state field, producing a new\n//   field value. Note that the `newState` argument is again a partially\n//   constructed state does not yet contain the state from plugins\n//   coming after this one.\n//\n//   toJSON:: ?(value: T) → *\n//   Convert this field to JSON. Optional, can be left off to disable\n//   JSON serialization for the field.\n//\n//   fromJSON:: ?(config: Object, value: *, state: EditorState) → T\n//   Deserialize the JSON representation of this field. Note that the\n//   `state` argument is again a half-initialized state.\n\nvar keys = Object.create(null);\n\nfunction createKey(name) {\n  if (name in keys) { return name + \"$\" + ++keys[name] }\n  keys[name] = 0;\n  return name + \"$\"\n}\n\n// ::- A key is used to [tag](#state.PluginSpec.key)\n// plugins in a way that makes it possible to find them, given an\n// editor state. Assigning a key does mean only one plugin of that\n// type can be active in a state.\nvar PluginKey = function PluginKey(name) {\nif ( name === void 0 ) name = \"key\";\n this.key = createKey(name); };\n\n// :: (EditorState) → ?Plugin\n// Get the active plugin with this key, if any, from an editor\n// state.\nPluginKey.prototype.get = function get (state) { return state.config.pluginsByKey[this.key] };\n\n// :: (EditorState) → ?any\n// Get the plugin's state from an editor state.\nPluginKey.prototype.getState = function getState (state) { return state[this.key] };\n\nexports.Selection = Selection;\nexports.SelectionRange = SelectionRange;\nexports.TextSelection = TextSelection;\nexports.NodeSelection = NodeSelection;\nexports.AllSelection = AllSelection;\nexports.Transaction = Transaction;\nexports.EditorState = EditorState;\nexports.Plugin = Plugin;\nexports.PluginKey = PluginKey;\n//# sourceMappingURL=index.js.map\n"},"lineCount":1143}},"hash":"cf399a4455f7469fe1a9082f56dba3dc","cacheData":{"env":{}}}