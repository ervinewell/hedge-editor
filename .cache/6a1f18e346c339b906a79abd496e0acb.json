{"dependencies":[{"name":"/Users/ervinewell/Projects/hedge-editor/package.json","includedInParent":true,"mtime":1527089705397},{"name":"/Users/ervinewell/Projects/hedge-editor/node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/package.json","includedInParent":true,"mtime":1527089443921},{"name":"prosemirror-model","loc":{"line":5,"column":31}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar prosemirrorModel = require('prosemirror-model');\n\n// Mappable:: interface\n// There are several things that positions can be mapped through.\n// Such objects conform to this interface.\n//\n//   map:: (pos: number, assoc: ?number) → number\n//   Map a position through this object. When given, `assoc` (should\n//   be -1 or 1, defaults to 1) determines with which side the\n//   position is associated, which determines in which direction to\n//   move when a chunk of content is inserted at the mapped position.\n//\n//   mapResult:: (pos: number, assoc: ?number) → MapResult\n//   Map a position, and return an object containing additional\n//   information about the mapping. The result's `deleted` field tells\n//   you whether the position was deleted (completely enclosed in a\n//   replaced range) during the mapping. When content on only one side\n//   is deleted, the position itself is only considered deleted when\n//   `assoc` points in the direction of the deleted content.\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\n\nvar lower16 = 0xffff;\nvar factor16 = Math.pow(2, 16);\n\nfunction makeRecover(index, offset) { return index + offset * factor16 }\nfunction recoverIndex(value) { return value & lower16 }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16 }\n\n// ::- An object representing a mapped position with extra\n// information.\nvar MapResult = function MapResult(pos, deleted, recover) {\n  if ( deleted === void 0 ) deleted = false;\n  if ( recover === void 0 ) recover = null;\n\n  // :: number The mapped version of the position.\n  this.pos = pos;\n  // :: bool Tells you whether the position was deleted, that is,\n  // whether the step removed its surroundings from the document.\n  this.deleted = deleted;\n  this.recover = recover;\n};\n\n// :: class extends Mappable\n// A map describing the deletions and insertions made by a step, which\n// can be used to find the correspondence between positions in the\n// pre-step version of a document and the same position in the\n// post-step version.\nvar StepMap = function StepMap(ranges, inverted) {\n  if ( inverted === void 0 ) inverted = false;\n\n  this.ranges = ranges;\n  this.inverted = inverted;\n};\n\nStepMap.prototype.recover = function recover (value) {\n    var this$1 = this;\n\n  var diff = 0, index = recoverIndex(value);\n  if (!this.inverted) { for (var i = 0; i < index; i++)\n    { diff += this$1.ranges[i * 3 + 2] - this$1.ranges[i * 3 + 1]; } }\n  return this.ranges[index * 3] + diff + recoverOffset(value)\n};\n\n// : (number, ?number) → MapResult\nStepMap.prototype.mapResult = function mapResult (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, false) };\n\n// : (number, ?number) → number\nStepMap.prototype.map = function map (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, true) };\n\nStepMap.prototype._map = function _map (pos, assoc, simple) {\n    var this$1 = this;\n\n  var diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0; i < this.ranges.length; i += 3) {\n    var start = this$1.ranges[i] - (this$1.inverted ? diff : 0);\n    if (start > pos) { break }\n    var oldSize = this$1.ranges[i + oldIndex], newSize = this$1.ranges[i + newIndex], end = start + oldSize;\n    if (pos <= end) {\n      var side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n      var result = start + diff + (side < 0 ? 0 : newSize);\n      if (simple) { return result }\n      var recover = makeRecover(i / 3, pos - start);\n      return new MapResult(result, assoc < 0 ? pos != start : pos != end, recover)\n    }\n    diff += newSize - oldSize;\n  }\n  return simple ? pos + diff : new MapResult(pos + diff)\n};\n\nStepMap.prototype.touches = function touches (pos, recover) {\n    var this$1 = this;\n\n  var diff = 0, index = recoverIndex(recover);\n  var oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0; i < this.ranges.length; i += 3) {\n    var start = this$1.ranges[i] - (this$1.inverted ? diff : 0);\n    if (start > pos) { break }\n    var oldSize = this$1.ranges[i + oldIndex], end = start + oldSize;\n    if (pos <= end && i == index * 3) { return true }\n    diff += this$1.ranges[i + newIndex] - oldSize;\n  }\n  return false\n};\n\n// :: ((oldStart: number, oldEnd: number, newStart: number, newEnd: number))\n// Calls the given function on each of the changed ranges included in\n// this map.\nStepMap.prototype.forEach = function forEach (f) {\n    var this$1 = this;\n\n  var oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0, diff = 0; i < this.ranges.length; i += 3) {\n    var start = this$1.ranges[i], oldStart = start - (this$1.inverted ? diff : 0), newStart = start + (this$1.inverted ? 0 : diff);\n    var oldSize = this$1.ranges[i + oldIndex], newSize = this$1.ranges[i + newIndex];\n    f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n    diff += newSize - oldSize;\n  }\n};\n\n// :: () → StepMap\n// Create an inverted version of this map. The result can be used to\n// map positions in the post-step document to the pre-step document.\nStepMap.prototype.invert = function invert () {\n  return new StepMap(this.ranges, !this.inverted)\n};\n\nStepMap.prototype.toString = function toString () {\n  return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges)\n};\n\n// :: (n: number) → StepMap\n// Create a map that moves all positions by offset `n` (which may be\n// negative). This can be useful when applying steps meant for a\n// sub-document to a larger document, or vice-versa.\nStepMap.offset = function offset (n) {\n  return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n])\n};\n\nStepMap.empty = new StepMap([]);\n\n// :: class extends Mappable\n// A mapping represents a pipeline of zero or more [step\n// maps](#transform.StepMap). It has special provisions for losslessly\n// handling mapping positions through a series of steps in which some\n// steps are inverted versions of earlier steps. (This comes up when\n// ‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\n// collaboration or history management.)\nvar Mapping = function Mapping(maps, mirror, from, to) {\n  // :: [StepMap]\n  // The step maps in this mapping.\n  this.maps = maps || [];\n  // :: number\n  // The starting position in the `maps` array, used when `map` or\n  // `mapResult` is called.\n  this.from = from || 0;\n  // :: number\n  // The end position in the `maps` array.\n  this.to = to == null ? this.maps.length : to;\n  this.mirror = mirror;\n};\n\n// :: (?number, ?number) → Mapping\n// Create a mapping that maps only through a part of this one.\nMapping.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.maps.length;\n\n  return new Mapping(this.maps, this.mirror, from, to)\n};\n\nMapping.prototype.copy = function copy () {\n  return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)\n};\n\nMapping.prototype.getMirror = function getMirror (n) {\n    var this$1 = this;\n\n  if (this.mirror) { for (var i = 0; i < this.mirror.length; i++)\n    { if (this$1.mirror[i] == n) { return this$1.mirror[i + (i % 2 ? -1 : 1)] } } }\n};\n\nMapping.prototype.setMirror = function setMirror (n, m) {\n  if (!this.mirror) { this.mirror = []; }\n  this.mirror.push(n, m);\n};\n\n// :: (StepMap, ?number)\n// Add a step map to the end of this mapping. If `mirrors` is\n// given, it should be the index of the step map that is the mirror\n// image of this one.\nMapping.prototype.appendMap = function appendMap (map, mirrors) {\n  this.to = this.maps.push(map);\n  if (mirrors != null) { this.setMirror(this.maps.length - 1, mirrors); }\n};\n\n// :: (Mapping)\n// Add all the step maps in a given mapping to this one (preserving\n// mirroring information).\nMapping.prototype.appendMapping = function appendMapping (mapping) {\n    var this$1 = this;\n\n  for (var i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n    var mirr = mapping.getMirror(i);\n    this$1.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : null);\n  }\n};\n\n// :: (Mapping)\n// Append the inverse of the given mapping to this one.\nMapping.prototype.appendMappingInverted = function appendMappingInverted (mapping) {\n    var this$1 = this;\n\n  for (var i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n    var mirr = mapping.getMirror(i);\n    this$1.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : null);\n  }\n};\n\n// () → Mapping\n// Create an inverted version of this mapping.\nMapping.prototype.invert = function invert () {\n  var inverse = new Mapping;\n  inverse.appendMappingInverted(this);\n  return inverse\n};\n\n// : (number, ?number) → number\n// Map a position through this mapping.\nMapping.prototype.map = function map (pos, assoc) {\n    var this$1 = this;\n    if ( assoc === void 0 ) assoc = 1;\n\n  if (this.mirror) { return this._map(pos, assoc, true) }\n  for (var i = this.from; i < this.to; i++)\n    { pos = this$1.maps[i].map(pos, assoc); }\n  return pos\n};\n\n// : (number, ?number) → MapResult\n// Map a position through this mapping, returning a mapping\n// result.\nMapping.prototype.mapResult = function mapResult (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, false) };\n\nMapping.prototype._map = function _map (pos, assoc, simple) {\n    var this$1 = this;\n\n  var deleted = false, recoverables = null;\n\n  for (var i = this.from; i < this.to; i++) {\n    var map = this$1.maps[i], rec = recoverables && recoverables[i];\n    if (rec != null && map.touches(pos, rec)) {\n      pos = map.recover(rec);\n      continue\n    }\n\n    var result = map.mapResult(pos, assoc);\n    if (result.recover != null) {\n      var corr = this$1.getMirror(i);\n      if (corr != null && corr > i && corr < this$1.to) {\n        if (result.deleted) {\n          i = corr;\n          pos = this$1.maps[corr].recover(result.recover);\n          continue\n        } else {\n          (recoverables || (recoverables = Object.create(null)))[corr] = result.recover;\n        }\n      }\n    }\n\n    if (result.deleted) { deleted = true; }\n    pos = result.pos;\n  }\n\n  return simple ? pos : new MapResult(pos, deleted)\n};\n\nfunction TransformError(message) {\n  var err = Error.call(this, message);\n  err.__proto__ = TransformError.prototype;\n  return err\n}\n\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n\n// ::- Abstraction to build up and track an array of\n// [steps](#transform.Step) representing a document transformation.\n//\n// Most transforming methods return the `Transform` object itself, so\n// that they can be chained.\nvar Transform = function Transform(doc) {\n  // :: Node\n  // The current document (the result of applying the steps in the\n  // transform).\n  this.doc = doc;\n  // :: [Step]\n  // The steps in this transform.\n  this.steps = [];\n  // :: [Node]\n  // The documents before each of the steps.\n  this.docs = [];\n  // :: Mapping\n  // A mapping with the maps for each of the steps in this transform.\n  this.mapping = new Mapping;\n};\n\nvar prototypeAccessors = { before: {},docChanged: {} };\n\n// :: Node The starting document.\nprototypeAccessors.before.get = function () { return this.docs.length ? this.docs[0] : this.doc };\n\n// :: (step: Step) → this\n// Apply a new step in this transform, saving the result. Throws an\n// error when the step fails.\nTransform.prototype.step = function step (object) {\n  var result = this.maybeStep(object);\n  if (result.failed) { throw new TransformError(result.failed) }\n  return this\n};\n\n// :: (Step) → StepResult\n// Try to apply a step in this transformation, ignoring it if it\n// fails. Returns the step result.\nTransform.prototype.maybeStep = function maybeStep (step) {\n  var result = step.apply(this.doc);\n  if (!result.failed) { this.addStep(step, result.doc); }\n  return result\n};\n\n// :: bool\n// True when the document has been changed (when there are any\n// steps).\nprototypeAccessors.docChanged.get = function () {\n  return this.steps.length > 0\n};\n\nTransform.prototype.addStep = function addStep (step, doc) {\n  this.docs.push(this.doc);\n  this.steps.push(step);\n  this.mapping.appendMap(step.getMap());\n  this.doc = doc;\n};\n\nObject.defineProperties( Transform.prototype, prototypeAccessors );\n\nfunction mustOverride() { throw new Error(\"Override me\") }\n\nvar stepsByID = Object.create(null);\n\n// ::- A step object represents an atomic change. It generally applies\n// only to the document it was created for, since the positions\n// stored in it will only make sense for that document.\n//\n// New steps are defined by creating classes that extend `Step`,\n// overriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\n// methods, and registering your class with a unique\n// JSON-serialization identifier using\n// [`Step.jsonID`](#transform.Step^jsonID).\nvar Step = function Step () {};\n\nStep.prototype.apply = function apply (_doc) { return mustOverride() };\n\n// :: () → StepMap\n// Get the step map that represents the changes made by this step,\n// and which can be used to transform between positions in the old\n// and the new document.\nStep.prototype.getMap = function getMap () { return StepMap.empty };\n\n// :: (doc: Node) → Step\n// Create an inverted version of this step. Needs the document as it\n// was before the step as argument.\nStep.prototype.invert = function invert (_doc) { return mustOverride() };\n\n// :: (mapping: Mappable) → ?Step\n// Map this step through a mappable thing, returning either a\n// version of that step with its positions adjusted, or `null` if\n// the step was entirely deleted by the mapping.\nStep.prototype.map = function map (_mapping) { return mustOverride() };\n\n// :: (other: Step) → ?Step\n// Try to merge this step with another one, to be applied directly\n// after it. Returns the merged step when possible, null if the\n// steps can't be merged.\nStep.prototype.merge = function merge (_other) { return null };\n\n// :: () → Object\n// Create a JSON-serializeable representation of this step. When\n// defining this for a custom subclass, make sure the result object\n// includes the step type's [JSON id](#transform.Step^jsonID) under\n// the `stepType` property.\nStep.prototype.toJSON = function toJSON () { return mustOverride() };\n\n// :: (Schema, Object) → Step\n// Deserialize a step from its JSON representation. Will call\n// through to the step class' own implementation of this method.\nStep.fromJSON = function fromJSON (schema, json) {\n  if (!json || !json.stepType) { throw new RangeError(\"Invalid input for Step.fromJSON\") }\n  var type = stepsByID[json.stepType];\n  if (!type) { throw new RangeError((\"No step type \" + (json.stepType) + \" defined\")) }\n  return type.fromJSON(schema, json)\n};\n\n// :: (string, constructor<Step>)\n// To be able to serialize steps to JSON, each step needs a string\n// ID to attach to its JSON representation. Use this method to\n// register an ID for your step classes. Try to pick something\n// that's unlikely to clash with steps from other modules.\nStep.jsonID = function jsonID (id, stepClass) {\n  if (id in stepsByID) { throw new RangeError(\"Duplicate use of step JSON ID \" + id) }\n  stepsByID[id] = stepClass;\n  stepClass.prototype.jsonID = id;\n  return stepClass\n};\n\n// ::- The result of [applying](#transform.Step.apply) a step. Contains either a\n// new document or a failure value.\nvar StepResult = function StepResult(doc, failed) {\n  // :: ?Node The transformed document.\n  this.doc = doc;\n  // :: ?string Text providing information about a failed step.\n  this.failed = failed;\n};\n\n// :: (Node) → StepResult\n// Create a successful step result.\nStepResult.ok = function ok (doc) { return new StepResult(doc, null) };\n\n// :: (string) → StepResult\n// Create a failed step result.\nStepResult.fail = function fail (message) { return new StepResult(null, message) };\n\n// :: (Node, number, number, Slice) → StepResult\n// Call [`Node.replace`](#model.Node.replace) with the given\n// arguments. Create a successful result if it succeeds, and a\n// failed one if it throws a `ReplaceError`.\nStepResult.fromReplace = function fromReplace (doc, from, to, slice) {\n  try {\n    return StepResult.ok(doc.replace(from, to, slice))\n  } catch (e) {\n    if (e instanceof prosemirrorModel.ReplaceError) { return StepResult.fail(e.message) }\n    throw e\n  }\n};\n\n// ::- Replace a part of the document with a slice of new content.\nvar ReplaceStep = (function (Step$$1) {\n  function ReplaceStep(from, to, slice, structure) {\n    Step$$1.call(this);\n    this.from = from;\n    this.to = to;\n    this.slice = slice;\n    this.structure = !!structure;\n  }\n\n  if ( Step$$1 ) ReplaceStep.__proto__ = Step$$1;\n  ReplaceStep.prototype = Object.create( Step$$1 && Step$$1.prototype );\n  ReplaceStep.prototype.constructor = ReplaceStep;\n\n  ReplaceStep.prototype.apply = function apply (doc) {\n    if (this.structure && contentBetween(doc, this.from, this.to))\n      { return StepResult.fail(\"Structure replace would overwrite content\") }\n    return StepResult.fromReplace(doc, this.from, this.to, this.slice)\n  };\n\n  ReplaceStep.prototype.getMap = function getMap () {\n    return new StepMap([this.from, this.to - this.from, this.slice.size])\n  };\n\n  ReplaceStep.prototype.invert = function invert (doc) {\n    return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to))\n  };\n\n  ReplaceStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted) { return null }\n    return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice)\n  };\n\n  ReplaceStep.prototype.merge = function merge (other) {\n    if (!(other instanceof ReplaceStep) || other.structure != this.structure) { return null }\n\n    if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n      var slice = this.slice.size + other.slice.size == 0 ? prosemirrorModel.Slice.empty\n          : new prosemirrorModel.Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n      return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure)\n    } else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n      var slice$1 = this.slice.size + other.slice.size == 0 ? prosemirrorModel.Slice.empty\n          : new prosemirrorModel.Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n      return new ReplaceStep(other.from, this.to, slice$1, this.structure)\n    } else {\n      return null\n    }\n  };\n\n  ReplaceStep.prototype.toJSON = function toJSON () {\n    var json = {stepType: \"replace\", from: this.from, to: this.to};\n    if (this.slice.size) { json.slice = this.slice.toJSON(); }\n    if (this.structure) { json.structure = true; }\n    return json\n  };\n\n  ReplaceStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\") }\n    return new ReplaceStep(json.from, json.to, prosemirrorModel.Slice.fromJSON(schema, json.slice), !!json.structure)\n  };\n\n  return ReplaceStep;\n}(Step));\n\nStep.jsonID(\"replace\", ReplaceStep);\n\n// ::- Replace a part of the document with a slice of content, but\n// preserve a range of the replaced content by moving it into the\n// slice.\nvar ReplaceAroundStep = (function (Step$$1) {\n  function ReplaceAroundStep(from, to, gapFrom, gapTo, slice, insert, structure) {\n    Step$$1.call(this);\n    this.from = from;\n    this.to = to;\n    this.gapFrom = gapFrom;\n    this.gapTo = gapTo;\n    this.slice = slice;\n    this.insert = insert;\n    this.structure = !!structure;\n  }\n\n  if ( Step$$1 ) ReplaceAroundStep.__proto__ = Step$$1;\n  ReplaceAroundStep.prototype = Object.create( Step$$1 && Step$$1.prototype );\n  ReplaceAroundStep.prototype.constructor = ReplaceAroundStep;\n\n  ReplaceAroundStep.prototype.apply = function apply (doc) {\n    if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n                           contentBetween(doc, this.gapTo, this.to)))\n      { return StepResult.fail(\"Structure gap-replace would overwrite content\") }\n\n    var gap = doc.slice(this.gapFrom, this.gapTo);\n    if (gap.openStart || gap.openEnd)\n      { return StepResult.fail(\"Gap is not a flat range\") }\n    var inserted = this.slice.insertAt(this.insert, gap.content);\n    if (!inserted) { return StepResult.fail(\"Content does not fit in gap\") }\n    return StepResult.fromReplace(doc, this.from, this.to, inserted)\n  };\n\n  ReplaceAroundStep.prototype.getMap = function getMap () {\n    return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n                        this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])\n  };\n\n  ReplaceAroundStep.prototype.invert = function invert (doc) {\n    var gap = this.gapTo - this.gapFrom;\n    return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap,\n                                 this.from + this.insert, this.from + this.insert + gap,\n                                 doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from),\n                                 this.gapFrom - this.from, this.structure)\n  };\n\n  ReplaceAroundStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    var gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1);\n    if ((from.deleted && to.deleted) || gapFrom < from.pos || gapTo > to.pos) { return null }\n    return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure)\n  };\n\n  ReplaceAroundStep.prototype.toJSON = function toJSON () {\n    var json = {stepType: \"replaceAround\", from: this.from, to: this.to,\n                gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert};\n    if (this.slice.size) { json.slice = this.slice.toJSON(); }\n    if (this.structure) { json.structure = true; }\n    return json\n  };\n\n  ReplaceAroundStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n      { throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\") }\n    return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo,\n                                 prosemirrorModel.Slice.fromJSON(schema, json.slice), json.insert, !!json.structure)\n  };\n\n  return ReplaceAroundStep;\n}(Step));\n\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\n\nfunction contentBetween(doc, from, to) {\n  var $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n  while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n    depth--;\n    dist--;\n  }\n  if (dist > 0) {\n    var next = $from.node(depth).maybeChild($from.indexAfter(depth));\n    while (dist > 0) {\n      if (!next || next.isLeaf) { return true }\n      next = next.firstChild;\n      dist--;\n    }\n  }\n  return false\n}\n\nfunction canCut(node, start, end) {\n  return (start == 0 || node.canReplace(start, node.childCount)) &&\n    (end == node.childCount || node.canReplace(0, end))\n}\n\n// :: (NodeRange) → ?number\n// Try to find a target depth to which the content in the given range\n// can be lifted. Will not go across\n// [isolating](#model.NodeSpec.isolating) parent nodes.\nfunction liftTarget(range) {\n  var parent = range.parent;\n  var content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n  for (var depth = range.depth;; --depth) {\n    var node = range.$from.node(depth);\n    var index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n    if (depth < range.depth && node.canReplace(index, endIndex, content))\n      { return depth }\n    if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex)) { break }\n  }\n}\n\n// :: (NodeRange, number) → this\n// Split the content in the given range off from its parent, if there\n// is sibling content before or after it, and move it up the tree to\n// the depth specified by `target`. You'll probably want to use\n// [`liftTarget`](#transform.liftTarget) to compute `target`, to make\n// sure the lift is valid.\nTransform.prototype.lift = function(range, target) {\n  var $from = range.$from;\n  var $to = range.$to;\n  var depth = range.depth;\n\n  var gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n  var start = gapStart, end = gapEnd;\n\n  var before = prosemirrorModel.Fragment.empty, openStart = 0;\n  for (var d = depth, splitting = false; d > target; d--)\n    { if (splitting || $from.index(d) > 0) {\n      splitting = true;\n      before = prosemirrorModel.Fragment.from($from.node(d).copy(before));\n      openStart++;\n    } else {\n      start--;\n    } }\n  var after = prosemirrorModel.Fragment.empty, openEnd = 0;\n  for (var d$1 = depth, splitting$1 = false; d$1 > target; d$1--)\n    { if (splitting$1 || $to.after(d$1 + 1) < $to.end(d$1)) {\n      splitting$1 = true;\n      after = prosemirrorModel.Fragment.from($to.node(d$1).copy(after));\n      openEnd++;\n    } else {\n      end++;\n    } }\n\n  return this.step(new ReplaceAroundStep(start, end, gapStart, gapEnd,\n                                         new prosemirrorModel.Slice(before.append(after), openStart, openEnd),\n                                         before.size - openStart, true))\n};\n\n// :: (NodeRange, NodeType, ?Object, ?NodeRange) → ?[{type: NodeType, attrs: ?Object}]\n// Try to find a valid way to wrap the content in the given range in a\n// node of the given type. May introduce extra nodes around and inside\n// the wrapper node, if necessary. Returns null if no valid wrapping\n// could be found. When `innerRange` is given, that range's content is\n// used as the content to fit into the wrapping, instead of the\n// content of `range`.\nfunction findWrapping(range, nodeType, attrs, innerRange) {\n  if ( innerRange === void 0 ) innerRange = range;\n\n  var around = findWrappingOutside(range, nodeType);\n  var inner = around && findWrappingInside(innerRange, nodeType);\n  if (!inner) { return null }\n  return around.map(withAttrs).concat({type: nodeType, attrs: attrs}).concat(inner.map(withAttrs))\n}\n\nfunction withAttrs(type) { return {type: type, attrs: null} }\n\nfunction findWrappingOutside(range, type) {\n  var parent = range.parent;\n  var startIndex = range.startIndex;\n  var endIndex = range.endIndex;\n  var around = parent.contentMatchAt(startIndex).findWrapping(type);\n  if (!around) { return null }\n  var outer = around.length ? around[0] : type;\n  return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null\n}\n\nfunction findWrappingInside(range, type) {\n  var parent = range.parent;\n  var startIndex = range.startIndex;\n  var endIndex = range.endIndex;\n  var inner = parent.child(startIndex);\n  var inside = type.contentMatch.findWrapping(inner.type);\n  if (!inside) { return null }\n  var lastType = inside.length ? inside[inside.length - 1] : type;\n  var innerMatch = lastType.contentMatch;\n  for (var i = startIndex; innerMatch && i < endIndex; i++)\n    { innerMatch = innerMatch.matchType(parent.child(i).type); }\n  if (!innerMatch || !innerMatch.validEnd) { return null }\n  return inside\n}\n\n// :: (NodeRange, [{type: NodeType, attrs: ?Object}]) → this\n// Wrap the given [range](#model.NodeRange) in the given set of wrappers.\n// The wrappers are assumed to be valid in this position, and should\n// probably be computed with [`findWrapping`](#transform.findWrapping).\nTransform.prototype.wrap = function(range, wrappers) {\n  var content = prosemirrorModel.Fragment.empty;\n  for (var i = wrappers.length - 1; i >= 0; i--)\n    { content = prosemirrorModel.Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content)); }\n\n  var start = range.start, end = range.end;\n  return this.step(new ReplaceAroundStep(start, end, start, end, new prosemirrorModel.Slice(content, 0, 0), wrappers.length, true))\n};\n\n// :: (number, ?number, NodeType, ?Object) → this\n// Set the type of all textblocks (partly) between `from` and `to` to\n// the given node type with the given attributes.\nTransform.prototype.setBlockType = function(from, to, type, attrs) {\n  var this$1 = this;\n  if ( to === void 0 ) to = from;\n\n  if (!type.isTextblock) { throw new RangeError(\"Type given to setBlockType should be a textblock\") }\n  var mapFrom = this.steps.length;\n  this.doc.nodesBetween(from, to, function (node, pos) {\n    if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(this$1.doc, this$1.mapping.slice(mapFrom).map(pos), type)) {\n      // Ensure all markup that isn't allowed in the new node type is cleared\n      this$1.clearIncompatible(this$1.mapping.slice(mapFrom).map(pos, 1), type);\n      var mapping = this$1.mapping.slice(mapFrom);\n      var startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n      this$1.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1,\n                                      new prosemirrorModel.Slice(prosemirrorModel.Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n      return false\n    }\n  });\n  return this\n};\n\nfunction canChangeType(doc, pos, type) {\n  var $pos = doc.resolve(pos), index = $pos.index();\n  return $pos.parent.canReplaceWith(index, index + 1, type)\n}\n\n// :: (number, ?NodeType, ?Object, ?[Mark]) → this\n// Change the type, attributes, and/or marks of the node at `pos`.\n// When `type` isn't given, the existing node type is preserved,\nTransform.prototype.setNodeMarkup = function(pos, type, attrs, marks) {\n  var node = this.doc.nodeAt(pos);\n  if (!node) { throw new RangeError(\"No node at given position\") }\n  if (!type) { type = node.type; }\n  var newNode = type.create(attrs, null, marks || node.marks);\n  if (node.isLeaf)\n    { return this.replaceWith(pos, pos + node.nodeSize, newNode) }\n\n  if (!type.validContent(node.content))\n    { throw new RangeError(\"Invalid content for node type \" + type.name) }\n\n  return this.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1,\n                                         new prosemirrorModel.Slice(prosemirrorModel.Fragment.from(newNode), 0, 0), 1, true))\n};\n\n// :: (Node, number, number, ?[?{type: NodeType, attrs: ?Object}]) → bool\n// Check whether splitting at the given position is allowed.\nfunction canSplit(doc, pos, depth, typesAfter) {\n  if ( depth === void 0 ) depth = 1;\n\n  var $pos = doc.resolve(pos), base = $pos.depth - depth;\n  var innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n  if (base < 0 || $pos.parent.type.spec.isolating ||\n      !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n      !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n    { return false }\n  for (var d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    var node = $pos.node(d), index$1 = $pos.index(d);\n    if (node.type.spec.isolating) { return false }\n    var rest = node.content.cutByIndex(index$1, node.childCount);\n    var after = (typesAfter && typesAfter[i]) || node;\n    if (after != node) { rest = rest.replaceChild(0, after.type.create(after.attrs)); }\n    if (!node.canReplace(index$1 + 1, node.childCount) || !after.type.validContent(rest))\n      { return false }\n  }\n  var index = $pos.indexAfter(base);\n  var baseType = typesAfter && typesAfter[0];\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type)\n}\n\n// :: (number, ?number, ?[?{type: NodeType, attrs: ?Object}]) → this\n// Split the node at the given position, and optionally, if `depth` is\n// greater than one, any number of nodes above that. By default, the\n// parts split off will inherit the node type of the original node.\n// This can be changed by passing an array of types and attributes to\n// use after the split.\nTransform.prototype.split = function(pos, depth, typesAfter) {\n  if ( depth === void 0 ) depth = 1;\n\n  var $pos = this.doc.resolve(pos), before = prosemirrorModel.Fragment.empty, after = prosemirrorModel.Fragment.empty;\n  for (var d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n    before = prosemirrorModel.Fragment.from($pos.node(d).copy(before));\n    var typeAfter = typesAfter && typesAfter[i];\n    after = prosemirrorModel.Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n  }\n  return this.step(new ReplaceStep(pos, pos, new prosemirrorModel.Slice(before.append(after), depth, depth, true)))\n};\n\n// :: (Node, number) → bool\n// Test whether the blocks before and after a given position can be\n// joined.\nfunction canJoin(doc, pos) {\n  var $pos = doc.resolve(pos), index = $pos.index();\n  return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n    $pos.parent.canReplace(index, index + 1)\n}\n\nfunction joinable(a, b) {\n  return a && b && !a.isLeaf && a.canAppend(b)\n}\n\n// :: (Node, number, ?number) → ?number\n// Find an ancestor of the given position that can be joined to the\n// block before (or after if `dir` is positive). Returns the joinable\n// point, if any.\nfunction joinPoint(doc, pos, dir) {\n  if ( dir === void 0 ) dir = -1;\n\n  var $pos = doc.resolve(pos);\n  for (var d = $pos.depth;; d--) {\n    var before = (void 0), after = (void 0);\n    if (d == $pos.depth) {\n      before = $pos.nodeBefore;\n      after = $pos.nodeAfter;\n    } else if (dir > 0) {\n      before = $pos.node(d + 1);\n      after = $pos.node(d).maybeChild($pos.index(d) + 1);\n    } else {\n      before = $pos.node(d).maybeChild($pos.index(d) - 1);\n      after = $pos.node(d + 1);\n    }\n    if (before && !before.isTextblock && joinable(before, after)) { return pos }\n    if (d == 0) { break }\n    pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n  }\n}\n\n// :: (number, ?number) → this\n// Join the blocks around the given position. If depth is 2, their\n// last and first siblings are also joined, and so on.\nTransform.prototype.join = function(pos, depth) {\n  if ( depth === void 0 ) depth = 1;\n\n  var step = new ReplaceStep(pos - depth, pos + depth, prosemirrorModel.Slice.empty, true);\n  return this.step(step)\n};\n\n// :: (Node, number, NodeType) → ?number\n// Try to find a point where a node of the given type can be inserted\n// near `pos`, by searching up the node hierarchy when `pos` itself\n// isn't a valid place but is at the start or end of a node. Return\n// null if no position was found.\nfunction insertPoint(doc, pos, nodeType) {\n  var $pos = doc.resolve(pos);\n  if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType)) { return pos }\n\n  if ($pos.parentOffset == 0)\n    { for (var d = $pos.depth - 1; d >= 0; d--) {\n      var index = $pos.index(d);\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) { return $pos.before(d + 1) }\n      if (index > 0) { return null }\n    } }\n  if ($pos.parentOffset == $pos.parent.content.size)\n    { for (var d$1 = $pos.depth - 1; d$1 >= 0; d$1--) {\n      var index$1 = $pos.indexAfter(d$1);\n      if ($pos.node(d$1).canReplaceWith(index$1, index$1, nodeType)) { return $pos.after(d$1 + 1) }\n      if (index$1 < $pos.node(d$1).childCount) { return null }\n    } }\n}\n\nfunction mapFragment(fragment, f, parent) {\n  var mapped = [];\n  for (var i = 0; i < fragment.childCount; i++) {\n    var child = fragment.child(i);\n    if (child.content.size) { child = child.copy(mapFragment(child.content, f, child)); }\n    if (child.isInline) { child = f(child, parent, i); }\n    mapped.push(child);\n  }\n  return prosemirrorModel.Fragment.fromArray(mapped)\n}\n\n// ::- Add a mark to all inline content between two positions.\nvar AddMarkStep = (function (Step$$1) {\n  function AddMarkStep(from, to, mark) {\n    Step$$1.call(this);\n    this.from = from;\n    this.to = to;\n    this.mark = mark;\n  }\n\n  if ( Step$$1 ) AddMarkStep.__proto__ = Step$$1;\n  AddMarkStep.prototype = Object.create( Step$$1 && Step$$1.prototype );\n  AddMarkStep.prototype.constructor = AddMarkStep;\n\n  AddMarkStep.prototype.apply = function apply (doc) {\n    var this$1 = this;\n\n    var oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n    var parent = $from.node($from.sharedDepth(this.to));\n    var slice = new prosemirrorModel.Slice(mapFragment(oldSlice.content, function (node, parent) {\n      if (!parent.type.allowsMarkType(this$1.mark.type)) { return node }\n      return node.mark(this$1.mark.addToSet(node.marks))\n    }, parent), oldSlice.openStart, oldSlice.openEnd);\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  };\n\n  AddMarkStep.prototype.invert = function invert () {\n    return new RemoveMarkStep(this.from, this.to, this.mark)\n  };\n\n  AddMarkStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted || from.pos >= to.pos) { return null }\n    return new AddMarkStep(from.pos, to.pos, this.mark)\n  };\n\n  AddMarkStep.prototype.merge = function merge (other) {\n    if (other instanceof AddMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      { return new AddMarkStep(Math.min(this.from, other.from),\n                             Math.max(this.to, other.to), this.mark) }\n  };\n\n  AddMarkStep.prototype.toJSON = function toJSON () {\n    return {stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  };\n\n  AddMarkStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\") }\n    return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  };\n\n  return AddMarkStep;\n}(Step));\n\nStep.jsonID(\"addMark\", AddMarkStep);\n\n// ::- Remove a mark from all inline content between two positions.\nvar RemoveMarkStep = (function (Step$$1) {\n  function RemoveMarkStep(from, to, mark) {\n    Step$$1.call(this);\n    this.from = from;\n    this.to = to;\n    this.mark = mark;\n  }\n\n  if ( Step$$1 ) RemoveMarkStep.__proto__ = Step$$1;\n  RemoveMarkStep.prototype = Object.create( Step$$1 && Step$$1.prototype );\n  RemoveMarkStep.prototype.constructor = RemoveMarkStep;\n\n  RemoveMarkStep.prototype.apply = function apply (doc) {\n    var this$1 = this;\n\n    var oldSlice = doc.slice(this.from, this.to);\n    var slice = new prosemirrorModel.Slice(mapFragment(oldSlice.content, function (node) {\n      return node.mark(this$1.mark.removeFromSet(node.marks))\n    }), oldSlice.openStart, oldSlice.openEnd);\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  };\n\n  RemoveMarkStep.prototype.invert = function invert () {\n    return new AddMarkStep(this.from, this.to, this.mark)\n  };\n\n  RemoveMarkStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted || from.pos >= to.pos) { return null }\n    return new RemoveMarkStep(from.pos, to.pos, this.mark)\n  };\n\n  RemoveMarkStep.prototype.merge = function merge (other) {\n    if (other instanceof RemoveMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      { return new RemoveMarkStep(Math.min(this.from, other.from),\n                                Math.max(this.to, other.to), this.mark) }\n  };\n\n  RemoveMarkStep.prototype.toJSON = function toJSON () {\n    return {stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  };\n\n  RemoveMarkStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\") }\n    return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  };\n\n  return RemoveMarkStep;\n}(Step));\n\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n\n// :: (number, number, Mark) → this\n// Add the given mark to the inline content between `from` and `to`.\nTransform.prototype.addMark = function(from, to, mark) {\n  var this$1 = this;\n\n  var removed = [], added = [], removing = null, adding = null;\n  this.doc.nodesBetween(from, to, function (node, pos, parent) {\n    if (!node.isInline) { return }\n    var marks = node.marks;\n    if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n      var start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n      var newSet = mark.addToSet(marks);\n\n      for (var i = 0; i < marks.length; i++) {\n        if (!marks[i].isInSet(newSet)) {\n          if (removing && removing.to == start && removing.mark.eq(marks[i]))\n            { removing.to = end; }\n          else\n            { removed.push(removing = new RemoveMarkStep(start, end, marks[i])); }\n        }\n      }\n\n      if (adding && adding.to == start)\n        { adding.to = end; }\n      else\n        { added.push(adding = new AddMarkStep(start, end, mark)); }\n    }\n  });\n\n  removed.forEach(function (s) { return this$1.step(s); });\n  added.forEach(function (s) { return this$1.step(s); });\n  return this\n};\n\n// :: (number, number, ?union<Mark, MarkType>) → this\n// Remove marks from inline nodes between `from` and `to`. When `mark`\n// is a single mark, remove precisely that mark. When it is a mark type,\n// remove all marks of that type. When it is null, remove all marks of\n// any type.\nTransform.prototype.removeMark = function(from, to, mark) {\n  var this$1 = this;\n  if ( mark === void 0 ) mark = null;\n\n  var matched = [], step = 0;\n  this.doc.nodesBetween(from, to, function (node, pos) {\n    if (!node.isInline) { return }\n    step++;\n    var toRemove = null;\n    if (mark instanceof prosemirrorModel.MarkType) {\n      var found = mark.isInSet(node.marks);\n      if (found) { toRemove = [found]; }\n    } else if (mark) {\n      if (mark.isInSet(node.marks)) { toRemove = [mark]; }\n    } else {\n      toRemove = node.marks;\n    }\n    if (toRemove && toRemove.length) {\n      var end = Math.min(pos + node.nodeSize, to);\n      for (var i = 0; i < toRemove.length; i++) {\n        var style = toRemove[i], found$1 = (void 0);\n        for (var j = 0; j < matched.length; j++) {\n          var m = matched[j];\n          if (m.step == step - 1 && style.eq(matched[j].style)) { found$1 = m; }\n        }\n        if (found$1) {\n          found$1.to = end;\n          found$1.step = step;\n        } else {\n          matched.push({style: style, from: Math.max(pos, from), to: end, step: step});\n        }\n      }\n    }\n  });\n  matched.forEach(function (m) { return this$1.step(new RemoveMarkStep(m.from, m.to, m.style)); });\n  return this\n};\n\n// :: (number, NodeType, ?ContentMatch) → this\n// Removes all marks and nodes from the content of the node at `pos`\n// that don't match the given new parent node type. Accepts an\n// optional starting [content match](#model.ContentMatch) as third\n// argument.\nTransform.prototype.clearIncompatible = function(pos, parentType, match) {\n  var this$1 = this;\n  if ( match === void 0 ) match = parentType.contentMatch;\n\n  var node = this.doc.nodeAt(pos);\n  var delSteps = [], cur = pos + 1;\n  for (var i = 0; i < node.childCount; i++) {\n    var child = node.child(i), end = cur + child.nodeSize;\n    var allowed = match.matchType(child.type, child.attrs);\n    if (!allowed) {\n      delSteps.push(new ReplaceStep(cur, end, prosemirrorModel.Slice.empty));\n    } else {\n      match = allowed;\n      for (var j = 0; j < child.marks.length; j++) { if (!parentType.allowsMarkType(child.marks[j].type))\n        { this$1.step(new RemoveMarkStep(cur, end, child.marks[j])); } }\n    }\n    cur = end;\n  }\n  if (!match.validEnd) {\n    var fill = match.fillBefore(prosemirrorModel.Fragment.empty, true);\n    this.replace(cur, cur, new prosemirrorModel.Slice(fill, 0, 0));\n  }\n  for (var i$1 = delSteps.length - 1; i$1 >= 0; i$1--) { this$1.step(delSteps[i$1]); }\n  return this\n};\n\n// :: (Node, number, ?number, ?Slice) → ?Step\n// ‘Fit’ a slice into a given position in the document, producing a\n// [step](#transform.Step) that inserts it. Will return null if\n// there's no meaningful way to insert the slice here, or inserting it\n// would be a no-op (an empty slice over an empty range).\nfunction replaceStep(doc, from, to, slice) {\n  if ( to === void 0 ) to = from;\n  if ( slice === void 0 ) slice = prosemirrorModel.Slice.empty;\n\n  if (from == to && !slice.size) { return null }\n\n  var $from = doc.resolve(from), $to = doc.resolve(to);\n  // Optimization -- avoid work if it's obvious that it's not needed.\n  if (fitsTrivially($from, $to, slice)) { return new ReplaceStep(from, to, slice) }\n  var placed = placeSlice($from, slice);\n\n  var fittedLeft = fitLeft($from, placed);\n  var fitted = fitRight($from, $to, fittedLeft);\n  if (!fitted) { return null }\n  if (fittedLeft.size != fitted.size && canMoveText($from, $to, fittedLeft)) {\n    var d = $to.depth, after = $to.after(d);\n    while (d > 1 && after == $to.end(--d)) { ++after; }\n    var fittedAfter = fitRight($from, doc.resolve(after), fittedLeft);\n    if (fittedAfter)\n      { return new ReplaceAroundStep(from, after, to, $to.end(), fittedAfter, fittedLeft.size) }\n  }\n  return fitted.size || from != to ? new ReplaceStep(from, to, fitted) : null\n}\n\n// :: (number, ?number, ?Slice) → this\n// Replace the part of the document between `from` and `to` with the\n// given `slice`.\nTransform.prototype.replace = function(from, to, slice) {\n  if ( to === void 0 ) to = from;\n  if ( slice === void 0 ) slice = prosemirrorModel.Slice.empty;\n\n  var step = replaceStep(this.doc, from, to, slice);\n  if (step) { this.step(step); }\n  return this\n};\n\n// :: (number, number, union<Fragment, Node, [Node]>) → this\n// Replace the given range with the given content, which may be a\n// fragment, node, or array of nodes.\nTransform.prototype.replaceWith = function(from, to, content) {\n  return this.replace(from, to, new prosemirrorModel.Slice(prosemirrorModel.Fragment.from(content), 0, 0))\n};\n\n// :: (number, number) → this\n// Delete the content between the given positions.\nTransform.prototype.delete = function(from, to) {\n  return this.replace(from, to, prosemirrorModel.Slice.empty)\n};\n\n// :: (number, union<Fragment, Node, [Node]>) → this\n// Insert the given content at the given position.\nTransform.prototype.insert = function(pos, content) {\n  return this.replaceWith(pos, pos, content)\n};\n\n\n\nfunction fitLeftInner($from, depth, placed, placedBelow) {\n  var content = prosemirrorModel.Fragment.empty, openEnd = 0, placedHere = placed[depth];\n  if ($from.depth > depth) {\n    var inner = fitLeftInner($from, depth + 1, placed, placedBelow || placedHere);\n    openEnd = inner.openEnd + 1;\n    content = prosemirrorModel.Fragment.from($from.node(depth + 1).copy(inner.content));\n  }\n\n  if (placedHere) {\n    content = content.append(placedHere.content);\n    openEnd = placedHere.openEnd;\n  }\n  if (placedBelow) {\n    content = content.append($from.node(depth).contentMatchAt($from.indexAfter(depth)).fillBefore(prosemirrorModel.Fragment.empty, true));\n    openEnd = 0;\n  }\n\n  return {content: content, openEnd: openEnd}\n}\n\nfunction fitLeft($from, placed) {\n  var ref = fitLeftInner($from, 0, placed, false);\n  var content = ref.content;\n  var openEnd = ref.openEnd;\n  return new prosemirrorModel.Slice(content, $from.depth, openEnd || 0)\n}\n\nfunction fitRightJoin(content, parent, $from, $to, depth, openStart, openEnd) {\n  var match, count = content.childCount, matchCount = count - (openEnd > 0 ? 1 : 0);\n  if (openStart < 0)\n    { match = parent.contentMatchAt(matchCount); }\n  else if (count == 1 && openEnd > 0)\n    { match = $from.node(depth).contentMatchAt(openStart ? $from.index(depth) : $from.indexAfter(depth)); }\n  else\n    { match = $from.node(depth).contentMatchAt($from.indexAfter(depth))\n      .matchFragment(content, count > 0 && openStart ? 1 : 0, matchCount); }\n\n  var toNode = $to.node(depth);\n  if (openEnd > 0 && depth < $to.depth) {\n    var after = toNode.content.cutByIndex($to.indexAfter(depth)).addToStart(content.lastChild);\n    var joinable$1 = match.fillBefore(after, true);\n    // Can't insert content if there's a single node stretched across this gap\n    if (joinable$1 && joinable$1.size && openStart > 0 && count == 1) { joinable$1 = null; }\n\n    if (joinable$1) {\n      var inner = fitRightJoin(content.lastChild.content, content.lastChild, $from, $to,\n                               depth + 1, count == 1 ? openStart - 1 : -1, openEnd - 1);\n      if (inner) {\n        var last = content.lastChild.copy(inner);\n        if (joinable$1.size)\n          { return content.cutByIndex(0, count - 1).append(joinable$1).addToEnd(last) }\n        else\n          { return content.replaceChild(count - 1, last) }\n      }\n    }\n  }\n  if (openEnd > 0)\n    { match = match.matchType((count == 1 && openStart > 0 ? $from.node(depth + 1) : content.lastChild).type); }\n\n  // If we're here, the next level can't be joined, so we see what\n  // happens if we leave it open.\n  var toIndex = $to.index(depth);\n  if (toIndex == toNode.childCount && !toNode.type.compatibleContent(parent.type)) { return null }\n  var joinable = match.fillBefore(toNode.content, true, toIndex);\n  if (!joinable) { return null }\n\n  if (openEnd > 0) {\n    var closed = fitRightClosed(content.lastChild, openEnd - 1, $from, depth + 1,\n                                count == 1 ? openStart - 1 : -1);\n    content = content.replaceChild(count - 1, closed);\n  }\n  content = content.append(joinable);\n  if ($to.depth > depth)\n    { content = content.addToEnd(fitRightSeparate($to, depth + 1)); }\n  return content\n}\n\nfunction fitRightClosed(node, openEnd, $from, depth, openStart) {\n  var match, content = node.content, count = content.childCount;\n  if (openStart >= 0)\n    { match = $from.node(depth).contentMatchAt($from.indexAfter(depth))\n      .matchFragment(content, openStart > 0 ? 1 : 0, count); }\n  else\n    { match = node.contentMatchAt(count); }\n\n  if (openEnd > 0) {\n    var closed = fitRightClosed(content.lastChild, openEnd - 1, $from, depth + 1,\n                                count == 1 ? openStart - 1 : -1);\n    content = content.replaceChild(count - 1, closed);\n  }\n\n  return node.copy(content.append(match.fillBefore(prosemirrorModel.Fragment.empty, true)))\n}\n\nfunction fitRightSeparate($to, depth) {\n  var node = $to.node(depth);\n  var fill = node.contentMatchAt(0).fillBefore(node.content, true, $to.index(depth));\n  if ($to.depth > depth) { fill = fill.addToEnd(fitRightSeparate($to, depth + 1)); }\n  return node.copy(fill)\n}\n\nfunction normalizeSlice(content, openStart, openEnd) {\n  while (openStart > 0 && openEnd > 0 && content.childCount == 1) {\n    content = content.firstChild.content;\n    openStart--;\n    openEnd--;\n  }\n  return new prosemirrorModel.Slice(content, openStart, openEnd)\n}\n\n// : (ResolvedPos, ResolvedPos, number, Slice) → Slice\nfunction fitRight($from, $to, slice) {\n  var fitted = fitRightJoin(slice.content, $from.node(0), $from, $to, 0, slice.openStart, slice.openEnd);\n  if (!fitted) { return null }\n  return normalizeSlice(fitted, slice.openStart, $to.depth)\n}\n\nfunction fitsTrivially($from, $to, slice) {\n  return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n    $from.parent.canReplace($from.index(), $to.index(), slice.content)\n}\n\nfunction canMoveText($from, $to, slice) {\n  if (!$to.parent.isTextblock) { return false }\n\n  var match;\n  if (!slice.openEnd) {\n    var parent = $from.node($from.depth - (slice.openStart - slice.openEnd));\n    if (!parent.isTextblock) { return false }\n    match = parent.contentMatchAt(parent.childCount);\n    if (slice.size)\n      { match = match.matchFragment(slice.content, slice.openStart ? 1 : 0); }\n  } else {\n    var parent$1 = nodeRight(slice.content, slice.openEnd);\n    if (!parent$1.isTextblock) { return false }\n    match = parent$1.contentMatchAt(parent$1.childCount);\n  }\n  match = match.matchFragment($to.parent.content, $to.index());\n  return match && match.validEnd\n}\n\nfunction nodeRight(content, depth) {\n  for (var i = 1; i < depth; i++) { content = content.lastChild.content; }\n  return content.lastChild\n}\n\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// So placeSlice splits up a slice into a number of sub-slices,\n// along with information on where they can be placed on the given\n// left-side edge. It works by walking the open side of the slice,\n// from the inside out, and trying to find a landing spot for each\n// element, by simultaneously scanning over the gap side. When no\n// place is found for an open node's content, it is left in that node.\n\n// : (ResolvedPos, Slice) → [{content: Fragment, openEnd: number, depth: number}]\nfunction placeSlice($from, slice) {\n  var frontier = new Frontier($from);\n  for (var pass = 1; slice.size && pass <= 3; pass++)\n    { slice = frontier.placeSlice(slice.content, slice.openStart, slice.openEnd, pass); }\n  while (frontier.open.length) { frontier.closeNode(); }\n  return frontier.placed\n}\n\n// Helper class that models the open side of the insert position,\n// keeping track of the content match and already inserted content\n// at each depth.\nvar Frontier = function Frontier($pos) {\n  var this$1 = this;\n\n  // : [{parent: Node, match: ContentMatch, content: Fragment, wrapper: bool, openEnd: number, depth: number}]\n  this.open = [];\n  for (var d = 0; d <= $pos.depth; d++) {\n    var parent = $pos.node(d), match = parent.contentMatchAt($pos.indexAfter(d));\n    this$1.open.push({parent: parent, match: match, content: prosemirrorModel.Fragment.empty, wrapper: false, openEnd: 0, depth: d});\n  }\n  this.placed = [];\n};\n\n// : (Fragment, number, number, number, ?Node) → Slice\n// Tries to place the content of the given slice, and returns a\n// slice containing unplaced content.\n//\n// pass 1: try to fit directly\n// pass 2: allow wrapper nodes to be introduced\n// pass 3: allow unwrapping of nodes that aren't open\nFrontier.prototype.placeSlice = function placeSlice (fragment, openStart, openEnd, pass, parent) {\n    var this$1 = this;\n\n  if (openStart > 0) {\n    var first = fragment.firstChild;\n    var inner = this.placeSlice(first.content, Math.max(0, openStart - 1),\n                                openEnd && fragment.childCount == 1 ? openEnd - 1 : 0,\n                                pass, first);\n    if (inner.content != first.content) {\n      if (inner.content.size) {\n        fragment = fragment.replaceChild(0, first.copy(inner.content));\n        openStart = inner.openStart + 1;\n      } else {\n        if (fragment.childCount == 1) { openEnd = 0; }\n        fragment = fragment.cutByIndex(1);\n        openStart = 0;\n      }\n    }\n  }\n  var result = this.placeContent(fragment, openStart, openEnd, pass, parent);\n  if (pass > 2 && result.size && openStart == 0) {\n    for (var i = 0; i < result.content.childCount; i++) {\n      var child = result.content.child(i);\n      this$1.placeContent(child.content, 0,\n                        openEnd && i == result.content.childCount.length - 1 ? openEnd - 1 : 0,\n                        pass, child);\n    }\n    result = prosemirrorModel.Fragment.empty;\n  }\n  return result\n};\n\nFrontier.prototype.placeContent = function placeContent (fragment, openStart, openEnd, pass, parent) {\n    var this$1 = this;\n\n  var i = 0;\n  // Go over the fragment's children\n  for (; i < fragment.childCount; i++) {\n    var child = fragment.child(i), placed = false, last = i == fragment.childCount - 1;\n    // Try each open node in turn, starting from the innermost\n    for (var d = this.open.length - 1; d >= 0; d--) {\n      var open = this$1.open[d], wrap = (void 0);\n\n      // If pass > 1, it is allowed to wrap the node to help find a\n      // fit, so if findWrappeing returns something, we add open\n      // nodes to the frontier for that wrapping.\n      if (pass > 1 && (wrap = open.match.findWrapping(child.type)) &&\n          !(parent && wrap.length && wrap[wrap.length - 1] == parent.type)) {\n        while (this.open.length - 1 > d) { this$1.closeNode(); }\n        for (var w = 0; w < wrap.length; w++) {\n          open.match = open.match.matchType(wrap[w]);\n          d++;\n          open = {parent: wrap[w].create(),\n                  match: wrap[w].contentMatch,\n                  content: prosemirrorModel.Fragment.empty, wrapper: true, openEnd: 0, depth: d + w};\n          this$1.open.push(open);\n        }\n      }\n\n      // See if the child fits here\n      var match = open.match.matchType(child.type);\n      if (!match) {\n        var fill = open.match.fillBefore(prosemirrorModel.Fragment.from(child));\n        if (fill) {\n          for (var j = 0; j < fill.childCount; j++) {\n            var ch = fill.child(j);\n            this$1.addNode(open, ch, 0);\n            match = open.match.matchFragment(ch);\n          }\n        } else if (parent && open.match.matchType(parent.type)) {\n          // Don't continue looking further up if the parent node\n          // would fit here.\n          break\n        } else {\n          continue\n        }\n      }\n\n      // Close open nodes above this one, since we're starting to\n      // add to this.\n      while (this.open.length - 1 > d) { this$1.closeNode(); }\n      // Strip marks from the child or close its start when necessary\n      child = child.mark(open.parent.type.allowedMarks(child.marks));\n      if (openStart) {\n        child = closeNodeStart(child, openStart, last ? openEnd : 0);\n        openStart = 0;\n      }\n      // Add the child to this open node and adjust its metadata\n      this$1.addNode(open, child, last ? openEnd : 0);\n      open.match = match;\n      if (last) { openEnd = 0; }\n      placed = true;\n      break\n    }\n    // As soon as we've failed to place a node we stop looking at\n    // later nodes\n    if (!placed) { break }\n  }\n  // Close the current open node if it's not the the root and we\n  // either placed up to the end of the node or the the current\n  // slice depth's node type matches the open node's type\n  if (this.open.length > 1 &&\n      (i > 0 && i == fragment.childCount ||\n       parent && this.open[this.open.length - 1].parent.type == parent.type))\n    { this.closeNode(); }\n\n  return new prosemirrorModel.Slice(fragment.cutByIndex(i), openStart, openEnd)\n};\n\nFrontier.prototype.addNode = function addNode (open, node, openEnd) {\n  open.content = closeFragmentEnd(open.content, open.openEnd).addToEnd(node);\n  open.openEnd = openEnd;\n};\n\nFrontier.prototype.closeNode = function closeNode () {\n  var open = this.open.pop();\n  if (open.content.size == 0) {\n    // Nothing here\n  } else if (open.wrapper) {\n    this.addNode(this.open[this.open.length - 1], open.parent.copy(open.content), open.openEnd + 1);\n  } else {\n    this.placed[open.depth] = {depth: open.depth, content: open.content, openEnd: open.openEnd};\n  }\n};\n\nfunction closeNodeStart(node, openStart, openEnd) {\n  var content = node.content;\n  if (openStart > 1) {\n    var first = closeNodeStart(node.firstChild, openStart - 1, node.childCount == 1 ? openEnd - 1 : 0);\n    content = node.content.replaceChild(0, first);\n  }\n  var fill = node.type.contentMatch.fillBefore(content, openEnd == 0);\n  return node.copy(fill.append(content))\n}\n\nfunction closeNodeEnd(node, depth) {\n  var content = node.content;\n  if (depth > 1) {\n    var last = closeNodeEnd(node.lastChild, depth - 1);\n    content = node.content.replaceChild(node.childCount - 1, last);\n  }\n  var fill = node.contentMatchAt(node.childCount).fillBefore(prosemirrorModel.Fragment.empty, true);\n  return node.copy(content.append(fill))\n}\n\nfunction closeFragmentEnd(fragment, depth) {\n  return depth ? fragment.replaceChild(fragment.childCount - 1, closeNodeEnd(fragment.lastChild, depth)) : fragment\n}\n\n// :: (number, number, Slice) → this\n// Replace a range of the document with a given slice, using `from`,\n// `to`, and the slice's [`openStart`](#model.Slice.openStart) property\n// as hints, rather than fixed start and end points. This method may\n// grow the replaced area or close open nodes in the slice in order to\n// get a fit that is more in line with WYSIWYG expectations, by\n// dropping fully covered parent nodes of the replaced region when\n// they are marked [non-defining](#model.NodeSpec.defining), or\n// including an open parent node from the slice that _is_ marked as\n// [defining](#model.NodeSpec.defining).\n//\n// This is the method, for example, to handle paste. The similar\n// [`replace`](#transform.Transform.replace) method is a more\n// primitive tool which will _not_ move the start and end of its given\n// range, and is useful in situations where you need more precise\n// control over what happens.\nTransform.prototype.replaceRange = function(from, to, slice) {\n  var this$1 = this;\n\n  if (!slice.size) { return this.deleteRange(from, to) }\n\n  var $from = this.doc.resolve(from), $to = this.doc.resolve(to);\n  if (fitsTrivially($from, $to, slice))\n    { return this.step(new ReplaceStep(from, to, slice)) }\n\n  var targetDepths = coveredDepths($from, this.doc.resolve(to));\n  // Can't replace the whole document, so remove 0 if it's present\n  if (targetDepths[targetDepths.length - 1] == 0) { targetDepths.pop(); }\n  // Negative numbers represent not expansion over the whole node at\n  // that depth, but replacing from $from.before(-D) to $to.pos.\n  var preferredTarget = -($from.depth + 1);\n  targetDepths.unshift(preferredTarget);\n  // This loop picks a preferred target depth, if one of the covering\n  // depths is not outside of a defining node, and adds negative\n  // depths for any depth that has $from at its start and does not\n  // cross a defining node.\n  for (var d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n    var spec = $from.node(d).type.spec;\n    if (spec.defining || spec.isolating) { break }\n    if (targetDepths.indexOf(d) > -1) { preferredTarget = d; }\n    else if ($from.before(d) == pos) { targetDepths.splice(1, 0, -d); }\n  }\n  // Try to fit each possible depth of the slice into each possible\n  // target depth, starting with the preferred depths.\n  var preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n\n  var leftNodes = [], preferredDepth = slice.openStart;\n  for (var content = slice.content, i = 0;; i++) {\n    var node = content.firstChild;\n    leftNodes.push(node);\n    if (i == slice.openStart) { break }\n    content = node.content;\n  }\n  // Back up if the node directly above openStart, or the node above\n  // that separated only by a non-defining textblock node, is defining.\n  if (preferredDepth > 0 && leftNodes[preferredDepth - 1].type.spec.defining &&\n      $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 1].type)\n    { preferredDepth -= 1; }\n  else if (preferredDepth >= 2 && leftNodes[preferredDepth - 1].isTextblock && leftNodes[preferredDepth - 2].type.spec.defining &&\n           $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 2].type)\n    { preferredDepth -= 2; }\n\n  for (var j = slice.openStart; j >= 0; j--) {\n    var openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n    var insert = leftNodes[openDepth];\n    if (!insert) { continue }\n    for (var i$1 = 0; i$1 < targetDepths.length; i$1++) {\n      // Loop over possible expansion levels, starting with the\n      // preferred one\n      var targetDepth = targetDepths[(i$1 + preferredTargetIndex) % targetDepths.length], expand = true;\n      if (targetDepth < 0) { expand = false; targetDepth = -targetDepth; }\n      var parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n      if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n        { return this$1.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to,\n                            new prosemirrorModel.Slice(closeFragment(slice.content, 0, slice.openStart, openDepth),\n                                      openDepth, slice.openEnd)) }\n    }\n  }\n\n  return this.replace(from, to, slice)\n};\n\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n  if (depth < oldOpen) {\n    var first = fragment.firstChild;\n    fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n  }\n  if (depth > newOpen)\n    { fragment = parent.contentMatchAt(0).fillBefore(fragment).append(fragment); }\n  return fragment\n}\n\n// :: (number, number, Node) → this\n// Replace the given range with a node, but use `from` and `to` as\n// hints, rather than precise positions. When from and to are the same\n// and are at the start or end of a parent node in which the given\n// node doesn't fit, this method may _move_ them out towards a parent\n// that does allow the given node to be placed. When the given range\n// completely covers a parent node, this method may completely replace\n// that parent node.\nTransform.prototype.replaceRangeWith = function(from, to, node) {\n  if (!node.isInline && from == to && this.doc.resolve(from).parent.content.size) {\n    var point = insertPoint(this.doc, from, node.type);\n    if (point != null) { from = to = point; }\n  }\n  return this.replaceRange(from, to, new prosemirrorModel.Slice(prosemirrorModel.Fragment.from(node), 0, 0))\n};\n\n// :: (number, number) → this\n// Delete the given range, expanding it to cover fully covered\n// parent nodes until a valid replace is found.\nTransform.prototype.deleteRange = function(from, to) {\n  var this$1 = this;\n\n  var $from = this.doc.resolve(from), $to = this.doc.resolve(to);\n  var covered = coveredDepths($from, $to);\n  for (var i = 0; i < covered.length; i++) {\n    var depth = covered[i], last = i == covered.length - 1;\n    if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n      { return this$1.delete($from.start(depth), $to.end(depth)) }\n    if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n      { return this$1.delete($from.before(depth), $to.after(depth)) }\n  }\n  for (var d = 1; d <= $from.depth; d++) {\n    if (from - $from.start(d) == $from.depth - d && to > $from.end(d))\n      { return this$1.delete($from.before(d), to) }\n  }\n  return this.delete(from, to)\n};\n\n// : (ResolvedPos, ResolvedPos) → [number]\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n  var result = [], minDepth = Math.min($from.depth, $to.depth);\n  for (var d = minDepth; d >= 0; d--) {\n    var start = $from.start(d);\n    if (start < $from.pos - ($from.depth - d) ||\n        $to.end(d) > $to.pos + ($to.depth - d) ||\n        $from.node(d).type.spec.isolating ||\n        $to.node(d).type.spec.isolating) { break }\n    if (start == $to.start(d)) { result.push(d); }\n  }\n  return result\n}\n\nexports.Transform = Transform;\nexports.TransformError = TransformError;\nexports.Step = Step;\nexports.StepResult = StepResult;\nexports.joinPoint = joinPoint;\nexports.canJoin = canJoin;\nexports.canSplit = canSplit;\nexports.insertPoint = insertPoint;\nexports.liftTarget = liftTarget;\nexports.findWrapping = findWrapping;\nexports.StepMap = StepMap;\nexports.MapResult = MapResult;\nexports.Mapping = Mapping;\nexports.AddMarkStep = AddMarkStep;\nexports.RemoveMarkStep = RemoveMarkStep;\nexports.ReplaceStep = ReplaceStep;\nexports.ReplaceAroundStep = ReplaceAroundStep;\nexports.replaceStep = replaceStep;\n//# sourceMappingURL=index.js.map\n","map":{"mappings":[{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1402,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1403,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1404,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1405,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1406,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1407,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1408,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1409,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1410,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1411,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1412,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1413,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1414,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1415,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1416,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1417,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1418,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1419,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1420,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1421,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1422,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1423,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1424,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1425,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1426,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1427,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1428,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1429,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1430,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1431,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1432,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1433,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1434,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1435,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1436,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1437,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1438,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1439,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1440,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1441,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1442,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1443,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1444,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1445,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1446,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1447,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1448,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1449,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1450,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1451,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1452,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1453,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1454,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1455,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1456,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1457,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1458,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1459,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1460,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1461,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1462,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1463,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1464,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1465,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1466,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1467,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1468,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1469,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1470,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1471,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1472,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1473,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1474,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1475,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1476,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1477,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1478,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1479,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1480,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1481,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1482,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1483,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1484,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1485,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1486,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1487,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1488,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1489,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1490,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1491,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1492,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1493,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1494,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1495,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1496,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1497,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1498,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1499,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1500,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1501,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1502,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1503,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1504,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1505,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1506,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1507,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1508,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1509,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1510,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1511,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1512,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1513,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1514,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1515,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1516,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1517,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1518,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1519,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1520,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1521,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1522,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1523,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1524,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1525,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1526,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1527,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1528,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1529,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1530,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1531,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1532,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1533,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1534,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1535,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1536,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1537,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1538,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1539,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1540,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1541,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1542,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1543,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1544,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1545,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1546,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1547,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1548,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1549,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1550,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1551,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1552,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1553,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1554,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1555,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1556,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1557,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1558,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1559,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1560,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1561,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1562,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1563,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1564,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1565,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1566,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1567,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1568,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1569,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1570,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1571,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1572,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1573,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1574,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1575,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1576,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1577,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1578,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1579,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1580,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1581,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1582,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1583,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1584,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1585,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1586,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1587,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1588,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1589,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1590,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1591,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1592,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1593,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1594,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1595,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1596,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1597,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1598,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1599,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1600,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1601,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1602,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1603,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1604,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1605,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1606,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1607,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1608,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1609,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1610,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1611,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1612,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1613,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1614,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1615,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1616,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1617,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1618,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1619,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1620,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1621,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1622,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1623,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1624,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1625,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1626,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1627,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1628,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1629,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1630,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1631,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1632,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1633,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1634,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1635,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1636,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1637,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1638,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1639,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1640,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1641,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1642,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1643,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1644,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1645,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1646,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1647,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1648,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1649,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1650,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1651,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1652,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1653,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1654,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1655,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1656,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1657,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1658,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1659,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1660,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1661,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1662,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1663,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1664,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1665,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1666,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1667,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1668,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1669,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1670,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1671,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1672,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1673,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1674,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1675,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1676,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1677,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1678,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1679,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1680,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1681,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1682,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1683,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1684,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1685,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1686,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1687,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1688,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1689,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1690,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1691,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1692,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1693,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1694,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1695,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1696,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1697,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1698,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1699,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1700,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js","original":{"line":1701,"column":0},"generated":{"line":1701,"column":0}}],"sources":{"node_modules/prosemirror-commands/node_modules/prosemirror-state/node_modules/prosemirror-transform/dist/index.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar prosemirrorModel = require('prosemirror-model');\n\n// Mappable:: interface\n// There are several things that positions can be mapped through.\n// Such objects conform to this interface.\n//\n//   map:: (pos: number, assoc: ?number) → number\n//   Map a position through this object. When given, `assoc` (should\n//   be -1 or 1, defaults to 1) determines with which side the\n//   position is associated, which determines in which direction to\n//   move when a chunk of content is inserted at the mapped position.\n//\n//   mapResult:: (pos: number, assoc: ?number) → MapResult\n//   Map a position, and return an object containing additional\n//   information about the mapping. The result's `deleted` field tells\n//   you whether the position was deleted (completely enclosed in a\n//   replaced range) during the mapping. When content on only one side\n//   is deleted, the position itself is only considered deleted when\n//   `assoc` points in the direction of the deleted content.\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\n\nvar lower16 = 0xffff;\nvar factor16 = Math.pow(2, 16);\n\nfunction makeRecover(index, offset) { return index + offset * factor16 }\nfunction recoverIndex(value) { return value & lower16 }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16 }\n\n// ::- An object representing a mapped position with extra\n// information.\nvar MapResult = function MapResult(pos, deleted, recover) {\n  if ( deleted === void 0 ) deleted = false;\n  if ( recover === void 0 ) recover = null;\n\n  // :: number The mapped version of the position.\n  this.pos = pos;\n  // :: bool Tells you whether the position was deleted, that is,\n  // whether the step removed its surroundings from the document.\n  this.deleted = deleted;\n  this.recover = recover;\n};\n\n// :: class extends Mappable\n// A map describing the deletions and insertions made by a step, which\n// can be used to find the correspondence between positions in the\n// pre-step version of a document and the same position in the\n// post-step version.\nvar StepMap = function StepMap(ranges, inverted) {\n  if ( inverted === void 0 ) inverted = false;\n\n  this.ranges = ranges;\n  this.inverted = inverted;\n};\n\nStepMap.prototype.recover = function recover (value) {\n    var this$1 = this;\n\n  var diff = 0, index = recoverIndex(value);\n  if (!this.inverted) { for (var i = 0; i < index; i++)\n    { diff += this$1.ranges[i * 3 + 2] - this$1.ranges[i * 3 + 1]; } }\n  return this.ranges[index * 3] + diff + recoverOffset(value)\n};\n\n// : (number, ?number) → MapResult\nStepMap.prototype.mapResult = function mapResult (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, false) };\n\n// : (number, ?number) → number\nStepMap.prototype.map = function map (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, true) };\n\nStepMap.prototype._map = function _map (pos, assoc, simple) {\n    var this$1 = this;\n\n  var diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0; i < this.ranges.length; i += 3) {\n    var start = this$1.ranges[i] - (this$1.inverted ? diff : 0);\n    if (start > pos) { break }\n    var oldSize = this$1.ranges[i + oldIndex], newSize = this$1.ranges[i + newIndex], end = start + oldSize;\n    if (pos <= end) {\n      var side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n      var result = start + diff + (side < 0 ? 0 : newSize);\n      if (simple) { return result }\n      var recover = makeRecover(i / 3, pos - start);\n      return new MapResult(result, assoc < 0 ? pos != start : pos != end, recover)\n    }\n    diff += newSize - oldSize;\n  }\n  return simple ? pos + diff : new MapResult(pos + diff)\n};\n\nStepMap.prototype.touches = function touches (pos, recover) {\n    var this$1 = this;\n\n  var diff = 0, index = recoverIndex(recover);\n  var oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0; i < this.ranges.length; i += 3) {\n    var start = this$1.ranges[i] - (this$1.inverted ? diff : 0);\n    if (start > pos) { break }\n    var oldSize = this$1.ranges[i + oldIndex], end = start + oldSize;\n    if (pos <= end && i == index * 3) { return true }\n    diff += this$1.ranges[i + newIndex] - oldSize;\n  }\n  return false\n};\n\n// :: ((oldStart: number, oldEnd: number, newStart: number, newEnd: number))\n// Calls the given function on each of the changed ranges included in\n// this map.\nStepMap.prototype.forEach = function forEach (f) {\n    var this$1 = this;\n\n  var oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0, diff = 0; i < this.ranges.length; i += 3) {\n    var start = this$1.ranges[i], oldStart = start - (this$1.inverted ? diff : 0), newStart = start + (this$1.inverted ? 0 : diff);\n    var oldSize = this$1.ranges[i + oldIndex], newSize = this$1.ranges[i + newIndex];\n    f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n    diff += newSize - oldSize;\n  }\n};\n\n// :: () → StepMap\n// Create an inverted version of this map. The result can be used to\n// map positions in the post-step document to the pre-step document.\nStepMap.prototype.invert = function invert () {\n  return new StepMap(this.ranges, !this.inverted)\n};\n\nStepMap.prototype.toString = function toString () {\n  return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges)\n};\n\n// :: (n: number) → StepMap\n// Create a map that moves all positions by offset `n` (which may be\n// negative). This can be useful when applying steps meant for a\n// sub-document to a larger document, or vice-versa.\nStepMap.offset = function offset (n) {\n  return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n])\n};\n\nStepMap.empty = new StepMap([]);\n\n// :: class extends Mappable\n// A mapping represents a pipeline of zero or more [step\n// maps](#transform.StepMap). It has special provisions for losslessly\n// handling mapping positions through a series of steps in which some\n// steps are inverted versions of earlier steps. (This comes up when\n// ‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\n// collaboration or history management.)\nvar Mapping = function Mapping(maps, mirror, from, to) {\n  // :: [StepMap]\n  // The step maps in this mapping.\n  this.maps = maps || [];\n  // :: number\n  // The starting position in the `maps` array, used when `map` or\n  // `mapResult` is called.\n  this.from = from || 0;\n  // :: number\n  // The end position in the `maps` array.\n  this.to = to == null ? this.maps.length : to;\n  this.mirror = mirror;\n};\n\n// :: (?number, ?number) → Mapping\n// Create a mapping that maps only through a part of this one.\nMapping.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.maps.length;\n\n  return new Mapping(this.maps, this.mirror, from, to)\n};\n\nMapping.prototype.copy = function copy () {\n  return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)\n};\n\nMapping.prototype.getMirror = function getMirror (n) {\n    var this$1 = this;\n\n  if (this.mirror) { for (var i = 0; i < this.mirror.length; i++)\n    { if (this$1.mirror[i] == n) { return this$1.mirror[i + (i % 2 ? -1 : 1)] } } }\n};\n\nMapping.prototype.setMirror = function setMirror (n, m) {\n  if (!this.mirror) { this.mirror = []; }\n  this.mirror.push(n, m);\n};\n\n// :: (StepMap, ?number)\n// Add a step map to the end of this mapping. If `mirrors` is\n// given, it should be the index of the step map that is the mirror\n// image of this one.\nMapping.prototype.appendMap = function appendMap (map, mirrors) {\n  this.to = this.maps.push(map);\n  if (mirrors != null) { this.setMirror(this.maps.length - 1, mirrors); }\n};\n\n// :: (Mapping)\n// Add all the step maps in a given mapping to this one (preserving\n// mirroring information).\nMapping.prototype.appendMapping = function appendMapping (mapping) {\n    var this$1 = this;\n\n  for (var i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n    var mirr = mapping.getMirror(i);\n    this$1.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : null);\n  }\n};\n\n// :: (Mapping)\n// Append the inverse of the given mapping to this one.\nMapping.prototype.appendMappingInverted = function appendMappingInverted (mapping) {\n    var this$1 = this;\n\n  for (var i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n    var mirr = mapping.getMirror(i);\n    this$1.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : null);\n  }\n};\n\n// () → Mapping\n// Create an inverted version of this mapping.\nMapping.prototype.invert = function invert () {\n  var inverse = new Mapping;\n  inverse.appendMappingInverted(this);\n  return inverse\n};\n\n// : (number, ?number) → number\n// Map a position through this mapping.\nMapping.prototype.map = function map (pos, assoc) {\n    var this$1 = this;\n    if ( assoc === void 0 ) assoc = 1;\n\n  if (this.mirror) { return this._map(pos, assoc, true) }\n  for (var i = this.from; i < this.to; i++)\n    { pos = this$1.maps[i].map(pos, assoc); }\n  return pos\n};\n\n// : (number, ?number) → MapResult\n// Map a position through this mapping, returning a mapping\n// result.\nMapping.prototype.mapResult = function mapResult (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, false) };\n\nMapping.prototype._map = function _map (pos, assoc, simple) {\n    var this$1 = this;\n\n  var deleted = false, recoverables = null;\n\n  for (var i = this.from; i < this.to; i++) {\n    var map = this$1.maps[i], rec = recoverables && recoverables[i];\n    if (rec != null && map.touches(pos, rec)) {\n      pos = map.recover(rec);\n      continue\n    }\n\n    var result = map.mapResult(pos, assoc);\n    if (result.recover != null) {\n      var corr = this$1.getMirror(i);\n      if (corr != null && corr > i && corr < this$1.to) {\n        if (result.deleted) {\n          i = corr;\n          pos = this$1.maps[corr].recover(result.recover);\n          continue\n        } else {\n          (recoverables || (recoverables = Object.create(null)))[corr] = result.recover;\n        }\n      }\n    }\n\n    if (result.deleted) { deleted = true; }\n    pos = result.pos;\n  }\n\n  return simple ? pos : new MapResult(pos, deleted)\n};\n\nfunction TransformError(message) {\n  var err = Error.call(this, message);\n  err.__proto__ = TransformError.prototype;\n  return err\n}\n\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n\n// ::- Abstraction to build up and track an array of\n// [steps](#transform.Step) representing a document transformation.\n//\n// Most transforming methods return the `Transform` object itself, so\n// that they can be chained.\nvar Transform = function Transform(doc) {\n  // :: Node\n  // The current document (the result of applying the steps in the\n  // transform).\n  this.doc = doc;\n  // :: [Step]\n  // The steps in this transform.\n  this.steps = [];\n  // :: [Node]\n  // The documents before each of the steps.\n  this.docs = [];\n  // :: Mapping\n  // A mapping with the maps for each of the steps in this transform.\n  this.mapping = new Mapping;\n};\n\nvar prototypeAccessors = { before: {},docChanged: {} };\n\n// :: Node The starting document.\nprototypeAccessors.before.get = function () { return this.docs.length ? this.docs[0] : this.doc };\n\n// :: (step: Step) → this\n// Apply a new step in this transform, saving the result. Throws an\n// error when the step fails.\nTransform.prototype.step = function step (object) {\n  var result = this.maybeStep(object);\n  if (result.failed) { throw new TransformError(result.failed) }\n  return this\n};\n\n// :: (Step) → StepResult\n// Try to apply a step in this transformation, ignoring it if it\n// fails. Returns the step result.\nTransform.prototype.maybeStep = function maybeStep (step) {\n  var result = step.apply(this.doc);\n  if (!result.failed) { this.addStep(step, result.doc); }\n  return result\n};\n\n// :: bool\n// True when the document has been changed (when there are any\n// steps).\nprototypeAccessors.docChanged.get = function () {\n  return this.steps.length > 0\n};\n\nTransform.prototype.addStep = function addStep (step, doc) {\n  this.docs.push(this.doc);\n  this.steps.push(step);\n  this.mapping.appendMap(step.getMap());\n  this.doc = doc;\n};\n\nObject.defineProperties( Transform.prototype, prototypeAccessors );\n\nfunction mustOverride() { throw new Error(\"Override me\") }\n\nvar stepsByID = Object.create(null);\n\n// ::- A step object represents an atomic change. It generally applies\n// only to the document it was created for, since the positions\n// stored in it will only make sense for that document.\n//\n// New steps are defined by creating classes that extend `Step`,\n// overriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\n// methods, and registering your class with a unique\n// JSON-serialization identifier using\n// [`Step.jsonID`](#transform.Step^jsonID).\nvar Step = function Step () {};\n\nStep.prototype.apply = function apply (_doc) { return mustOverride() };\n\n// :: () → StepMap\n// Get the step map that represents the changes made by this step,\n// and which can be used to transform between positions in the old\n// and the new document.\nStep.prototype.getMap = function getMap () { return StepMap.empty };\n\n// :: (doc: Node) → Step\n// Create an inverted version of this step. Needs the document as it\n// was before the step as argument.\nStep.prototype.invert = function invert (_doc) { return mustOverride() };\n\n// :: (mapping: Mappable) → ?Step\n// Map this step through a mappable thing, returning either a\n// version of that step with its positions adjusted, or `null` if\n// the step was entirely deleted by the mapping.\nStep.prototype.map = function map (_mapping) { return mustOverride() };\n\n// :: (other: Step) → ?Step\n// Try to merge this step with another one, to be applied directly\n// after it. Returns the merged step when possible, null if the\n// steps can't be merged.\nStep.prototype.merge = function merge (_other) { return null };\n\n// :: () → Object\n// Create a JSON-serializeable representation of this step. When\n// defining this for a custom subclass, make sure the result object\n// includes the step type's [JSON id](#transform.Step^jsonID) under\n// the `stepType` property.\nStep.prototype.toJSON = function toJSON () { return mustOverride() };\n\n// :: (Schema, Object) → Step\n// Deserialize a step from its JSON representation. Will call\n// through to the step class' own implementation of this method.\nStep.fromJSON = function fromJSON (schema, json) {\n  if (!json || !json.stepType) { throw new RangeError(\"Invalid input for Step.fromJSON\") }\n  var type = stepsByID[json.stepType];\n  if (!type) { throw new RangeError((\"No step type \" + (json.stepType) + \" defined\")) }\n  return type.fromJSON(schema, json)\n};\n\n// :: (string, constructor<Step>)\n// To be able to serialize steps to JSON, each step needs a string\n// ID to attach to its JSON representation. Use this method to\n// register an ID for your step classes. Try to pick something\n// that's unlikely to clash with steps from other modules.\nStep.jsonID = function jsonID (id, stepClass) {\n  if (id in stepsByID) { throw new RangeError(\"Duplicate use of step JSON ID \" + id) }\n  stepsByID[id] = stepClass;\n  stepClass.prototype.jsonID = id;\n  return stepClass\n};\n\n// ::- The result of [applying](#transform.Step.apply) a step. Contains either a\n// new document or a failure value.\nvar StepResult = function StepResult(doc, failed) {\n  // :: ?Node The transformed document.\n  this.doc = doc;\n  // :: ?string Text providing information about a failed step.\n  this.failed = failed;\n};\n\n// :: (Node) → StepResult\n// Create a successful step result.\nStepResult.ok = function ok (doc) { return new StepResult(doc, null) };\n\n// :: (string) → StepResult\n// Create a failed step result.\nStepResult.fail = function fail (message) { return new StepResult(null, message) };\n\n// :: (Node, number, number, Slice) → StepResult\n// Call [`Node.replace`](#model.Node.replace) with the given\n// arguments. Create a successful result if it succeeds, and a\n// failed one if it throws a `ReplaceError`.\nStepResult.fromReplace = function fromReplace (doc, from, to, slice) {\n  try {\n    return StepResult.ok(doc.replace(from, to, slice))\n  } catch (e) {\n    if (e instanceof prosemirrorModel.ReplaceError) { return StepResult.fail(e.message) }\n    throw e\n  }\n};\n\n// ::- Replace a part of the document with a slice of new content.\nvar ReplaceStep = (function (Step$$1) {\n  function ReplaceStep(from, to, slice, structure) {\n    Step$$1.call(this);\n    this.from = from;\n    this.to = to;\n    this.slice = slice;\n    this.structure = !!structure;\n  }\n\n  if ( Step$$1 ) ReplaceStep.__proto__ = Step$$1;\n  ReplaceStep.prototype = Object.create( Step$$1 && Step$$1.prototype );\n  ReplaceStep.prototype.constructor = ReplaceStep;\n\n  ReplaceStep.prototype.apply = function apply (doc) {\n    if (this.structure && contentBetween(doc, this.from, this.to))\n      { return StepResult.fail(\"Structure replace would overwrite content\") }\n    return StepResult.fromReplace(doc, this.from, this.to, this.slice)\n  };\n\n  ReplaceStep.prototype.getMap = function getMap () {\n    return new StepMap([this.from, this.to - this.from, this.slice.size])\n  };\n\n  ReplaceStep.prototype.invert = function invert (doc) {\n    return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to))\n  };\n\n  ReplaceStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted) { return null }\n    return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice)\n  };\n\n  ReplaceStep.prototype.merge = function merge (other) {\n    if (!(other instanceof ReplaceStep) || other.structure != this.structure) { return null }\n\n    if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n      var slice = this.slice.size + other.slice.size == 0 ? prosemirrorModel.Slice.empty\n          : new prosemirrorModel.Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n      return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure)\n    } else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n      var slice$1 = this.slice.size + other.slice.size == 0 ? prosemirrorModel.Slice.empty\n          : new prosemirrorModel.Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n      return new ReplaceStep(other.from, this.to, slice$1, this.structure)\n    } else {\n      return null\n    }\n  };\n\n  ReplaceStep.prototype.toJSON = function toJSON () {\n    var json = {stepType: \"replace\", from: this.from, to: this.to};\n    if (this.slice.size) { json.slice = this.slice.toJSON(); }\n    if (this.structure) { json.structure = true; }\n    return json\n  };\n\n  ReplaceStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\") }\n    return new ReplaceStep(json.from, json.to, prosemirrorModel.Slice.fromJSON(schema, json.slice), !!json.structure)\n  };\n\n  return ReplaceStep;\n}(Step));\n\nStep.jsonID(\"replace\", ReplaceStep);\n\n// ::- Replace a part of the document with a slice of content, but\n// preserve a range of the replaced content by moving it into the\n// slice.\nvar ReplaceAroundStep = (function (Step$$1) {\n  function ReplaceAroundStep(from, to, gapFrom, gapTo, slice, insert, structure) {\n    Step$$1.call(this);\n    this.from = from;\n    this.to = to;\n    this.gapFrom = gapFrom;\n    this.gapTo = gapTo;\n    this.slice = slice;\n    this.insert = insert;\n    this.structure = !!structure;\n  }\n\n  if ( Step$$1 ) ReplaceAroundStep.__proto__ = Step$$1;\n  ReplaceAroundStep.prototype = Object.create( Step$$1 && Step$$1.prototype );\n  ReplaceAroundStep.prototype.constructor = ReplaceAroundStep;\n\n  ReplaceAroundStep.prototype.apply = function apply (doc) {\n    if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n                           contentBetween(doc, this.gapTo, this.to)))\n      { return StepResult.fail(\"Structure gap-replace would overwrite content\") }\n\n    var gap = doc.slice(this.gapFrom, this.gapTo);\n    if (gap.openStart || gap.openEnd)\n      { return StepResult.fail(\"Gap is not a flat range\") }\n    var inserted = this.slice.insertAt(this.insert, gap.content);\n    if (!inserted) { return StepResult.fail(\"Content does not fit in gap\") }\n    return StepResult.fromReplace(doc, this.from, this.to, inserted)\n  };\n\n  ReplaceAroundStep.prototype.getMap = function getMap () {\n    return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n                        this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])\n  };\n\n  ReplaceAroundStep.prototype.invert = function invert (doc) {\n    var gap = this.gapTo - this.gapFrom;\n    return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap,\n                                 this.from + this.insert, this.from + this.insert + gap,\n                                 doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from),\n                                 this.gapFrom - this.from, this.structure)\n  };\n\n  ReplaceAroundStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    var gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1);\n    if ((from.deleted && to.deleted) || gapFrom < from.pos || gapTo > to.pos) { return null }\n    return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure)\n  };\n\n  ReplaceAroundStep.prototype.toJSON = function toJSON () {\n    var json = {stepType: \"replaceAround\", from: this.from, to: this.to,\n                gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert};\n    if (this.slice.size) { json.slice = this.slice.toJSON(); }\n    if (this.structure) { json.structure = true; }\n    return json\n  };\n\n  ReplaceAroundStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n      { throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\") }\n    return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo,\n                                 prosemirrorModel.Slice.fromJSON(schema, json.slice), json.insert, !!json.structure)\n  };\n\n  return ReplaceAroundStep;\n}(Step));\n\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\n\nfunction contentBetween(doc, from, to) {\n  var $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n  while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n    depth--;\n    dist--;\n  }\n  if (dist > 0) {\n    var next = $from.node(depth).maybeChild($from.indexAfter(depth));\n    while (dist > 0) {\n      if (!next || next.isLeaf) { return true }\n      next = next.firstChild;\n      dist--;\n    }\n  }\n  return false\n}\n\nfunction canCut(node, start, end) {\n  return (start == 0 || node.canReplace(start, node.childCount)) &&\n    (end == node.childCount || node.canReplace(0, end))\n}\n\n// :: (NodeRange) → ?number\n// Try to find a target depth to which the content in the given range\n// can be lifted. Will not go across\n// [isolating](#model.NodeSpec.isolating) parent nodes.\nfunction liftTarget(range) {\n  var parent = range.parent;\n  var content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n  for (var depth = range.depth;; --depth) {\n    var node = range.$from.node(depth);\n    var index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n    if (depth < range.depth && node.canReplace(index, endIndex, content))\n      { return depth }\n    if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex)) { break }\n  }\n}\n\n// :: (NodeRange, number) → this\n// Split the content in the given range off from its parent, if there\n// is sibling content before or after it, and move it up the tree to\n// the depth specified by `target`. You'll probably want to use\n// [`liftTarget`](#transform.liftTarget) to compute `target`, to make\n// sure the lift is valid.\nTransform.prototype.lift = function(range, target) {\n  var $from = range.$from;\n  var $to = range.$to;\n  var depth = range.depth;\n\n  var gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n  var start = gapStart, end = gapEnd;\n\n  var before = prosemirrorModel.Fragment.empty, openStart = 0;\n  for (var d = depth, splitting = false; d > target; d--)\n    { if (splitting || $from.index(d) > 0) {\n      splitting = true;\n      before = prosemirrorModel.Fragment.from($from.node(d).copy(before));\n      openStart++;\n    } else {\n      start--;\n    } }\n  var after = prosemirrorModel.Fragment.empty, openEnd = 0;\n  for (var d$1 = depth, splitting$1 = false; d$1 > target; d$1--)\n    { if (splitting$1 || $to.after(d$1 + 1) < $to.end(d$1)) {\n      splitting$1 = true;\n      after = prosemirrorModel.Fragment.from($to.node(d$1).copy(after));\n      openEnd++;\n    } else {\n      end++;\n    } }\n\n  return this.step(new ReplaceAroundStep(start, end, gapStart, gapEnd,\n                                         new prosemirrorModel.Slice(before.append(after), openStart, openEnd),\n                                         before.size - openStart, true))\n};\n\n// :: (NodeRange, NodeType, ?Object, ?NodeRange) → ?[{type: NodeType, attrs: ?Object}]\n// Try to find a valid way to wrap the content in the given range in a\n// node of the given type. May introduce extra nodes around and inside\n// the wrapper node, if necessary. Returns null if no valid wrapping\n// could be found. When `innerRange` is given, that range's content is\n// used as the content to fit into the wrapping, instead of the\n// content of `range`.\nfunction findWrapping(range, nodeType, attrs, innerRange) {\n  if ( innerRange === void 0 ) innerRange = range;\n\n  var around = findWrappingOutside(range, nodeType);\n  var inner = around && findWrappingInside(innerRange, nodeType);\n  if (!inner) { return null }\n  return around.map(withAttrs).concat({type: nodeType, attrs: attrs}).concat(inner.map(withAttrs))\n}\n\nfunction withAttrs(type) { return {type: type, attrs: null} }\n\nfunction findWrappingOutside(range, type) {\n  var parent = range.parent;\n  var startIndex = range.startIndex;\n  var endIndex = range.endIndex;\n  var around = parent.contentMatchAt(startIndex).findWrapping(type);\n  if (!around) { return null }\n  var outer = around.length ? around[0] : type;\n  return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null\n}\n\nfunction findWrappingInside(range, type) {\n  var parent = range.parent;\n  var startIndex = range.startIndex;\n  var endIndex = range.endIndex;\n  var inner = parent.child(startIndex);\n  var inside = type.contentMatch.findWrapping(inner.type);\n  if (!inside) { return null }\n  var lastType = inside.length ? inside[inside.length - 1] : type;\n  var innerMatch = lastType.contentMatch;\n  for (var i = startIndex; innerMatch && i < endIndex; i++)\n    { innerMatch = innerMatch.matchType(parent.child(i).type); }\n  if (!innerMatch || !innerMatch.validEnd) { return null }\n  return inside\n}\n\n// :: (NodeRange, [{type: NodeType, attrs: ?Object}]) → this\n// Wrap the given [range](#model.NodeRange) in the given set of wrappers.\n// The wrappers are assumed to be valid in this position, and should\n// probably be computed with [`findWrapping`](#transform.findWrapping).\nTransform.prototype.wrap = function(range, wrappers) {\n  var content = prosemirrorModel.Fragment.empty;\n  for (var i = wrappers.length - 1; i >= 0; i--)\n    { content = prosemirrorModel.Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content)); }\n\n  var start = range.start, end = range.end;\n  return this.step(new ReplaceAroundStep(start, end, start, end, new prosemirrorModel.Slice(content, 0, 0), wrappers.length, true))\n};\n\n// :: (number, ?number, NodeType, ?Object) → this\n// Set the type of all textblocks (partly) between `from` and `to` to\n// the given node type with the given attributes.\nTransform.prototype.setBlockType = function(from, to, type, attrs) {\n  var this$1 = this;\n  if ( to === void 0 ) to = from;\n\n  if (!type.isTextblock) { throw new RangeError(\"Type given to setBlockType should be a textblock\") }\n  var mapFrom = this.steps.length;\n  this.doc.nodesBetween(from, to, function (node, pos) {\n    if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(this$1.doc, this$1.mapping.slice(mapFrom).map(pos), type)) {\n      // Ensure all markup that isn't allowed in the new node type is cleared\n      this$1.clearIncompatible(this$1.mapping.slice(mapFrom).map(pos, 1), type);\n      var mapping = this$1.mapping.slice(mapFrom);\n      var startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n      this$1.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1,\n                                      new prosemirrorModel.Slice(prosemirrorModel.Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n      return false\n    }\n  });\n  return this\n};\n\nfunction canChangeType(doc, pos, type) {\n  var $pos = doc.resolve(pos), index = $pos.index();\n  return $pos.parent.canReplaceWith(index, index + 1, type)\n}\n\n// :: (number, ?NodeType, ?Object, ?[Mark]) → this\n// Change the type, attributes, and/or marks of the node at `pos`.\n// When `type` isn't given, the existing node type is preserved,\nTransform.prototype.setNodeMarkup = function(pos, type, attrs, marks) {\n  var node = this.doc.nodeAt(pos);\n  if (!node) { throw new RangeError(\"No node at given position\") }\n  if (!type) { type = node.type; }\n  var newNode = type.create(attrs, null, marks || node.marks);\n  if (node.isLeaf)\n    { return this.replaceWith(pos, pos + node.nodeSize, newNode) }\n\n  if (!type.validContent(node.content))\n    { throw new RangeError(\"Invalid content for node type \" + type.name) }\n\n  return this.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1,\n                                         new prosemirrorModel.Slice(prosemirrorModel.Fragment.from(newNode), 0, 0), 1, true))\n};\n\n// :: (Node, number, number, ?[?{type: NodeType, attrs: ?Object}]) → bool\n// Check whether splitting at the given position is allowed.\nfunction canSplit(doc, pos, depth, typesAfter) {\n  if ( depth === void 0 ) depth = 1;\n\n  var $pos = doc.resolve(pos), base = $pos.depth - depth;\n  var innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n  if (base < 0 || $pos.parent.type.spec.isolating ||\n      !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n      !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n    { return false }\n  for (var d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    var node = $pos.node(d), index$1 = $pos.index(d);\n    if (node.type.spec.isolating) { return false }\n    var rest = node.content.cutByIndex(index$1, node.childCount);\n    var after = (typesAfter && typesAfter[i]) || node;\n    if (after != node) { rest = rest.replaceChild(0, after.type.create(after.attrs)); }\n    if (!node.canReplace(index$1 + 1, node.childCount) || !after.type.validContent(rest))\n      { return false }\n  }\n  var index = $pos.indexAfter(base);\n  var baseType = typesAfter && typesAfter[0];\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type)\n}\n\n// :: (number, ?number, ?[?{type: NodeType, attrs: ?Object}]) → this\n// Split the node at the given position, and optionally, if `depth` is\n// greater than one, any number of nodes above that. By default, the\n// parts split off will inherit the node type of the original node.\n// This can be changed by passing an array of types and attributes to\n// use after the split.\nTransform.prototype.split = function(pos, depth, typesAfter) {\n  if ( depth === void 0 ) depth = 1;\n\n  var $pos = this.doc.resolve(pos), before = prosemirrorModel.Fragment.empty, after = prosemirrorModel.Fragment.empty;\n  for (var d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n    before = prosemirrorModel.Fragment.from($pos.node(d).copy(before));\n    var typeAfter = typesAfter && typesAfter[i];\n    after = prosemirrorModel.Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n  }\n  return this.step(new ReplaceStep(pos, pos, new prosemirrorModel.Slice(before.append(after), depth, depth, true)))\n};\n\n// :: (Node, number) → bool\n// Test whether the blocks before and after a given position can be\n// joined.\nfunction canJoin(doc, pos) {\n  var $pos = doc.resolve(pos), index = $pos.index();\n  return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n    $pos.parent.canReplace(index, index + 1)\n}\n\nfunction joinable(a, b) {\n  return a && b && !a.isLeaf && a.canAppend(b)\n}\n\n// :: (Node, number, ?number) → ?number\n// Find an ancestor of the given position that can be joined to the\n// block before (or after if `dir` is positive). Returns the joinable\n// point, if any.\nfunction joinPoint(doc, pos, dir) {\n  if ( dir === void 0 ) dir = -1;\n\n  var $pos = doc.resolve(pos);\n  for (var d = $pos.depth;; d--) {\n    var before = (void 0), after = (void 0);\n    if (d == $pos.depth) {\n      before = $pos.nodeBefore;\n      after = $pos.nodeAfter;\n    } else if (dir > 0) {\n      before = $pos.node(d + 1);\n      after = $pos.node(d).maybeChild($pos.index(d) + 1);\n    } else {\n      before = $pos.node(d).maybeChild($pos.index(d) - 1);\n      after = $pos.node(d + 1);\n    }\n    if (before && !before.isTextblock && joinable(before, after)) { return pos }\n    if (d == 0) { break }\n    pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n  }\n}\n\n// :: (number, ?number) → this\n// Join the blocks around the given position. If depth is 2, their\n// last and first siblings are also joined, and so on.\nTransform.prototype.join = function(pos, depth) {\n  if ( depth === void 0 ) depth = 1;\n\n  var step = new ReplaceStep(pos - depth, pos + depth, prosemirrorModel.Slice.empty, true);\n  return this.step(step)\n};\n\n// :: (Node, number, NodeType) → ?number\n// Try to find a point where a node of the given type can be inserted\n// near `pos`, by searching up the node hierarchy when `pos` itself\n// isn't a valid place but is at the start or end of a node. Return\n// null if no position was found.\nfunction insertPoint(doc, pos, nodeType) {\n  var $pos = doc.resolve(pos);\n  if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType)) { return pos }\n\n  if ($pos.parentOffset == 0)\n    { for (var d = $pos.depth - 1; d >= 0; d--) {\n      var index = $pos.index(d);\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) { return $pos.before(d + 1) }\n      if (index > 0) { return null }\n    } }\n  if ($pos.parentOffset == $pos.parent.content.size)\n    { for (var d$1 = $pos.depth - 1; d$1 >= 0; d$1--) {\n      var index$1 = $pos.indexAfter(d$1);\n      if ($pos.node(d$1).canReplaceWith(index$1, index$1, nodeType)) { return $pos.after(d$1 + 1) }\n      if (index$1 < $pos.node(d$1).childCount) { return null }\n    } }\n}\n\nfunction mapFragment(fragment, f, parent) {\n  var mapped = [];\n  for (var i = 0; i < fragment.childCount; i++) {\n    var child = fragment.child(i);\n    if (child.content.size) { child = child.copy(mapFragment(child.content, f, child)); }\n    if (child.isInline) { child = f(child, parent, i); }\n    mapped.push(child);\n  }\n  return prosemirrorModel.Fragment.fromArray(mapped)\n}\n\n// ::- Add a mark to all inline content between two positions.\nvar AddMarkStep = (function (Step$$1) {\n  function AddMarkStep(from, to, mark) {\n    Step$$1.call(this);\n    this.from = from;\n    this.to = to;\n    this.mark = mark;\n  }\n\n  if ( Step$$1 ) AddMarkStep.__proto__ = Step$$1;\n  AddMarkStep.prototype = Object.create( Step$$1 && Step$$1.prototype );\n  AddMarkStep.prototype.constructor = AddMarkStep;\n\n  AddMarkStep.prototype.apply = function apply (doc) {\n    var this$1 = this;\n\n    var oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n    var parent = $from.node($from.sharedDepth(this.to));\n    var slice = new prosemirrorModel.Slice(mapFragment(oldSlice.content, function (node, parent) {\n      if (!parent.type.allowsMarkType(this$1.mark.type)) { return node }\n      return node.mark(this$1.mark.addToSet(node.marks))\n    }, parent), oldSlice.openStart, oldSlice.openEnd);\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  };\n\n  AddMarkStep.prototype.invert = function invert () {\n    return new RemoveMarkStep(this.from, this.to, this.mark)\n  };\n\n  AddMarkStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted || from.pos >= to.pos) { return null }\n    return new AddMarkStep(from.pos, to.pos, this.mark)\n  };\n\n  AddMarkStep.prototype.merge = function merge (other) {\n    if (other instanceof AddMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      { return new AddMarkStep(Math.min(this.from, other.from),\n                             Math.max(this.to, other.to), this.mark) }\n  };\n\n  AddMarkStep.prototype.toJSON = function toJSON () {\n    return {stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  };\n\n  AddMarkStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\") }\n    return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  };\n\n  return AddMarkStep;\n}(Step));\n\nStep.jsonID(\"addMark\", AddMarkStep);\n\n// ::- Remove a mark from all inline content between two positions.\nvar RemoveMarkStep = (function (Step$$1) {\n  function RemoveMarkStep(from, to, mark) {\n    Step$$1.call(this);\n    this.from = from;\n    this.to = to;\n    this.mark = mark;\n  }\n\n  if ( Step$$1 ) RemoveMarkStep.__proto__ = Step$$1;\n  RemoveMarkStep.prototype = Object.create( Step$$1 && Step$$1.prototype );\n  RemoveMarkStep.prototype.constructor = RemoveMarkStep;\n\n  RemoveMarkStep.prototype.apply = function apply (doc) {\n    var this$1 = this;\n\n    var oldSlice = doc.slice(this.from, this.to);\n    var slice = new prosemirrorModel.Slice(mapFragment(oldSlice.content, function (node) {\n      return node.mark(this$1.mark.removeFromSet(node.marks))\n    }), oldSlice.openStart, oldSlice.openEnd);\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  };\n\n  RemoveMarkStep.prototype.invert = function invert () {\n    return new AddMarkStep(this.from, this.to, this.mark)\n  };\n\n  RemoveMarkStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted || from.pos >= to.pos) { return null }\n    return new RemoveMarkStep(from.pos, to.pos, this.mark)\n  };\n\n  RemoveMarkStep.prototype.merge = function merge (other) {\n    if (other instanceof RemoveMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      { return new RemoveMarkStep(Math.min(this.from, other.from),\n                                Math.max(this.to, other.to), this.mark) }\n  };\n\n  RemoveMarkStep.prototype.toJSON = function toJSON () {\n    return {stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  };\n\n  RemoveMarkStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\") }\n    return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  };\n\n  return RemoveMarkStep;\n}(Step));\n\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n\n// :: (number, number, Mark) → this\n// Add the given mark to the inline content between `from` and `to`.\nTransform.prototype.addMark = function(from, to, mark) {\n  var this$1 = this;\n\n  var removed = [], added = [], removing = null, adding = null;\n  this.doc.nodesBetween(from, to, function (node, pos, parent) {\n    if (!node.isInline) { return }\n    var marks = node.marks;\n    if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n      var start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n      var newSet = mark.addToSet(marks);\n\n      for (var i = 0; i < marks.length; i++) {\n        if (!marks[i].isInSet(newSet)) {\n          if (removing && removing.to == start && removing.mark.eq(marks[i]))\n            { removing.to = end; }\n          else\n            { removed.push(removing = new RemoveMarkStep(start, end, marks[i])); }\n        }\n      }\n\n      if (adding && adding.to == start)\n        { adding.to = end; }\n      else\n        { added.push(adding = new AddMarkStep(start, end, mark)); }\n    }\n  });\n\n  removed.forEach(function (s) { return this$1.step(s); });\n  added.forEach(function (s) { return this$1.step(s); });\n  return this\n};\n\n// :: (number, number, ?union<Mark, MarkType>) → this\n// Remove marks from inline nodes between `from` and `to`. When `mark`\n// is a single mark, remove precisely that mark. When it is a mark type,\n// remove all marks of that type. When it is null, remove all marks of\n// any type.\nTransform.prototype.removeMark = function(from, to, mark) {\n  var this$1 = this;\n  if ( mark === void 0 ) mark = null;\n\n  var matched = [], step = 0;\n  this.doc.nodesBetween(from, to, function (node, pos) {\n    if (!node.isInline) { return }\n    step++;\n    var toRemove = null;\n    if (mark instanceof prosemirrorModel.MarkType) {\n      var found = mark.isInSet(node.marks);\n      if (found) { toRemove = [found]; }\n    } else if (mark) {\n      if (mark.isInSet(node.marks)) { toRemove = [mark]; }\n    } else {\n      toRemove = node.marks;\n    }\n    if (toRemove && toRemove.length) {\n      var end = Math.min(pos + node.nodeSize, to);\n      for (var i = 0; i < toRemove.length; i++) {\n        var style = toRemove[i], found$1 = (void 0);\n        for (var j = 0; j < matched.length; j++) {\n          var m = matched[j];\n          if (m.step == step - 1 && style.eq(matched[j].style)) { found$1 = m; }\n        }\n        if (found$1) {\n          found$1.to = end;\n          found$1.step = step;\n        } else {\n          matched.push({style: style, from: Math.max(pos, from), to: end, step: step});\n        }\n      }\n    }\n  });\n  matched.forEach(function (m) { return this$1.step(new RemoveMarkStep(m.from, m.to, m.style)); });\n  return this\n};\n\n// :: (number, NodeType, ?ContentMatch) → this\n// Removes all marks and nodes from the content of the node at `pos`\n// that don't match the given new parent node type. Accepts an\n// optional starting [content match](#model.ContentMatch) as third\n// argument.\nTransform.prototype.clearIncompatible = function(pos, parentType, match) {\n  var this$1 = this;\n  if ( match === void 0 ) match = parentType.contentMatch;\n\n  var node = this.doc.nodeAt(pos);\n  var delSteps = [], cur = pos + 1;\n  for (var i = 0; i < node.childCount; i++) {\n    var child = node.child(i), end = cur + child.nodeSize;\n    var allowed = match.matchType(child.type, child.attrs);\n    if (!allowed) {\n      delSteps.push(new ReplaceStep(cur, end, prosemirrorModel.Slice.empty));\n    } else {\n      match = allowed;\n      for (var j = 0; j < child.marks.length; j++) { if (!parentType.allowsMarkType(child.marks[j].type))\n        { this$1.step(new RemoveMarkStep(cur, end, child.marks[j])); } }\n    }\n    cur = end;\n  }\n  if (!match.validEnd) {\n    var fill = match.fillBefore(prosemirrorModel.Fragment.empty, true);\n    this.replace(cur, cur, new prosemirrorModel.Slice(fill, 0, 0));\n  }\n  for (var i$1 = delSteps.length - 1; i$1 >= 0; i$1--) { this$1.step(delSteps[i$1]); }\n  return this\n};\n\n// :: (Node, number, ?number, ?Slice) → ?Step\n// ‘Fit’ a slice into a given position in the document, producing a\n// [step](#transform.Step) that inserts it. Will return null if\n// there's no meaningful way to insert the slice here, or inserting it\n// would be a no-op (an empty slice over an empty range).\nfunction replaceStep(doc, from, to, slice) {\n  if ( to === void 0 ) to = from;\n  if ( slice === void 0 ) slice = prosemirrorModel.Slice.empty;\n\n  if (from == to && !slice.size) { return null }\n\n  var $from = doc.resolve(from), $to = doc.resolve(to);\n  // Optimization -- avoid work if it's obvious that it's not needed.\n  if (fitsTrivially($from, $to, slice)) { return new ReplaceStep(from, to, slice) }\n  var placed = placeSlice($from, slice);\n\n  var fittedLeft = fitLeft($from, placed);\n  var fitted = fitRight($from, $to, fittedLeft);\n  if (!fitted) { return null }\n  if (fittedLeft.size != fitted.size && canMoveText($from, $to, fittedLeft)) {\n    var d = $to.depth, after = $to.after(d);\n    while (d > 1 && after == $to.end(--d)) { ++after; }\n    var fittedAfter = fitRight($from, doc.resolve(after), fittedLeft);\n    if (fittedAfter)\n      { return new ReplaceAroundStep(from, after, to, $to.end(), fittedAfter, fittedLeft.size) }\n  }\n  return fitted.size || from != to ? new ReplaceStep(from, to, fitted) : null\n}\n\n// :: (number, ?number, ?Slice) → this\n// Replace the part of the document between `from` and `to` with the\n// given `slice`.\nTransform.prototype.replace = function(from, to, slice) {\n  if ( to === void 0 ) to = from;\n  if ( slice === void 0 ) slice = prosemirrorModel.Slice.empty;\n\n  var step = replaceStep(this.doc, from, to, slice);\n  if (step) { this.step(step); }\n  return this\n};\n\n// :: (number, number, union<Fragment, Node, [Node]>) → this\n// Replace the given range with the given content, which may be a\n// fragment, node, or array of nodes.\nTransform.prototype.replaceWith = function(from, to, content) {\n  return this.replace(from, to, new prosemirrorModel.Slice(prosemirrorModel.Fragment.from(content), 0, 0))\n};\n\n// :: (number, number) → this\n// Delete the content between the given positions.\nTransform.prototype.delete = function(from, to) {\n  return this.replace(from, to, prosemirrorModel.Slice.empty)\n};\n\n// :: (number, union<Fragment, Node, [Node]>) → this\n// Insert the given content at the given position.\nTransform.prototype.insert = function(pos, content) {\n  return this.replaceWith(pos, pos, content)\n};\n\n\n\nfunction fitLeftInner($from, depth, placed, placedBelow) {\n  var content = prosemirrorModel.Fragment.empty, openEnd = 0, placedHere = placed[depth];\n  if ($from.depth > depth) {\n    var inner = fitLeftInner($from, depth + 1, placed, placedBelow || placedHere);\n    openEnd = inner.openEnd + 1;\n    content = prosemirrorModel.Fragment.from($from.node(depth + 1).copy(inner.content));\n  }\n\n  if (placedHere) {\n    content = content.append(placedHere.content);\n    openEnd = placedHere.openEnd;\n  }\n  if (placedBelow) {\n    content = content.append($from.node(depth).contentMatchAt($from.indexAfter(depth)).fillBefore(prosemirrorModel.Fragment.empty, true));\n    openEnd = 0;\n  }\n\n  return {content: content, openEnd: openEnd}\n}\n\nfunction fitLeft($from, placed) {\n  var ref = fitLeftInner($from, 0, placed, false);\n  var content = ref.content;\n  var openEnd = ref.openEnd;\n  return new prosemirrorModel.Slice(content, $from.depth, openEnd || 0)\n}\n\nfunction fitRightJoin(content, parent, $from, $to, depth, openStart, openEnd) {\n  var match, count = content.childCount, matchCount = count - (openEnd > 0 ? 1 : 0);\n  if (openStart < 0)\n    { match = parent.contentMatchAt(matchCount); }\n  else if (count == 1 && openEnd > 0)\n    { match = $from.node(depth).contentMatchAt(openStart ? $from.index(depth) : $from.indexAfter(depth)); }\n  else\n    { match = $from.node(depth).contentMatchAt($from.indexAfter(depth))\n      .matchFragment(content, count > 0 && openStart ? 1 : 0, matchCount); }\n\n  var toNode = $to.node(depth);\n  if (openEnd > 0 && depth < $to.depth) {\n    var after = toNode.content.cutByIndex($to.indexAfter(depth)).addToStart(content.lastChild);\n    var joinable$1 = match.fillBefore(after, true);\n    // Can't insert content if there's a single node stretched across this gap\n    if (joinable$1 && joinable$1.size && openStart > 0 && count == 1) { joinable$1 = null; }\n\n    if (joinable$1) {\n      var inner = fitRightJoin(content.lastChild.content, content.lastChild, $from, $to,\n                               depth + 1, count == 1 ? openStart - 1 : -1, openEnd - 1);\n      if (inner) {\n        var last = content.lastChild.copy(inner);\n        if (joinable$1.size)\n          { return content.cutByIndex(0, count - 1).append(joinable$1).addToEnd(last) }\n        else\n          { return content.replaceChild(count - 1, last) }\n      }\n    }\n  }\n  if (openEnd > 0)\n    { match = match.matchType((count == 1 && openStart > 0 ? $from.node(depth + 1) : content.lastChild).type); }\n\n  // If we're here, the next level can't be joined, so we see what\n  // happens if we leave it open.\n  var toIndex = $to.index(depth);\n  if (toIndex == toNode.childCount && !toNode.type.compatibleContent(parent.type)) { return null }\n  var joinable = match.fillBefore(toNode.content, true, toIndex);\n  if (!joinable) { return null }\n\n  if (openEnd > 0) {\n    var closed = fitRightClosed(content.lastChild, openEnd - 1, $from, depth + 1,\n                                count == 1 ? openStart - 1 : -1);\n    content = content.replaceChild(count - 1, closed);\n  }\n  content = content.append(joinable);\n  if ($to.depth > depth)\n    { content = content.addToEnd(fitRightSeparate($to, depth + 1)); }\n  return content\n}\n\nfunction fitRightClosed(node, openEnd, $from, depth, openStart) {\n  var match, content = node.content, count = content.childCount;\n  if (openStart >= 0)\n    { match = $from.node(depth).contentMatchAt($from.indexAfter(depth))\n      .matchFragment(content, openStart > 0 ? 1 : 0, count); }\n  else\n    { match = node.contentMatchAt(count); }\n\n  if (openEnd > 0) {\n    var closed = fitRightClosed(content.lastChild, openEnd - 1, $from, depth + 1,\n                                count == 1 ? openStart - 1 : -1);\n    content = content.replaceChild(count - 1, closed);\n  }\n\n  return node.copy(content.append(match.fillBefore(prosemirrorModel.Fragment.empty, true)))\n}\n\nfunction fitRightSeparate($to, depth) {\n  var node = $to.node(depth);\n  var fill = node.contentMatchAt(0).fillBefore(node.content, true, $to.index(depth));\n  if ($to.depth > depth) { fill = fill.addToEnd(fitRightSeparate($to, depth + 1)); }\n  return node.copy(fill)\n}\n\nfunction normalizeSlice(content, openStart, openEnd) {\n  while (openStart > 0 && openEnd > 0 && content.childCount == 1) {\n    content = content.firstChild.content;\n    openStart--;\n    openEnd--;\n  }\n  return new prosemirrorModel.Slice(content, openStart, openEnd)\n}\n\n// : (ResolvedPos, ResolvedPos, number, Slice) → Slice\nfunction fitRight($from, $to, slice) {\n  var fitted = fitRightJoin(slice.content, $from.node(0), $from, $to, 0, slice.openStart, slice.openEnd);\n  if (!fitted) { return null }\n  return normalizeSlice(fitted, slice.openStart, $to.depth)\n}\n\nfunction fitsTrivially($from, $to, slice) {\n  return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n    $from.parent.canReplace($from.index(), $to.index(), slice.content)\n}\n\nfunction canMoveText($from, $to, slice) {\n  if (!$to.parent.isTextblock) { return false }\n\n  var match;\n  if (!slice.openEnd) {\n    var parent = $from.node($from.depth - (slice.openStart - slice.openEnd));\n    if (!parent.isTextblock) { return false }\n    match = parent.contentMatchAt(parent.childCount);\n    if (slice.size)\n      { match = match.matchFragment(slice.content, slice.openStart ? 1 : 0); }\n  } else {\n    var parent$1 = nodeRight(slice.content, slice.openEnd);\n    if (!parent$1.isTextblock) { return false }\n    match = parent$1.contentMatchAt(parent$1.childCount);\n  }\n  match = match.matchFragment($to.parent.content, $to.index());\n  return match && match.validEnd\n}\n\nfunction nodeRight(content, depth) {\n  for (var i = 1; i < depth; i++) { content = content.lastChild.content; }\n  return content.lastChild\n}\n\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// So placeSlice splits up a slice into a number of sub-slices,\n// along with information on where they can be placed on the given\n// left-side edge. It works by walking the open side of the slice,\n// from the inside out, and trying to find a landing spot for each\n// element, by simultaneously scanning over the gap side. When no\n// place is found for an open node's content, it is left in that node.\n\n// : (ResolvedPos, Slice) → [{content: Fragment, openEnd: number, depth: number}]\nfunction placeSlice($from, slice) {\n  var frontier = new Frontier($from);\n  for (var pass = 1; slice.size && pass <= 3; pass++)\n    { slice = frontier.placeSlice(slice.content, slice.openStart, slice.openEnd, pass); }\n  while (frontier.open.length) { frontier.closeNode(); }\n  return frontier.placed\n}\n\n// Helper class that models the open side of the insert position,\n// keeping track of the content match and already inserted content\n// at each depth.\nvar Frontier = function Frontier($pos) {\n  var this$1 = this;\n\n  // : [{parent: Node, match: ContentMatch, content: Fragment, wrapper: bool, openEnd: number, depth: number}]\n  this.open = [];\n  for (var d = 0; d <= $pos.depth; d++) {\n    var parent = $pos.node(d), match = parent.contentMatchAt($pos.indexAfter(d));\n    this$1.open.push({parent: parent, match: match, content: prosemirrorModel.Fragment.empty, wrapper: false, openEnd: 0, depth: d});\n  }\n  this.placed = [];\n};\n\n// : (Fragment, number, number, number, ?Node) → Slice\n// Tries to place the content of the given slice, and returns a\n// slice containing unplaced content.\n//\n// pass 1: try to fit directly\n// pass 2: allow wrapper nodes to be introduced\n// pass 3: allow unwrapping of nodes that aren't open\nFrontier.prototype.placeSlice = function placeSlice (fragment, openStart, openEnd, pass, parent) {\n    var this$1 = this;\n\n  if (openStart > 0) {\n    var first = fragment.firstChild;\n    var inner = this.placeSlice(first.content, Math.max(0, openStart - 1),\n                                openEnd && fragment.childCount == 1 ? openEnd - 1 : 0,\n                                pass, first);\n    if (inner.content != first.content) {\n      if (inner.content.size) {\n        fragment = fragment.replaceChild(0, first.copy(inner.content));\n        openStart = inner.openStart + 1;\n      } else {\n        if (fragment.childCount == 1) { openEnd = 0; }\n        fragment = fragment.cutByIndex(1);\n        openStart = 0;\n      }\n    }\n  }\n  var result = this.placeContent(fragment, openStart, openEnd, pass, parent);\n  if (pass > 2 && result.size && openStart == 0) {\n    for (var i = 0; i < result.content.childCount; i++) {\n      var child = result.content.child(i);\n      this$1.placeContent(child.content, 0,\n                        openEnd && i == result.content.childCount.length - 1 ? openEnd - 1 : 0,\n                        pass, child);\n    }\n    result = prosemirrorModel.Fragment.empty;\n  }\n  return result\n};\n\nFrontier.prototype.placeContent = function placeContent (fragment, openStart, openEnd, pass, parent) {\n    var this$1 = this;\n\n  var i = 0;\n  // Go over the fragment's children\n  for (; i < fragment.childCount; i++) {\n    var child = fragment.child(i), placed = false, last = i == fragment.childCount - 1;\n    // Try each open node in turn, starting from the innermost\n    for (var d = this.open.length - 1; d >= 0; d--) {\n      var open = this$1.open[d], wrap = (void 0);\n\n      // If pass > 1, it is allowed to wrap the node to help find a\n      // fit, so if findWrappeing returns something, we add open\n      // nodes to the frontier for that wrapping.\n      if (pass > 1 && (wrap = open.match.findWrapping(child.type)) &&\n          !(parent && wrap.length && wrap[wrap.length - 1] == parent.type)) {\n        while (this.open.length - 1 > d) { this$1.closeNode(); }\n        for (var w = 0; w < wrap.length; w++) {\n          open.match = open.match.matchType(wrap[w]);\n          d++;\n          open = {parent: wrap[w].create(),\n                  match: wrap[w].contentMatch,\n                  content: prosemirrorModel.Fragment.empty, wrapper: true, openEnd: 0, depth: d + w};\n          this$1.open.push(open);\n        }\n      }\n\n      // See if the child fits here\n      var match = open.match.matchType(child.type);\n      if (!match) {\n        var fill = open.match.fillBefore(prosemirrorModel.Fragment.from(child));\n        if (fill) {\n          for (var j = 0; j < fill.childCount; j++) {\n            var ch = fill.child(j);\n            this$1.addNode(open, ch, 0);\n            match = open.match.matchFragment(ch);\n          }\n        } else if (parent && open.match.matchType(parent.type)) {\n          // Don't continue looking further up if the parent node\n          // would fit here.\n          break\n        } else {\n          continue\n        }\n      }\n\n      // Close open nodes above this one, since we're starting to\n      // add to this.\n      while (this.open.length - 1 > d) { this$1.closeNode(); }\n      // Strip marks from the child or close its start when necessary\n      child = child.mark(open.parent.type.allowedMarks(child.marks));\n      if (openStart) {\n        child = closeNodeStart(child, openStart, last ? openEnd : 0);\n        openStart = 0;\n      }\n      // Add the child to this open node and adjust its metadata\n      this$1.addNode(open, child, last ? openEnd : 0);\n      open.match = match;\n      if (last) { openEnd = 0; }\n      placed = true;\n      break\n    }\n    // As soon as we've failed to place a node we stop looking at\n    // later nodes\n    if (!placed) { break }\n  }\n  // Close the current open node if it's not the the root and we\n  // either placed up to the end of the node or the the current\n  // slice depth's node type matches the open node's type\n  if (this.open.length > 1 &&\n      (i > 0 && i == fragment.childCount ||\n       parent && this.open[this.open.length - 1].parent.type == parent.type))\n    { this.closeNode(); }\n\n  return new prosemirrorModel.Slice(fragment.cutByIndex(i), openStart, openEnd)\n};\n\nFrontier.prototype.addNode = function addNode (open, node, openEnd) {\n  open.content = closeFragmentEnd(open.content, open.openEnd).addToEnd(node);\n  open.openEnd = openEnd;\n};\n\nFrontier.prototype.closeNode = function closeNode () {\n  var open = this.open.pop();\n  if (open.content.size == 0) {\n    // Nothing here\n  } else if (open.wrapper) {\n    this.addNode(this.open[this.open.length - 1], open.parent.copy(open.content), open.openEnd + 1);\n  } else {\n    this.placed[open.depth] = {depth: open.depth, content: open.content, openEnd: open.openEnd};\n  }\n};\n\nfunction closeNodeStart(node, openStart, openEnd) {\n  var content = node.content;\n  if (openStart > 1) {\n    var first = closeNodeStart(node.firstChild, openStart - 1, node.childCount == 1 ? openEnd - 1 : 0);\n    content = node.content.replaceChild(0, first);\n  }\n  var fill = node.type.contentMatch.fillBefore(content, openEnd == 0);\n  return node.copy(fill.append(content))\n}\n\nfunction closeNodeEnd(node, depth) {\n  var content = node.content;\n  if (depth > 1) {\n    var last = closeNodeEnd(node.lastChild, depth - 1);\n    content = node.content.replaceChild(node.childCount - 1, last);\n  }\n  var fill = node.contentMatchAt(node.childCount).fillBefore(prosemirrorModel.Fragment.empty, true);\n  return node.copy(content.append(fill))\n}\n\nfunction closeFragmentEnd(fragment, depth) {\n  return depth ? fragment.replaceChild(fragment.childCount - 1, closeNodeEnd(fragment.lastChild, depth)) : fragment\n}\n\n// :: (number, number, Slice) → this\n// Replace a range of the document with a given slice, using `from`,\n// `to`, and the slice's [`openStart`](#model.Slice.openStart) property\n// as hints, rather than fixed start and end points. This method may\n// grow the replaced area or close open nodes in the slice in order to\n// get a fit that is more in line with WYSIWYG expectations, by\n// dropping fully covered parent nodes of the replaced region when\n// they are marked [non-defining](#model.NodeSpec.defining), or\n// including an open parent node from the slice that _is_ marked as\n// [defining](#model.NodeSpec.defining).\n//\n// This is the method, for example, to handle paste. The similar\n// [`replace`](#transform.Transform.replace) method is a more\n// primitive tool which will _not_ move the start and end of its given\n// range, and is useful in situations where you need more precise\n// control over what happens.\nTransform.prototype.replaceRange = function(from, to, slice) {\n  var this$1 = this;\n\n  if (!slice.size) { return this.deleteRange(from, to) }\n\n  var $from = this.doc.resolve(from), $to = this.doc.resolve(to);\n  if (fitsTrivially($from, $to, slice))\n    { return this.step(new ReplaceStep(from, to, slice)) }\n\n  var targetDepths = coveredDepths($from, this.doc.resolve(to));\n  // Can't replace the whole document, so remove 0 if it's present\n  if (targetDepths[targetDepths.length - 1] == 0) { targetDepths.pop(); }\n  // Negative numbers represent not expansion over the whole node at\n  // that depth, but replacing from $from.before(-D) to $to.pos.\n  var preferredTarget = -($from.depth + 1);\n  targetDepths.unshift(preferredTarget);\n  // This loop picks a preferred target depth, if one of the covering\n  // depths is not outside of a defining node, and adds negative\n  // depths for any depth that has $from at its start and does not\n  // cross a defining node.\n  for (var d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n    var spec = $from.node(d).type.spec;\n    if (spec.defining || spec.isolating) { break }\n    if (targetDepths.indexOf(d) > -1) { preferredTarget = d; }\n    else if ($from.before(d) == pos) { targetDepths.splice(1, 0, -d); }\n  }\n  // Try to fit each possible depth of the slice into each possible\n  // target depth, starting with the preferred depths.\n  var preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n\n  var leftNodes = [], preferredDepth = slice.openStart;\n  for (var content = slice.content, i = 0;; i++) {\n    var node = content.firstChild;\n    leftNodes.push(node);\n    if (i == slice.openStart) { break }\n    content = node.content;\n  }\n  // Back up if the node directly above openStart, or the node above\n  // that separated only by a non-defining textblock node, is defining.\n  if (preferredDepth > 0 && leftNodes[preferredDepth - 1].type.spec.defining &&\n      $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 1].type)\n    { preferredDepth -= 1; }\n  else if (preferredDepth >= 2 && leftNodes[preferredDepth - 1].isTextblock && leftNodes[preferredDepth - 2].type.spec.defining &&\n           $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 2].type)\n    { preferredDepth -= 2; }\n\n  for (var j = slice.openStart; j >= 0; j--) {\n    var openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n    var insert = leftNodes[openDepth];\n    if (!insert) { continue }\n    for (var i$1 = 0; i$1 < targetDepths.length; i$1++) {\n      // Loop over possible expansion levels, starting with the\n      // preferred one\n      var targetDepth = targetDepths[(i$1 + preferredTargetIndex) % targetDepths.length], expand = true;\n      if (targetDepth < 0) { expand = false; targetDepth = -targetDepth; }\n      var parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n      if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n        { return this$1.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to,\n                            new prosemirrorModel.Slice(closeFragment(slice.content, 0, slice.openStart, openDepth),\n                                      openDepth, slice.openEnd)) }\n    }\n  }\n\n  return this.replace(from, to, slice)\n};\n\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n  if (depth < oldOpen) {\n    var first = fragment.firstChild;\n    fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n  }\n  if (depth > newOpen)\n    { fragment = parent.contentMatchAt(0).fillBefore(fragment).append(fragment); }\n  return fragment\n}\n\n// :: (number, number, Node) → this\n// Replace the given range with a node, but use `from` and `to` as\n// hints, rather than precise positions. When from and to are the same\n// and are at the start or end of a parent node in which the given\n// node doesn't fit, this method may _move_ them out towards a parent\n// that does allow the given node to be placed. When the given range\n// completely covers a parent node, this method may completely replace\n// that parent node.\nTransform.prototype.replaceRangeWith = function(from, to, node) {\n  if (!node.isInline && from == to && this.doc.resolve(from).parent.content.size) {\n    var point = insertPoint(this.doc, from, node.type);\n    if (point != null) { from = to = point; }\n  }\n  return this.replaceRange(from, to, new prosemirrorModel.Slice(prosemirrorModel.Fragment.from(node), 0, 0))\n};\n\n// :: (number, number) → this\n// Delete the given range, expanding it to cover fully covered\n// parent nodes until a valid replace is found.\nTransform.prototype.deleteRange = function(from, to) {\n  var this$1 = this;\n\n  var $from = this.doc.resolve(from), $to = this.doc.resolve(to);\n  var covered = coveredDepths($from, $to);\n  for (var i = 0; i < covered.length; i++) {\n    var depth = covered[i], last = i == covered.length - 1;\n    if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n      { return this$1.delete($from.start(depth), $to.end(depth)) }\n    if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n      { return this$1.delete($from.before(depth), $to.after(depth)) }\n  }\n  for (var d = 1; d <= $from.depth; d++) {\n    if (from - $from.start(d) == $from.depth - d && to > $from.end(d))\n      { return this$1.delete($from.before(d), to) }\n  }\n  return this.delete(from, to)\n};\n\n// : (ResolvedPos, ResolvedPos) → [number]\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n  var result = [], minDepth = Math.min($from.depth, $to.depth);\n  for (var d = minDepth; d >= 0; d--) {\n    var start = $from.start(d);\n    if (start < $from.pos - ($from.depth - d) ||\n        $to.end(d) > $to.pos + ($to.depth - d) ||\n        $from.node(d).type.spec.isolating ||\n        $to.node(d).type.spec.isolating) { break }\n    if (start == $to.start(d)) { result.push(d); }\n  }\n  return result\n}\n\nexports.Transform = Transform;\nexports.TransformError = TransformError;\nexports.Step = Step;\nexports.StepResult = StepResult;\nexports.joinPoint = joinPoint;\nexports.canJoin = canJoin;\nexports.canSplit = canSplit;\nexports.insertPoint = insertPoint;\nexports.liftTarget = liftTarget;\nexports.findWrapping = findWrapping;\nexports.StepMap = StepMap;\nexports.MapResult = MapResult;\nexports.Mapping = Mapping;\nexports.AddMarkStep = AddMarkStep;\nexports.RemoveMarkStep = RemoveMarkStep;\nexports.ReplaceStep = ReplaceStep;\nexports.ReplaceAroundStep = ReplaceAroundStep;\nexports.replaceStep = replaceStep;\n//# sourceMappingURL=index.js.map\n"},"lineCount":1701}},"hash":"e1865c4b853e08ff486f75a78d01ddb0","cacheData":{"env":{}}}