{"dependencies":[{"name":"/Users/ervinewell/Projects/hedge-editor/package.json","includedInParent":true,"mtime":1527090820000},{"name":"/Users/ervinewell/Projects/hedge-editor/node_modules/prosemirror-keymap/package.json","includedInParent":true,"mtime":1519411596000},{"name":"w3c-keyname","loc":{"line":7,"column":38}},{"name":"prosemirror-state","loc":{"line":8,"column":31}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar keyName = _interopDefault(require('w3c-keyname'));\nvar prosemirrorState = require('prosemirror-state');\n\n// declare global: navigator\n\nvar mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false;\n\nfunction normalizeKeyName(name) {\n  var parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n  if (result == \"Space\") { result = \" \"; }\n  var alt, ctrl, shift, meta;\n  for (var i = 0; i < parts.length - 1; i++) {\n    var mod = parts[i];\n    if (/^(cmd|meta|m)$/i.test(mod)) { meta = true; }\n    else if (/^a(lt)?$/i.test(mod)) { alt = true; }\n    else if (/^(c|ctrl|control)$/i.test(mod)) { ctrl = true; }\n    else if (/^s(hift)?$/i.test(mod)) { shift = true; }\n    else if (/^mod$/i.test(mod)) { if (mac) { meta = true; } else { ctrl = true; } }\n    else { throw new Error(\"Unrecognized modifier name: \" + mod) }\n  }\n  if (alt) { result = \"Alt-\" + result; }\n  if (ctrl) { result = \"Ctrl-\" + result; }\n  if (meta) { result = \"Meta-\" + result; }\n  if (shift) { result = \"Shift-\" + result; }\n  return result\n}\n\nfunction normalize(map) {\n  var copy = Object.create(null);\n  for (var prop in map) { copy[normalizeKeyName(prop)] = map[prop]; }\n  return copy\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) { name = \"Alt-\" + name; }\n  if (event.ctrlKey) { name = \"Ctrl-\" + name; }\n  if (event.metaKey) { name = \"Meta-\" + name; }\n  if (shift !== false && event.shiftKey) { name = \"Shift-\" + name; }\n  return name\n}\n\n// :: (Object) → Plugin\n// Create a keymap plugin for the given set of bindings.\n//\n// Bindings should map key names to [command](#commands)-style\n// functions, which will be called with `(EditorState, dispatch,\n// EditorView)` arguments, and should return true when they've handled\n// the key. Note that the view argument isn't part of the command\n// protocol, but can be used as an escape hatch if a binding needs to\n// directly interact with the UI.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`—a key\n// identifier prefixed with zero or more modifiers. Key identifiers\n// are based on the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized. For characters that are created by holding\n// shift, the `Shift-` prefix is implied, and should not be added\n// explicitly.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap plugins to an editor. The order in\n// which they appear determines their precedence (the ones early in\n// the array get to dispatch first).\nfunction keymap(bindings) {\n  return new prosemirrorState.Plugin({props: {handleKeyDown: keydownHandler(bindings)}})\n}\n\n// :: (Object) → (view: EditorView, event: dom.Event) → bool\n// Given a set of bindings (using the same format as\n// [`keymap`](#keymap.keymap), return a [keydown\n// handler](#view.EditorProps.handleKeyDown) handles them.\nfunction keydownHandler(bindings) {\n  var map = normalize(bindings);\n  return function(view, event) {\n    var name = keyName(event), isChar = name.length == 1 && name != \" \", baseName;\n    var direct = map[modifiers(name, event, !isChar)];\n    if (direct && direct(view.state, view.dispatch, view)) { return true }\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n        (baseName = keyName.base[event.keyCode]) && baseName != name) {\n      var fromCode = map[modifiers(baseName, event, true)];\n      if (fromCode && fromCode(view.state, view.dispatch, view)) { return true }\n    }\n    return false\n  }\n}\n\nexports.keymap = keymap;\nexports.keydownHandler = keydownHandler;\n//# sourceMappingURL=keymap.js.map\n","map":{"mappings":[{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/prosemirror-keymap/dist/keymap.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}}],"sources":{"node_modules/prosemirror-keymap/dist/keymap.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar keyName = _interopDefault(require('w3c-keyname'));\nvar prosemirrorState = require('prosemirror-state');\n\n// declare global: navigator\n\nvar mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false;\n\nfunction normalizeKeyName(name) {\n  var parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n  if (result == \"Space\") { result = \" \"; }\n  var alt, ctrl, shift, meta;\n  for (var i = 0; i < parts.length - 1; i++) {\n    var mod = parts[i];\n    if (/^(cmd|meta|m)$/i.test(mod)) { meta = true; }\n    else if (/^a(lt)?$/i.test(mod)) { alt = true; }\n    else if (/^(c|ctrl|control)$/i.test(mod)) { ctrl = true; }\n    else if (/^s(hift)?$/i.test(mod)) { shift = true; }\n    else if (/^mod$/i.test(mod)) { if (mac) { meta = true; } else { ctrl = true; } }\n    else { throw new Error(\"Unrecognized modifier name: \" + mod) }\n  }\n  if (alt) { result = \"Alt-\" + result; }\n  if (ctrl) { result = \"Ctrl-\" + result; }\n  if (meta) { result = \"Meta-\" + result; }\n  if (shift) { result = \"Shift-\" + result; }\n  return result\n}\n\nfunction normalize(map) {\n  var copy = Object.create(null);\n  for (var prop in map) { copy[normalizeKeyName(prop)] = map[prop]; }\n  return copy\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) { name = \"Alt-\" + name; }\n  if (event.ctrlKey) { name = \"Ctrl-\" + name; }\n  if (event.metaKey) { name = \"Meta-\" + name; }\n  if (shift !== false && event.shiftKey) { name = \"Shift-\" + name; }\n  return name\n}\n\n// :: (Object) → Plugin\n// Create a keymap plugin for the given set of bindings.\n//\n// Bindings should map key names to [command](#commands)-style\n// functions, which will be called with `(EditorState, dispatch,\n// EditorView)` arguments, and should return true when they've handled\n// the key. Note that the view argument isn't part of the command\n// protocol, but can be used as an escape hatch if a binding needs to\n// directly interact with the UI.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`—a key\n// identifier prefixed with zero or more modifiers. Key identifiers\n// are based on the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized. For characters that are created by holding\n// shift, the `Shift-` prefix is implied, and should not be added\n// explicitly.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap plugins to an editor. The order in\n// which they appear determines their precedence (the ones early in\n// the array get to dispatch first).\nfunction keymap(bindings) {\n  return new prosemirrorState.Plugin({props: {handleKeyDown: keydownHandler(bindings)}})\n}\n\n// :: (Object) → (view: EditorView, event: dom.Event) → bool\n// Given a set of bindings (using the same format as\n// [`keymap`](#keymap.keymap), return a [keydown\n// handler](#view.EditorProps.handleKeyDown) handles them.\nfunction keydownHandler(bindings) {\n  var map = normalize(bindings);\n  return function(view, event) {\n    var name = keyName(event), isChar = name.length == 1 && name != \" \", baseName;\n    var direct = map[modifiers(name, event, !isChar)];\n    if (direct && direct(view.state, view.dispatch, view)) { return true }\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n        (baseName = keyName.base[event.keyCode]) && baseName != name) {\n      var fromCode = map[modifiers(baseName, event, true)];\n      if (fromCode && fromCode(view.state, view.dispatch, view)) { return true }\n    }\n    return false\n  }\n}\n\nexports.keymap = keymap;\nexports.keydownHandler = keydownHandler;\n//# sourceMappingURL=keymap.js.map\n"},"lineCount":104}},"hash":"57543ddf3fff8b33a16152ef7ac1db21","cacheData":{"env":{}}}